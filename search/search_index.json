{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Cours SNT/NSI","text":"<p>Cours de NSI pour les classes de seconde, premi\u00e8re et terminale.</p>"},{"location":"#support-de-cours","title":"Support de cours","text":""},{"location":"#snt-seconde","title":"SNT Seconde","text":"<p>lien</p>"},{"location":"#nsi-premiere","title":"NSI Premi\u00e8re","text":"<p>lien</p>"},{"location":"#nsi-terminale","title":"NSI Terminale","text":"<p>lien</p>"},{"location":"#autres-ressources","title":"Autres ressources","text":"<p>lien</p>"},{"location":"#sommaire","title":"Sommaire","text":"<ul> <li>I Seconde<ul> <li>I.1. Histoire de l'informatique</li> <li>I.2. Internet</li> <li>I.3. Le Web</li> <li>I.4. Donn\u00e9es structur\u00e9es</li> <li>I.5. Localisation, cartographie et mobilit\u00e9</li> <li>I.6. Informatique embarqu\u00e9e et objets connect\u00e9s</li> <li>I.7. La photographie num\u00e9rique</li> <li>I.8. Les r\u00e9seaux sociaux</li> <li>I.9. Base du langage Python</li> <li>I.+ Aide python</li> </ul> </li> <li>II Premi\u00e8re <ul> <li>II.1. Repr\u00e9sentation des donn\u00e9es : types et valeurs de base</li> <li>II.2. Langages et programmation<ul> <li>II.2.1. Constructions \u00e9l\u00e9mentaires des langages de programmation, fonctions</li> <li>II.2.2. Dictionnaires</li> </ul> </li> <li>II.3. Syst\u00e8mes d'exploitation</li> <li>II.4. Interactions homme - machine sur le Web</li> <li>II.5. Recherche dichotomique</li> <li>II.6. Repr\u00e9sentation des donn\u00e9es : types construits</li> <li>II.7. Algorithmes de tri</li> <li>II.8. Traitement de donn\u00e9es en tables</li> <li>II.9. R\u00e9seaux</li> <li>II.10. Algorithmes gloutons</li> <li>II.11. Algorithme des k-plus proches voisins</li> <li>II.+ Aide python</li> </ul> </li> <li>III Terminale<ul> <li>III.1. Programmation orient\u00e9e objet</li> <li>III.1. R\u00e9cursivit\u00e9</li> <li>III.2. Base de donn\u00e9es</li> <li>III.3. Architecture d\u2019une machine</li> <li>III.4. Structures lin\u00e9aires de donn\u00e9es : Piles et Files</li> <li>III.5. Arbres<ul> <li>III.5.2 Arbres binaires de recherche</li> </ul> </li> <li>III.6. Langage SQL</li> <li>III.7. M\u00e9thode diviser pour r\u00e9gner</li> <li>III.8. Paradigmes de programmation</li> <li>III.9. Gestion des processus et des ressources par un syst\u00e8me d\u2019exploitation</li> <li>III.10. Programmation dynamique</li> <li>III.11. S\u00e9curisation des communications</li> <li>III.12. Graphes</li> <li>III.13. Algorithmes et protocoles de routage dans les r\u00e9seaux</li> <li>III.14. Documentation et gestion des bugs</li> <li>III.15. Algorithmes de recherche textuelle</li> </ul> </li> <li>IV Autres ressources<ul> <li>IV.1. Cryptographie</li> <li>IV.2. Complexit\u00e9</li> <li>IV.3. Th\u00e9orie des langages</li> <li>IV.4. Tris en complexit\u00e9 lin\u00e9aire</li> <li>IV.5. Programmation fonctionnelle</li> <li>IV.6. Programmation logique</li> <li>IV.7. TDD : Test Driven Development</li> <li>IV.8. Git</li> <li>IV.9. Programmation concurrente</li> <li>IV.10. Programmation parall\u00e8le</li> <li>IV.11. Tests unitaires</li> <li>IV.12. UML</li> <li>IV.13. Conception orient\u00e9e objet</li> </ul> </li> </ul> <p>Autres ressources - Aide python - Tutle - Pygames</p> <p>Contact mail : antoine.baesen.etu@univ-lille.fr</p>"},{"location":"definitions/","title":"Definition","text":""},{"location":"definitions/#graphes","title":"Graphes","text":"<ul> <li>Graphe : Ensemble de sommets et d'arcs</li> <li>Chaine (chemin en orient\u00e9) : Suite de sommets par lesquels passer, suite d'aretes cons\u00e9cutives reliant un sommet \u00e0 un autre (dans un graphe non orient\u00e9)</li> <li>Chaine Eulerienne : Chaine si tous les sommets sont pairs, ou tous sont pairs sauf 2 (pour faire une chaine passant par toutes les arretes une seule fois).</li> <li>Graphe orient\u00e9 : Graphe dont les arcs ont une direction</li> <li>Graphe pond\u00e9r\u00e9 : Graphe dont les arcs ont un poids</li> <li>Sommet : \u00c9l\u00e9ment d'un graphe pouvant \u00eatre reli\u00e9 \u00e0 d'autres sommets</li> <li>Arete (arc en orient\u00e9) : Lien non orient\u00e9 entre deux sommets</li> <li>Degr\u00e9 entrant : Nombre d'arc dont la finalit\u00e9 est ce sommet</li> <li>Degr\u00e9 sortant : Nombre d'arc dont la source est ce sommet</li> <li>Degr\u00e9 (d'un sommet) : Somme des degr\u00e9s entrant et sortant d'un sommet</li> <li>Arbre : Graphe connexe sans cycle</li> <li>Connexe (composante) : Graphe dans lequel il existe un chemin entre chaque paire de sommets</li> <li>Composante (d'un graphe) : Sous-graphe</li> <li>Fortement connexe (graphe) : Si tout le graphe est connexe</li> <li>Graphe complet : Graphe dans lequel il existe un arc entre chaque paire de sommets</li> <li>Graphe simple : Graphe sans boucle ni arc multiple</li> <li>Graphe biparti : Graphe dont l'ensemble des sommets peut \u00eatre divis\u00e9 en deux sous-ensembles disjoints tels que chaque arc relie un sommet d'un sous-ensemble \u00e0 un sommet de l'autre</li> <li>Cycle (circuit pour orient\u00e9) : Chemin dont le sommet de d\u00e9part est le m\u00eame que le sommet d'arriv\u00e9e</li> <li>Chemin simple : Chemin sans sommet r\u00e9p\u00e9t\u00e9</li> <li>Chemin \u00e9l\u00e9mentaire : Chemin simple sans arc r\u00e9p\u00e9t\u00e9</li> <li>Chemin eul\u00e9rien : Chemin passant par chaque arc exactement une fois</li> <li>Circuit eul\u00e9rien : Chemin eul\u00e9rien dont le sommet de d\u00e9part est le m\u00eame que le sommet d'arriv\u00e9e</li> <li>Graphe eul\u00e9rien : Graphe contenant un circuit eul\u00e9rien</li> <li>Graphe hamiltonien : Graphe contenant un cycle passant par chaque sommet exactement une fois</li> <li>Graphe planaire : Graphe pouvant \u00eatre dessin\u00e9 dans le plan sans que deux arcs ne se croisent</li> </ul>"},{"location":"definitions/#algorithmique","title":"Algorithmique","text":"<ul> <li>Donn\u00e9e : Valeur utilis\u00e9e par un programme</li> <li>Programme : ensemble d'instructions et d'op\u00e9rations destin\u00e9es \u00e0 \u00eatre ex\u00e9cut\u00e9es par un ordinateur</li> <li>Algorithme : Suite finie d'instructions permettant de r\u00e9soudre un probl\u00e8me</li> <li>Algorithme glouton : Algorithme qui r\u00e9sout un probl\u00e8me en faisant des choix locaux optimaux</li> <li>Algorithme de force brute : Algorithme qui r\u00e9sout un probl\u00e8me en testant toutes les solutions possibles</li> <li>Dictionnaire : Structure de donn\u00e9es associant une cl\u00e9 \u00e0 une valeur</li> <li>File : Structure de donn\u00e9es FIFO</li> <li>Pile : Structure de donn\u00e9es LIFO</li> <li>Variable : Emplacement de m\u00e9moire contenant une valeur</li> <li>Tableau : Structure de donn\u00e9es contenant une s\u00e9quence de valeurs de taille fixe</li> <li>Liste : Structure de donn\u00e9es contenant une s\u00e9quence de valeurs de taille variable</li> <li>Pointeur : Variable contenant l'adresse d'une autre variable</li> <li>Boucle : Structure de contr\u00f4le r\u00e9p\u00e9tant un bloc d'instructions</li> <li>Condition : Structure de contr\u00f4le ex\u00e9cutant un bloc d'instructions si une condition est vraie</li> <li>Bool\u00e9en : Type de donn\u00e9e pouvant prendre les valeurs <code>vrai</code> ou <code>faux</code></li> <li>Entier : Type de donn\u00e9e repr\u00e9sentant un nombre entier</li> <li>Flottant : Type de donn\u00e9e repr\u00e9sentant un nombre \u00e0 virgule flottante</li> <li>Chaine de caract\u00e8res : Type de donn\u00e9e repr\u00e9sentant une s\u00e9quence de caract\u00e8res</li> <li>Fonction : une portion de code informatique nomm\u00e9e, qui accomplit une t\u00e2che sp\u00e9cifique</li> <li>Proc\u00e9dure : Fonction ne retournant pas de valeur</li> <li>R\u00e9cursivit\u00e9 : Appel d'une fonction par elle-m\u00eame</li> <li>Tri : Algorithme r\u00e9ordonnant une s\u00e9quence de valeurs</li> <li>Recherche : Algorithme trouvant une valeur dans une s\u00e9quence</li> <li>Complexit\u00e9 : Mesure de la quantit\u00e9 de ressources n\u00e9cessaires \u00e0 l'ex\u00e9cution d'un algorithme</li> <li>Calculabilit\u00e9 : Propri\u00e9t\u00e9 d'un probl\u00e8me pouvant \u00eatre r\u00e9solu par un algorithme</li> <li>D\u00e9cidabilit\u00e9 : Propri\u00e9t\u00e9 d'un probl\u00e8me pouvant \u00eatre r\u00e9solu par un algorithme donnant une r\u00e9ponse correcte</li> <li>NP-compl\u00e9tude : Propri\u00e9t\u00e9 d'un probl\u00e8me pour lequel il n'existe pas d'algorithme efficace connu</li> <li>Heuristique : Algorithme donnant une solution approch\u00e9e \u00e0 un probl\u00e8me</li> <li>Type : Cat\u00e9gorie de valeurs partageant des propri\u00e9t\u00e9s communes</li> <li>Type de base : Type de donn\u00e9e primitif</li> <li>Compl\u00e9ment \u00e0 2 : Repr\u00e9sentation binaire d'un nombre n\u00e9gatif (inversion des bits et ajout de 1, ex : -3 = 1101 -&gt; 0010 + 1 = 0011, c'est aussi $2^(n+1)$ - la valeur sign\u00e9e : 16 - 13)</li> </ul>"},{"location":"definitions/#base-de-donnees","title":"Base de donn\u00e9es","text":"<ul> <li>Base de donn\u00e9es : Ensemble de donn\u00e9es organis\u00e9es</li> <li>Syst\u00e8me de gestion de base de donn\u00e9es (SGBD) : Logiciel permettant de stocker et de manipuler des donn\u00e9es</li> <li>MCD : Mod\u00e8le Conceptuel de Donn\u00e9es, sch\u00e9ma conceptuel d'une base de donn\u00e9es</li> <li>MLD : Mod\u00e8le Logique de Donn\u00e9es, sch\u00e9ma logique d'une base de donn\u00e9es</li> <li>Alg\u00e8bre relationnelle : Langage permettant de manipuler des relations</li> <li>SQL : Structured Query Language, langage permettant de manipuler des bases de donn\u00e9es</li> <li>Relation : Table de base de donn\u00e9es, repr\u00e9sentation d'une entit\u00e9 et de ses attributs</li> <li>Attribut : Colonne d'une relation, caract\u00e9ristique d'une entit\u00e9</li> <li>Cl\u00e9 primaire : Attribut unique identifiant une entit\u00e9</li> <li>Cl\u00e9 \u00e9trang\u00e8re : Attribut faisant r\u00e9f\u00e9rence \u00e0 une cl\u00e9 primaire d'une autre relation</li> <li>Index : Structure de donn\u00e9es acc\u00e9l\u00e9rant la recherche dans une base de donn\u00e9es</li> <li>Jointure : Op\u00e9ration combinant les lignes de deux relations</li> <li>Vue : Requ\u00eate stock\u00e9e dans une base de donn\u00e9es</li> <li>Transaction : Ensemble d'op\u00e9rations devant \u00eatre ex\u00e9cut\u00e9es de mani\u00e8re atomique</li> <li>ACID : Propri\u00e9t\u00e9s d'une transaction (Atomicit\u00e9, Coh\u00e9rence, Isolation, Durabilit\u00e9)</li> <li>Normalisation : Processus permettant de structurer une base de donn\u00e9es</li> </ul>"},{"location":"definitions/#reseaux","title":"R\u00e9seaux","text":"<ul> <li>R\u00e9seau : Ensemble d'ordinateurs interconnect\u00e9s</li> <li>Protocole : Ensemble de r\u00e8gles permettant la communication entre ordinateurs</li> <li>Mod\u00e8le OSI : Mod\u00e8le de r\u00e9f\u00e9rence pour les r\u00e9seaux informatiques (Open Systems Interconnection) :</li> </ul> <p>Couche physique : Transmission de bits Couche liaison : Transmission de trames Couche r\u00e9seau : Transmission de paquets Couche transport : Transmission de segments Couche session : Gestion des sessions Couche pr\u00e9sentation : Gestion des donn\u00e9es Couche application : Applications</p> <ul> <li>Mod\u00e8le TCP/IP : Mod\u00e8le de r\u00e9f\u00e9rence pour les r\u00e9seaux informatiques (Transmission Control Protocol/Internet Protocol)</li> <li>Adresse IP : Identifiant unique d'un ordinateur sur un r\u00e9seau</li> <li>Masque de sous-r\u00e9seau : Valeur permettant de diviser une adresse IP en deux parties</li> <li>Passerelle : Ordinateur permettant de relier deux r\u00e9seaux</li> <li>DNS : Domain Name System, syst\u00e8me permettant de traduire un nom de domaine en adresse IP</li> <li>DHCP : Dynamic Host Configuration Protocol, protocole permettant d'attribuer dynamiquement des adresses IP</li> <li>NAT : Network Address Translation, technique permettant de traduire des adresses IP</li> <li>Web : Service permettant de consulter des pages sur Internet</li> <li>HTTP : HyperText Transfer Protocol, protocole permettant de transf\u00e9rer des pages web</li> <li>Internet : R\u00e9seau mondial d'ordinateurs interconnect\u00e9s</li> <li>Intranet : R\u00e9seau interne \u00e0 une organisation</li> <li>Routeur : Appareil permettant de relier deux r\u00e9seaux</li> <li>Routage : Processus permettant de d\u00e9terminer le chemin optimal entre deux ordinateurs</li> <li>Switch : Appareil permettant de relier plusieurs ordinateurs (commutateur)</li> </ul>"},{"location":"definitions/#materiel","title":"Mat\u00e9riel","text":"<ul> <li>Ordinateur : Machine ex\u00e9cutant des programmes</li> <li>Processeur : Composant d'un ordinateur ex\u00e9cutant des instructions</li> <li>M\u00e9moire : Composant d'un ordinateur stockant des donn\u00e9es</li> <li>Disque dur : Composant d'un ordinateur stockant des donn\u00e9es de mani\u00e8re permanente</li> <li>Carte m\u00e8re : Composant d'un ordinateur connectant les autres composants</li> <li>Carte graphique : (GPU) Composant d'un ordinateur traitant les calculs graphiques</li> <li>Ordonnanceur : Composant d'un ordinateur g\u00e9rant l'ex\u00e9cution des programmes</li> <li>Syst\u00e8me d'exploitation : Logiciel g\u00e9rant les ressources d'un ordinateur</li> <li>Logiciel : Programme ex\u00e9cut\u00e9 par un ordinateur</li> <li>IHM : Interface Homme-Machine, tout ce qui permet \u00e0 un utilisateur de communiquer avec une machine</li> <li>API : Interface de programmation d'application, ensemble de fonctions permettant \u00e0 un programme d'interagir avec un autre programme</li> <li>IDE : Environnement de d\u00e9veloppement int\u00e9gr\u00e9, logiciel regroupant des outils pour d\u00e9velopper des programmes</li> <li>Langage de programmation : Langage permettant d'\u00e9crire des programmes</li> <li>Compilation : Transformation d'un programme \u00e9crit dans un langage de programmation en un programme ex\u00e9cutable</li> <li>Interpr\u00e9tation : Ex\u00e9cution d'un programme \u00e9crit dans un langage de programmation sans transformation pr\u00e9alable</li> <li>Language machine : Langage compr\u00e9hensible par un processeur</li> <li>Langage de haut niveau : Langage compr\u00e9hensible par un humain</li> <li>ROM : M\u00e9moire morte, m\u00e9moire non volatile = m\u00e9moire de stockage</li> <li>RAM : M\u00e9moire vive, m\u00e9moire volatile = m\u00e9moire de travail</li> <li>Cache : M\u00e9moire rapide, m\u00e9moire interm\u00e9diaire entre la RAM et le processeur</li> <li>Bus : Ensemble de fils reliant les composants d'un ordinateur (ex: bus de donn\u00e9es, bus d'adresse)</li> <li>Registre : Emplacement de m\u00e9moire dans un processeur</li> <li>Horloge : Signal p\u00e9riodique r\u00e9gulant le fonctionnement d'un ordinateur</li> <li>BIOS : Logiciel de base d'un ordinateur (Basic Input/Output System)</li> <li>SATA : Interface de connexion pour les disques durs (Serial Advanced Technology Attachment)</li> <li>USB : Interface de connexion pour les p\u00e9riph\u00e9riques (Universal Serial Bus)</li> <li>RISC : Architecture de processeur avec un jeu d'instructions r\u00e9duit (Reduced Instruction Set Computing)</li> <li>CISC : Architecture de processeur avec un jeu d'instructions complexe (Complex Instruction Set Computing)</li> </ul>"},{"location":"definitions/#poo","title":"POO","text":"<ul> <li>Programmation orient\u00e9e objet : Paradigme de programmation bas\u00e9 sur la notion d'objets</li> <li>Objet : Instance d'une classe</li> <li>Classe : Mod\u00e8le d\u00e9finissant les attributs et les m\u00e9thodes d'un objet</li> <li>Attribut : Caract\u00e9ristique d'un objet</li> <li>M\u00e9thode : Fonction associ\u00e9e \u00e0 une classe</li> <li>H\u00e9ritage : Relation entre une classe et ses sous-classes</li> <li>Polymorphisme : Capacit\u00e9 d'un objet \u00e0 prendre plusieurs formes (ex: surcharge, red\u00e9finition)</li> <li>Surcharge : D\u00e9finition de plusieurs m\u00e9thodes avec le m\u00eame nom mais des param\u00e8tres diff\u00e9rents</li> <li>Encapsulation : Principe de regrouper les donn\u00e9es et les m\u00e9thodes dans un objet (exemple : </li> <li>Port\u00e9e : Visibilit\u00e9 d'une variable ou d'une m\u00e9thode (exemple : public, private, protected)</li> </ul>"},{"location":"definitions/#algorithmes","title":"Algorithmes","text":"<ul> <li>Dijkstra : Algorithme de recherche de plus court chemin dans un graphe :</li> </ul> <p>Initialisation : On attribue une distance infinie \u00e0 tous les sommets sauf le sommet de d\u00e9part, pour lequel on attribue une distance de 0 Boucle : On choisit le sommet non visit\u00e9 le plus proche du sommet de d\u00e9part, on met \u00e0 jour les distances des sommets voisins, et on marque le sommet choisi comme visit\u00e9 Arr\u00eat : Lorsque tous les sommets ont \u00e9t\u00e9 visit\u00e9s ou que le sommet d'arriv\u00e9e a \u00e9t\u00e9 visit\u00e9</p> <pre><code>def dijkstra(graph: Graph, start: Node, end: Node) -&gt; List[float]:\n    unvisited = set(graph.nodes)\n    distances = {node: float('inf') for node in graph.nodes}\n    distances[start] = 0\n    while unvisited:\n        current = min(unvisited, key=lambda node: distances[node])\n        unvisited.remove(current)\n        for neighbor in graph.neighbors(current):\n            distances[neighbor] = min(distances[neighbor], distances[current] + graph.distance(current, neighbor))\n    return distances[end]\n</code></pre> <ul> <li>Bellman-Ford : Algorithme de recherche de plus court chemin dans un graphe avec arcs de poids n\u00e9gatifs :</li> </ul> <p>Initialisation : On attribue une distance infinie \u00e0 tous les sommets sauf le sommet de d\u00e9part, pour lequel on attribue une distance de 0 Boucle : On met \u00e0 jour les distances des sommets en parcourant tous les arcs du graphe Arr\u00eat : Lorsque plus aucune distance n'est mise \u00e0 jour</p> <pre><code>def bellman_ford(graph: Graph, start: Node, end: Node) -&gt; List[float]:\n    distances = {node: float('inf') for node in graph.nodes}\n    distances[start] = 0\n    for _ in range(len(graph.nodes) - 1):\n        for node in graph.nodes:\n            for neighbor in graph.neighbors(node):\n                distances[neighbor] = min(distances[neighbor], distances[node] + graph.distance(node, neighbor))\n    return distances[end]\n</code></pre> <ul> <li>Kruskal : Algorithme de recherche d'arbre couvrant de poids minimum dans un graphe pond\u00e9r\u00e9 :</li> </ul> <p>Initialisation : On cr\u00e9e un arbre vide Boucle : On ajoute l'arc de poids minimum qui ne cr\u00e9e pas de cycle dans l'arbre Arr\u00eat : Lorsque l'arbre contient n-1 arcs</p> <ul> <li>Prim : Algorithme de recherche d'arbre couvrant de poids minimum dans un graphe pond\u00e9r\u00e9 :</li> </ul> <p>Initialisation : On cr\u00e9e un arbre contenant un sommet de d\u00e9part Boucle : On ajoute l'arc de poids minimum reliant un sommet de l'arbre \u00e0 un sommet hors de l'arbre Arr\u00eat : Lorsque l'arbre contient n-1 arcs</p> <pre><code>def prim(graph: Graph, start: Node) -&gt; Graph:\n    tree = Graph()\n    tree.add_node(start)\n    while len(tree.nodes) &lt; len(graph.nodes):\n        min_edge = None\n        min_cost = float('inf')\n        for node in tree.nodes:\n            for neighbor in graph.neighbors(node):\n                if neighbor not in tree.nodes and graph.distance(node, neighbor) &lt; min_cost:\n                    min_edge = (node, neighbor)\n                    min_cost = graph.distance(node, neighbor)\n        tree.add_node(min_edge[1])\n        tree.add_edge(min_edge[0], min_edge[1], min_cost)\n    return tree\n</code></pre> <ul> <li>A* : Algorithme de recherche de plus court chemin dans un graphe pond\u00e9r\u00e9 avec heuristique :</li> </ul> <p>Initialisation : On attribue une distance infinie \u00e0 tous les sommets sauf le sommet de d\u00e9part, pour lequel on attribue une distance de 0 Boucle : On choisit le sommet non visit\u00e9 le plus proche du sommet de d\u00e9part en tenant compte de l'heuristique, on met \u00e0 jour les distances des sommets voisins, et on marque le sommet choisi comme visit\u00e9 Arr\u00eat : Lorsque tous les sommets ont \u00e9t\u00e9 visit\u00e9s ou que le sommet d'arriv\u00e9e a \u00e9t\u00e9 visit\u00e9</p> <pre><code>def a_star(graph: Graph, start: Node, end: Node) -&gt; List[Node]:\n    open_set = PriorityQueue()\n    open_set.put((0, start))\n    came_from = {}\n    g_score = {node: float('inf') for node in graph.nodes}\n    g_score[start] = 0\n    f_score = {node: float('inf') for node in graph.nodes}\n    f_score[start] = heuristic(start, end)\n    while not open_set.empty():\n        current = open_set.get()[1]\n        if current == end:\n            return reconstruct_path(came_from, end)\n        for neighbor in graph.neighbors(current):\n            tentative_g_score = g_score[current] + graph.distance(current, neighbor)\n            if tentative_g_score &lt; g_score[neighbor]:\n                came_from[neighbor] = current\n                g_score[neighbor] = tentative_g_score\n                f_score[neighbor] = g_score[neighbor] + heuristic(neighbor, end)\n                open_set.put((f_score[neighbor], neighbor))\n    return []\n\n</code></pre> <ul> <li>Tri bulle : Algorithme de tri r\u00e9ordonnant une s\u00e9quence de valeurs en comparant les \u00e9l\u00e9ments deux \u00e0 deux et en les permutant si n\u00e9cessaire :</li> </ul> <pre><code>def tri_bulle(tab):\n    n = len(tab)\n    for i in range(n):\n        for j in range(0, n-i-1):\n            if tab[j] &gt; tab[j+1]:\n                tab[j], tab[j+1] = tab[j+1], tab[j]\n    return tab\n</code></pre> <ul> <li>Tri insertion : Algorithme de tri r\u00e9ordonnant une s\u00e9quence de valeurs en ins\u00e9rant chaque \u00e9l\u00e9ment \u00e0 sa place dans une partie tri\u00e9e de la s\u00e9quence :</li> </ul> <pre><code>def tri_insertion(tab):\n    for i in range(1, len(tab)):\n        cle = tab[i]\n        j = i-1\n        while j &gt;= 0 and cle &lt; tab[j]:\n            tab[j+1] = tab[j]\n            j -= 1\n        tab[j+1] = cle\n    return tab\n</code></pre> <ul> <li>Tri s\u00e9lection : Algorithme de tri r\u00e9ordonnant une s\u00e9quence de valeurs en s\u00e9lectionnant \u00e0 chaque \u00e9tape l'\u00e9l\u00e9ment minimum et en le pla\u00e7ant \u00e0 sa position d\u00e9finitive :</li> </ul> <pre><code>def tri_selection(tab):\n    for i in range(len(tab)):\n        min_idx = i\n        for j in range(i+1, len(tab)):\n            if tab[j] &lt; tab[min_idx]:\n                min_idx = j\n        tab[i], tab[min_idx] = tab[min_idx], tab[i]\n    return tab\n</code></pre> <ul> <li>Recherche s\u00e9quentielle : Algorithme de recherche trouvant un \u00e9l\u00e9ment dans une s\u00e9quence en le comparant \u00e0 chaque \u00e9l\u00e9ment de la s\u00e9quence :</li> </ul> <pre><code>def recherche_sequentielle(tab, x):\n    for i in range(len(tab)):\n        if tab[i] == x:\n            return i\n    return -1\n</code></pre> <ul> <li>Recherche dichotomique : Algorithme de recherche trouvant un \u00e9l\u00e9ment dans une s\u00e9quence tri\u00e9e en comparant l'\u00e9l\u00e9ment recherch\u00e9 \u00e0 l'\u00e9l\u00e9ment m\u00e9dian de la s\u00e9quence :</li> </ul> <pre><code>def recherche_dichotomique(tab, x):\n    debut = 0\n    fin = len(tab) - 1\n    while debut &lt;= fin:\n        milieu = (debut + fin) // 2\n        if tab[milieu] == x:\n            return milieu\n        elif tab[milieu] &lt; x:\n            debut = milieu + 1\n        else:\n            fin = milieu - 1\n    return -1\n</code></pre>"},{"location":"definitions/#parcours-de-graphe-en-largeur","title":"Parcours de graphe en largeur","text":"<pre><code>def parcours_largeur(graph: Graph, start: Node) -&gt; List[Node]:\n    visited = []\n    queue = [start]\n    while queue:\n        node = queue.pop(0)\n        if node not in visited:\n            visited.append(node)\n            neighbors = graph.neighbors(node)\n            for neighbor in neighbors:\n                queue.append(neighbor)\n    return visited\n\ndef parcours_largeur_recursif(graph: Graph, queue: List[Node], visited: List[Node] = None) -&gt; List[Node]:\n    if visited is None:\n        visited = []\n    if not queue:\n        return visited\n    node = queue.pop(0)\n    visited.append(node)\n    neighbors = graph.neighbors(node)\n    for neighbor in neighbors:\n        if neighbor not in visited and neighbor not in queue:\n            x.append(neighbor)\n    return parcours_largeur_recursif(graph, queue, visited)\n</code></pre>"},{"location":"definitions/#parcours-de-graphe-en-profondeur","title":"Parcours de graphe en profondeur","text":"<pre><code>def parcours_profondeur(graph: Graph, start: Node) -&gt; List[Node]:\n    visited = []\n    stack = [start]\n    while stack:\n        node = stack.pop()\n        if node not in visited:\n            visited.append(node)\n            neighbors = graph.neighbors(node)\n            for neighbor in neighbors:\n                stack.append(neighbor)\n    return visited\n\ndef parcours_profondeur_recursif(graph: Graph, start: Node, visited: List[Node] = None) -&gt; List[Node]:\n    if visited is None:\n        visited = []\n    visited.append(start)\n    neighbors = graph.neighbors(start)\n    for neighbor in neighbors:\n        if neighbor not in visited:\n            parcours_profondeur_recursif(graph, neighbor, visited)\n    return visited\n</code></pre>"},{"location":"planOraux/","title":"Plan oraux","text":""},{"location":"planOraux/#1-representation-des-donnees-types-et-valeurs-de-base","title":"1. Repr\u00e9sentation des donn\u00e9es : types et valeurs de base","text":"<ul> <li>Contexte</li> <li>Definitions (Type, Donn\u00e9es, Repr\u00e9sentation de donn\u00e9es, Types primitifs)</li> <li>Entier (Base 10,2,16,8, Exemple, Changement de base -&gt; divisions successives)</li> <li>Activit\u00e9 : Conversion de base pour des \u00e9l\u00e8ves de la base 10 \u00e0 la base 2 et inversement</li> <li>Binaire sign\u00e9, compl\u00e9ment \u00e0 2, IEEE 754 (float)</li> <li>Norme ASCII, ISO</li> <li>Activit\u00e9 : D\u00e9coder un message dans divers codages</li> <li>Bool\u00e9en (Op\u00e9rateurs logiques, tables de v\u00e9rit\u00e9)</li> </ul>"},{"location":"AutresRessources/","title":"Autres Ressources","text":""},{"location":"AutresRessources/#cours-meef","title":"Cours MEEF","text":""},{"location":"AutresRessources/#liste-des-lecons-au-format-concours-de-meef","title":"Liste des le\u00e7ons au format concours de MEEF","text":"<ul> <li> <p>Histoire de l'informatique</p> </li> <li> <p>\u2022 Repr\u00e9sentation des donn\u00e9es : types et valeurs de base (Premiere et Seconde)</p> </li> <li> <p>\u2022 Principes du Web (Seconde)</p> </li> <li> <p>\u2022 Constructions \u00e9l\u00e9mentaires des langages de programmation, fonctions (Premi\u00e8re)</p> </li> <li>\u2022 Traitement de donn\u00e9es en tables (Premi\u00e8re)</li> <li>\u2022 Algorithmes gloutons (Premi\u00e8re)</li> <li>\u2022 Interactions homme - machine sur le Web (Premi\u00e8re)</li> <li>\u2022 Principes de fonctionnement d\u2019un syst\u00e8me d\u2019exploitation (Premi\u00e8re)</li> <li>\u2022 Principes de fonctionnement des r\u00e9seaux (Premi\u00e8re)</li> <li> <p>\u2022 Algorithmes de tri (Premi\u00e8re)</p> </li> <li> <p>\u2022 Architecture d\u2019une machine (Premi\u00e8re et Terminale)</p> </li> <li> <p>\u2022 Structures lin\u00e9aires de donn\u00e9es (Terminale)</p> </li> <li>\u2022 Arbres : structures de donn\u00e9es et algorithmes (Terminale)</li> <li>\u2022 Graphes : structures de donn\u00e9es et algorithmes (Terminale)</li> <li>\u2022 Conception et mod\u00e9lisation de donn\u00e9es dans une base de donn\u00e9es relationnelle (Terminale)</li> <li>\u2022 Langage SQL d\u2019interrogation et de manipulation d\u2019une base de donn\u00e9es relationnelle (Terminale)</li> <li>\u2022 M\u00e9thode diviser pour r\u00e9gner (Terminale)</li> <li>\u2022 Programmation dynamique (Terminale)</li> <li>\u2022 Paradigmes de programmation (Terminale)</li> <li>\u2022 R\u00e9cursivit\u00e9 (Terminale)</li> <li>\u2022 Mise au point de programmes, documentation de programmes et gestion de bugs (Terminale)</li> <li>\u2022 Calculabilit\u00e9 et d\u00e9cidabilit\u00e9 (Terminale)</li> <li>\u2022 Gestion des processus et des ressources par un syst\u00e8me d\u2019exploitation (Terminale)</li> <li>\u2022 Algorithmes et protocoles de routage dans les r\u00e9seaux (Terminale)</li> <li>\u2022 S\u00e9curisation des communications (Terminale)</li> </ul>"},{"location":"AutresRessources/#liste-des-cours-et-lecon-associees","title":"Liste des Cours et lecon associ\u00e9es","text":"<ul> <li>Seconde<ul> <li>Histoire de l'informatique     &gt; Pas de le\u00e7on associ\u00e9e</li> <li>Internet     &gt; Pas de le\u00e7on associ\u00e9e</li> <li>Le Web     &gt; 2. \u2022 Principes du Web (Seconde)</li> <li>Les r\u00e9seaux sociaux     &gt; Pas de le\u00e7on associ\u00e9e</li> <li>Les donn\u00e9es structur\u00e9es     &gt; 1. \u2022 Repr\u00e9sentation des donn\u00e9es : types et valeurs de base (Seconde)</li> <li>Localisation, cartographie et mobilit\u00e9     &gt; Pas de le\u00e7on associ\u00e9e</li> <li>Informatique embarqu\u00e9e et objets connect\u00e9s     &gt; Pas de le\u00e7on associ\u00e9e</li> <li>La photographie num\u00e9rique     &gt; Pas de le\u00e7on associ\u00e9e</li> </ul> </li> <li>[Premi\u00e8re]<ul> <li>Repr\u00e9sentation des donn\u00e9es : types et valeurs de base     &gt; 1. \u2022 Repr\u00e9sentation des donn\u00e9es : types et valeurs de base (Premiere et Seconde)</li> <li>Repr\u00e9sentation des donn\u00e9es : types construits     &gt; Pas de le\u00e7on associ\u00e9e</li> <li>Traitement de donn\u00e9es en tables     &gt; 4. \u2022 Traitement de donn\u00e9es en tables (Premi\u00e8re)</li> <li>Interactions homme - machine sur le Web     &gt; 6. \u2022 Interactions homme - machine sur le Web (Premi\u00e8re)</li> <li>Architecture mat\u00e9rielles et syst\u00e8mes d'exploitation     &gt; 7. \u2022 Principes de fonctionnement d\u2019un syst\u00e8me d\u2019exploitation (Premi\u00e8re)     &gt; 8. \u2022 Principes de fonctionnement des r\u00e9seaux (Premi\u00e8re)     &gt; 10. \u2022 Architecture d\u2019une machine (Premi\u00e8re et Terminale)</li> <li>Language de programmation     &gt; 3. \u2022 Constructions \u00e9l\u00e9mentaires des langages de programmation, fonctions (Premi\u00e8re)</li> <li>Algorithmique     &gt; 5. \u2022 Algorithmes gloutons (Premi\u00e8re)     &gt; 9. \u2022 Algorithmes de tri (Premi\u00e8re)</li> </ul> </li> <li>[Terminale]<ul> <li>Structure de donn\u00e9es     &gt; 11. \u2022 Structures lin\u00e9aires de donn\u00e9es (Terminale)     &gt; 12. \u2022 Arbres : structures de donn\u00e9es et algorithmes (Terminale)     &gt; 13. \u2022 Graphes : structures de donn\u00e9es et algorithmes (Terminale)</li> <li>Base de donn\u00e9es     &gt; 14. \u2022 Conception et mod\u00e9lisation de donn\u00e9es dans une base de donn\u00e9es relationnelle (Terminale)     &gt; 15. \u2022 Langage SQL d\u2019interrogation et de manipulation d\u2019une base de donn\u00e9es relationnelle (Terminale)</li> <li>Architecture mat\u00e9rielle et syst\u00e8mes d'exploitation     &gt; 22. \u2022 Gestion des processus et des ressources par un syst\u00e8me d\u2019exploitation (Terminale)     &gt; 23. \u2022 Algorithmes et protocoles de routage dans les r\u00e9seaux (Terminale)     &gt; 24. \u2022 S\u00e9curisation des communications (Terminale)     &gt; 10. \u2022 Architecture d\u2019une machine (Premi\u00e8re et Terminale)</li> <li>Langages et programmation     &gt; 16. \u2022 M\u00e9thode diviser pour r\u00e9gner (Terminale)     &gt; 17. \u2022 Programmation dynamique (Terminale)     &gt; 18. \u2022 Paradigmes de programmation (Terminale)     &gt; 19. \u2022 R\u00e9cursivit\u00e9 (Terminale)     &gt; 20. \u2022 Mise au point de programmes, documentation de programmes et gestion de bugs (Terminale)</li> </ul> </li> </ul>"},{"location":"AutresRessources/#activite-tris-non-comparatifs","title":"Activit\u00e9 Tris non comparatifs","text":"<ul> <li>Cours</li> <li>document de travail : ActiviteTris.pdf</li> <li>Interaction_homme-machine_sur_le_web.pdf</li> </ul>"},{"location":"AutresRessources/AidePython/","title":"Aide python","text":"<p>Ceci est un document de rappels et d'aide pour la programmation en python.</p>"},{"location":"AutresRessources/AidePython/#sommaire","title":"Sommaire","text":"<ul> <li>Aide python</li> <li>Sommaire</li> <li>Les variables</li> <li>Les types<ul> <li>Les types de base</li> </ul> </li> <li>Appels de fonctions</li> <li>Fonctions utiles<ul> <li>Les fonctions math\u00e9matiques</li> <li>Les fonctions de conversion</li> </ul> </li> <li>Chaines de charact\u00e8res</li> <li>Les structures de contr\u00f4le<ul> <li>Les conditions</li> <li>Les boucles</li> </ul> </li> <li>Les structures de donn\u00e9es<ul> <li>Les listes</li> <li>Fonctions utiles</li> <li>Les dictionnaires</li> <li>Les tuples</li> </ul> </li> <li>Commentaires</li> <li>Documentation<ul> <li>Docstring</li> </ul> </li> <li>Les classes<ul> <li>H\u00e9ritage</li> </ul> </li> <li>Les modules<ul> <li>Modules utiles</li> </ul> </li> <li>Les exceptions</li> <li>Les fichiers</li> <li>Les entr\u00e9es / sorties</li> <li>Al\u00e9atoire</li> <li>Avanc\u00e9<ul> <li>Les ensembles</li> <li>Lambda fonction</li> <li>API</li> <li>Programmation fonctionnelle</li> <li>Programmation parrall\u00e8le</li> </ul> </li> </ul>"},{"location":"AutresRessources/AidePython/#les-variables","title":"Les variables","text":"<p>Les variables python ne sont pas d\u00e9clar\u00e9es, elles sont cr\u00e9\u00e9es lors de leur premi\u00e8re affectation.</p> <pre><code>a = 1\nb = 2\n</code></pre> <p>Il est possible d'affecter plusieurs variables en m\u00eame temps.</p> <pre><code>a, b = 1, 2\n</code></pre> <p>Il est \u00e9galement possible d'indiquer un typage \u00e0 titre indicatif.</p> <pre><code>a: int = 1\nb: str = \"2\"\n</code></pre>"},{"location":"AutresRessources/AidePython/#les-types","title":"Les types","text":""},{"location":"AutresRessources/AidePython/#les-types-de-base","title":"Les types de base","text":"<p>Les types de base sont les types de donn\u00e9es les plus simples.</p> <pre><code>a: int = 1\nb: float = 2.0\nc: bool = True\nd: str = \"2\"\n</code></pre>"},{"location":"AutresRessources/AidePython/#appels-de-fonctions","title":"Appels de fonctions","text":"<p>Les fonctions sont appel\u00e9es avec la syntaxe suivante :</p> <pre><code>\ndef ma_fonction(a: int, b: int) -&gt; int:\n    return a + b\n\nma_fonction(1, 2)\n</code></pre>"},{"location":"AutresRessources/AidePython/#fonctions-utiles","title":"Fonctions utiles","text":""},{"location":"AutresRessources/AidePython/#les-fonctions-mathematiques","title":"Les fonctions math\u00e9matiques","text":"<pre><code>\nabs(-1) # Valeur absolue (valeur -&gt; int) -&gt; int\nmax([1, 2, 3]) # Maximum (valeurs -&gt; [int]) -&gt; int\nmin([1, 2, 3]) # Minimum (valeurs -&gt; [int]) -&gt; int\npow(2, 3) # Puissance (valeur, puissance -&gt; int) -&gt; int\nround(1.5) # Arrondi (valeur -&gt; double) -&gt; int\nsum([1, 2, 3]) # Somme (valeurs -&gt; [int]) -&gt; int\n</code></pre>"},{"location":"AutresRessources/AidePython/#les-fonctions-de-conversion","title":"Les fonctions de conversion","text":"<pre><code>\nint(\"1\") # Convertit en entier (valeur -&gt; str) -&gt; int\nstr(1) # Convertit en cha\u00eene de caract\u00e8res (valeur -&gt; int) -&gt; str\n[nom du type](valeur) # Convertit en [nom du type] (valeur -&gt; [type]) -&gt; [type]\n</code></pre>"},{"location":"AutresRessources/AidePython/#chaines-de-characteres","title":"Chaines de charact\u00e8res","text":"<p>Les chaines de caract\u00e8res sont des tableaux de caract\u00e8res. On peut donc it\u00e9rer dessus et r\u00e9aliser toutes les op\u00e9rations sur les tableaux (slices, ...).</p> <pre><code>\nchaine = \"Bonjour\"\nchaine[0] # R\u00e9cup\u00e8re le premier caract\u00e8re, ici \"B\"\nchaine[1:3] # R\u00e9cup\u00e8re les caract\u00e8res de l'indice 1 \u00e0 l'indice 3 (exclus), ici \"on\"\n</code></pre> <p>On peut concat\u00e9ner des chaines de caract\u00e8res avec l'op\u00e9rateur <code>+</code>.</p> <pre><code>\nchaine = \"Bonjour\" + \" tout le \" + \"monde\"\n\n# On peut \u00e9galement utiliser l'op\u00e9rateur '+=' pour concat\u00e9ner \u00e0 la chaine\nchaine += \" !\" # chaine = \"Bonjour tout le monde !\"\n\n# On peut aussi utiliser des '*' pour r\u00e9p\u00e9ter une chaine\nchaine = \"coucou\" * 2 # chaine = \"coucoucoucou\"\n</code></pre> <p>Il est possible de formater des chaines de caract\u00e8res avec la m\u00e9thode <code>format</code>. Ca permet de remplacer des <code>{}</code> par des valeurs. On peut \u00e9galement indiquer l'indice de la valeur \u00e0 afficher.</p> <pre><code>\nchaine = \"Bonjour {} {}\".format(\"tout\", \"le monde\")\n\nchaine = \"Bonjour {1} {0}\".format(\"monde\", \"tout\")\n</code></pre>"},{"location":"AutresRessources/AidePython/#les-structures-de-controle","title":"Les structures de contr\u00f4le","text":""},{"location":"AutresRessources/AidePython/#les-conditions","title":"Les conditions","text":"<p>Les conditions sont r\u00e9alis\u00e9es avec le mot cl\u00e9 <code>if</code>. C'est l'indentation qui d\u00e9termine les blocs de code.</p> <pre><code>\nif a &gt; 0:\n    print(\"a est positif\")\nelif a &lt; 0:\n    print(\"a est n\u00e9gatif\")\nelse:\n    print(\"a est nul\")\n</code></pre> <p>Les expressions ternaires sont r\u00e9alis\u00e9es avec la syntaxe suivante :</p> <pre><code>a = 1 if b &gt; 0 else 0\n</code></pre> <p>Les op\u00e9rateurs de comparaison sont les suivants :</p> <pre><code>\na == b # a est \u00e9gal \u00e0 b\na != b # a est diff\u00e9rent de b\na &lt; b # a est strictement inf\u00e9rieur \u00e0 b\na &lt;= b # a est inf\u00e9rieur ou \u00e9gal \u00e0 b\na &gt; b # a est strictement sup\u00e9rieur \u00e0 b\na &gt;= b # a est sup\u00e9rieur ou \u00e9gal \u00e0 b\n</code></pre> <p>Les op\u00e9rateurs logiques sont les suivants :</p> <pre><code>\na and b # a et b sont vrais\na or b # a ou b est vrai\nnot a # a est faux\na is b # a est b\na is not b # a n'est pas b\n\na in b # a est dans b\na not in b # a n'est pas dans b\na xor b # a ou b est vrai mais pas les deux\n\n</code></pre>"},{"location":"AutresRessources/AidePython/#les-boucles","title":"Les boucles","text":"<p>Les boucles sont r\u00e9alis\u00e9es avec les mots cl\u00e9s <code>for</code> et <code>while</code>.</p> <pre><code>\nfor i in range(10):\n    print(i)\n\ni = 0\n\nwhile i &lt; 10:\n    print(i)\n    i += 1\n</code></pre> <p><code>break</code> permet de sortir de la boucle imm\u00e9diatement. Mais c'est \u00e0 \u00e9viter. <code>continue</code> permet de passer \u00e0 l'it\u00e9ration suivante.</p> <p>On peut it\u00e9rer sur les \u00e9l\u00e9ments d'une liste.</p> <pre><code>\nliste = [1, 2, 3, 4, 5]\n\n# Cette syntaxe permet d'avoir directement les \u00e9l\u00e9ments\nfor element in liste:\n    print(element)\n\n# Cette syntaxe permet d'avoir l'indice de l'\u00e9l\u00e9ment\nfor i, element in enumerate(liste):\n    print(i, element)\n</code></pre>"},{"location":"AutresRessources/AidePython/#les-structures-de-donnees","title":"Les structures de donn\u00e9es","text":""},{"location":"AutresRessources/AidePython/#les-listes","title":"Les listes","text":"<p>Les listes sont des tableaux dynamiques.</p> <pre><code>\nliste = [1, 2, 3, 4, 5]\n\nliste = [] # Cr\u00e9e une liste vide\n</code></pre>"},{"location":"AutresRessources/AidePython/#fonctions-utiles_1","title":"Fonctions utiles","text":"<pre><code>liste.append(6) # Ajoute 6 \u00e0 la fin de la liste\nliste.insert(0, 0) # Ajoute 0 \u00e0 l'indice 0\nliste.pop() # Supprime le dernier \u00e9l\u00e9ment de la liste\nliste.pop(0) # Supprime l'\u00e9l\u00e9ment \u00e0 l'indice 0\nliste.remove(3) # Supprime la premi\u00e8re occurence de 3\nliste.reverse() # Inverse la liste\nliste.sort() # Trie la liste\n</code></pre> <p>On peut \u00e9galement cr\u00e9er des listes par compr\u00e9hension.</p> <pre><code>\nliste = [i for i in range(10)]\n# liste = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n\nliste2 = [i for i in range(10) if i % 2 == 0]\n# liste2 = [0, 2, 4, 6, 8]\n</code></pre> <p>Pour r\u00e9cup\u00e9rer les \u00e9l\u00e9ments d'une liste, on utilise la syntaxe suivante :</p> <pre><code>\nliste = [1, 2, 3, 4, 5]\nelement = liste[0] # R\u00e9cup\u00e8re le premier \u00e9l\u00e9ment de la liste\n</code></pre> <p>Il est possible d'utiliser des indices n\u00e9gatifs pour r\u00e9cup\u00e9rer les \u00e9l\u00e9ments \u00e0 partir de la fin.</p> <pre><code>\nliste = [1, 2, 3, 4, 5]\nelement = liste[-1] # R\u00e9cup\u00e8re le dernier \u00e9l\u00e9ment de la liste\n</code></pre> <p>On peut effectuer des slices sur les listes. C'est \u00e0 dire r\u00e9cup\u00e9rer une partie de la liste.</p> <pre><code>\nliste = [1, 2, 3, 4, 5]\nsous_liste = liste[1:3] # R\u00e9cup\u00e8re les \u00e9l\u00e9ments de l'indice 1 \u00e0 l'indice 3 (exclus)\n# sous_liste = [2, 3]\n\nsous_liste = liste[1:] # R\u00e9cup\u00e8re les \u00e9l\u00e9ments de l'indice 1 \u00e0 la fin\n# sous_liste = [2, 3, 4, 5]\n\nsous_liste = liste[:3] # R\u00e9cup\u00e8re les \u00e9l\u00e9ments du d\u00e9but \u00e0 l'indice 3 (exclus)\n# sous_liste = [1, 2, 3]\n\nsous_liste = liste[::2] # R\u00e9cup\u00e8re les \u00e9l\u00e9ments du d\u00e9but \u00e0 la fin avec un pas de 2\n# sous_liste = [1, 3, 5]\n\n</code></pre>"},{"location":"AutresRessources/AidePython/#les-dictionnaires","title":"Les dictionnaires","text":"<p>Les dictionnaires sont des tableaux associatifs entre une cl\u00e9 et une valeur.</p> <pre><code>\ndictionnaire = {\n    \"a\": 1,\n    \"b\": 2,\n    \"c\": 3\n}\n\ndictionnaire[\"d\"] = 4 # Ajoute la cl\u00e9 \"d\" avec la valeur 4\n\ndel dictionnaire[\"a\"] # Supprime la cl\u00e9 \"a\"\n\ndictionnaire.pop(\"b\") # Supprime la cl\u00e9 \"b\"\n\ndictionnaire[\"c\"] = 5 # Modifie la valeur de la cl\u00e9 \"c\"\n</code></pre>"},{"location":"AutresRessources/AidePython/#les-tuples","title":"Les tuples","text":"<p>Les tuples sont des tableaux non modifiables. D'un nombre fixe d'\u00e9l\u00e9ments.</p> <pre><code>\ntuple = (1, 2, 3, 4, 5)\n\ntuple[0] = 0 # Erreur\nprint(tuple[0]) # Affiche 1\n</code></pre> <p>Un tuple peut contenir des \u00e9l\u00e9ments de diff\u00e9rents types.</p> <pre><code>\ntuple = (3, \"lapins\")\n\nprint(tuple[0]) # Affiche 3\nprint(tuple[1]) # Affiche \"lapins\"\n</code></pre>"},{"location":"AutresRessources/AidePython/#commentaires","title":"Commentaires","text":"<p>Les commentaires sont r\u00e9alis\u00e9s avec le caract\u00e8re <code>#</code>.</p> <pre><code># Ceci est un commentaire\n</code></pre> <p>Les commentaires multilignes sont r\u00e9alis\u00e9s avec des triples guillemets.</p> <pre><code>\"\"\"\nCeci est un commentaire\nsur plusieurs lignes\n\"\"\"\n</code></pre>"},{"location":"AutresRessources/AidePython/#documentation","title":"Documentation","text":"<p>La documentation est r\u00e9alis\u00e9e avec des triples guillemets.</p> <pre><code>def ma_fonction(a: int, b: int) -&gt; int:\n    \"\"\"\n    Ceci est la documentation de ma fonction.\n    Elle prend en param\u00e8tre deux entiers et retourne un entier.\n    \"\"\"\n    return a + b\n</code></pre>"},{"location":"AutresRessources/AidePython/#docstring","title":"Docstring","text":"<p>assert permet de v\u00e9rifier une condition. Si la condition est fausse, une exception est lev\u00e9e.</p> <pre><code>\nassert 1 == 1 # Ne fait rien\nassert (ma_fonction(1, 2) == 3) # V\u00e9rifie que ma_fonction(1, 2) retourne 3\n</code></pre>"},{"location":"AutresRessources/AidePython/#les-classes","title":"Les classes","text":"<p>Pour cr\u00e9er une classe, on utilise le mot cl\u00e9 <code>class</code>.</p> <pre><code>class MaClasse:\n    parametre = 1\n\n    # Le constructeur est defini avec le mot cl\u00e9 __init__\n    def __init__(self, parametre: int):\n        self.parametre = parametre\n\n    def ma_fonction(self, a: int, b: int) -&gt; int:\n        # Les param\u00e8tres de l'objet sont accessibles avec le mot cl\u00e9 self\n        return a + b + self.parametre\n</code></pre> <p>On peut instancier une classe avec la syntaxe suivante :</p> <pre><code>\nobjet = MaClasse(1)\n</code></pre> <p>Pour acc\u00e9der aux param\u00e8tres ou aux m\u00e9thodes d'un objet, on utilise la syntaxe suivante :</p> <pre><code>objet = MaClasse(1)\n\nobjet.parametre # Acc\u00e8s au param\u00e8tre de l'objet\nobjet.ma_fonction(1, 2) # Appel de la fonction de l'objet\n</code></pre> <p>Au sein d'un objet, les param\u00e8tres de la classe sont accessibles avec le mot cl\u00e9 <code>self</code>.</p>"},{"location":"AutresRessources/AidePython/#heritage","title":"H\u00e9ritage","text":"<p>Pour cr\u00e9er une classe h\u00e9ritant d'une autre classe, on utilise la syntaxe suivante :</p> <pre><code>\nclass MaClasse(MaClasseMere):\n    pass\n</code></pre> <p>Pour appeler le constructeur de la classe m\u00e8re, on utilise la fonction <code>super</code>.</p> <pre><code>\nclass MaClasse(MaClasseMere):\n    def __init__(self, parametre: int):\n        super().__init__(parametre)\n</code></pre> <p>les doubles underscores indiquent qu'il s'agit d'une fonction sp\u00e9ciale.</p>"},{"location":"AutresRessources/AidePython/#les-modules","title":"Les modules","text":"<p>Les modules sont des fichiers python contenant des fonctions et des classes.</p> <p>Pour importer un module, on utilise le mot cl\u00e9 <code>import</code>.</p> <pre><code>\nimport mon_module\n\n# Ou\n\nfrom mon_module import ma_fonction, MaClasse #, etc.\n</code></pre>"},{"location":"AutresRessources/AidePython/#modules-utiles","title":"Modules utiles","text":"<pre><code>import math # Module de math\u00e9matiques\nimport random # Module de g\u00e9n\u00e9ration de nombres al\u00e9atoires\nimport time # Module de gestion du temps\nimport os # Module de gestion des fichiers\nimport sys # Module de gestion du syst\u00e8me\nimport json # Module de gestion du format json\nimport csv # Module de gestion du format csv\nimport re # Module de gestion des expressions r\u00e9guli\u00e8res\nimport requests # Module de gestion des requ\u00eates http\nimport tkinter # Module d'interface graphique\nimport pygame # Module de gestion du son et de l'image\n</code></pre>"},{"location":"AutresRessources/AidePython/#les-exceptions","title":"Les exceptions","text":"<p>Les exceptions sont des erreurs qui peuvent \u00eatre lev\u00e9es lors de l'ex\u00e9cution du programme.</p> <pre><code>\ntry:\n    # Code susceptible de lever une exception\nexcept Exception as e:\n    # Code \u00e0 ex\u00e9cuter en cas d'exception\n</code></pre>"},{"location":"AutresRessources/AidePython/#les-fichiers","title":"Les fichiers","text":"<p>Pour ouvrir un fichier, on utilise la fonction <code>open</code>.</p> <pre><code>\nfichier = open(\"mon_fichier.txt\", \"r\") # Ouvre le fichier en lecture seule\n\nfichier.read() # Lit le contenu du fichier, le retourne sous forme de chaine de caract\u00e8res\n\nfichier.close() # Ferme le fichier\n</code></pre> <p>Pour \u00e9crire dans un fichier, on utilise la fonction <code>write</code>.</p> <pre><code>\nfichier = open(\"mon_fichier.txt\", \"w\") # Ouvre le fichier en \u00e9criture\n\nfichier.write(\"Bonjour tout le monde !\") # Ecrit dans le fichier\n\nfichier.close() # Ferme le fichier\n</code></pre> <p>Pour lire un fichier ligne par ligne, on utilise la fonction <code>readlines</code>.</p> <pre><code>\nfichier = open(\"mon_fichier.txt\", \"r\") # Ouvre le fichier en lecture seule\n\nfor ligne in fichier.readlines():\n    print(ligne)\n\nfichier.close() # Ferme le fichier\n\n</code></pre>"},{"location":"AutresRessources/AidePython/#les-entrees-sorties","title":"Les entr\u00e9es / sorties","text":"<p>Pour lire une entr\u00e9e clavier, on utilise la fonction <code>input</code>. Input retourne une chaine de caract\u00e8res une fois que l'utilisateur a appuy\u00e9 sur entr\u00e9e. Il est possible de passer un param\u00e8tre \u00e0 la fonction <code>input</code> pour afficher un message avant la saisie.</p> <pre><code>\nvaleur = input(\"Entrez une valeur : \")\n</code></pre> <p>Pour afficher une sortie, on utilise la fonction <code>print</code>.</p> <pre><code>\nprint(\"Bonjour tout le monde !\")\n</code></pre>"},{"location":"AutresRessources/AidePython/#aleatoire","title":"Al\u00e9atoire","text":"<p>Pour g\u00e9n\u00e9rer un nombre al\u00e9atoire, on utilise la fonction <code>randint</code> du module <code>random</code>.</p> <pre><code># On doit importer le module random\nimport random\n\nnombre = random.randint(0, 10) # G\u00e9n\u00e8re un nombre al\u00e9atoire entre 0 et 10, attention, 10 est inclus\n</code></pre>"},{"location":"AutresRessources/AidePython/#avance","title":"Avanc\u00e9","text":""},{"location":"AutresRessources/AidePython/#les-ensembles","title":"Les ensembles","text":"<p>Les ensembles sont des tableaux non ordonn\u00e9s et sans doublons.</p> <pre><code>\nensemble = {1, 2, 3, 4, 5}\n\nensemble.add(6) # Ajoute 6 \u00e0 l'ensemble\nensemble.remove(1) # Supprime 1 de l'ensemble\n</code></pre>"},{"location":"AutresRessources/AidePython/#lambda-fonction","title":"Lambda fonction","text":"<p>Les lambda fonctions sont des fonctions anonymes.</p> <pre><code>\n# La fonction qui \u00e0 \"a\" et \"b\" associe \"a + b\"\nma_fonction = lambda a, b: a + b\nma_fonction(1, 2) # Retourne 3\n\n# La fonction qui dans un tableau verifie si le premier \u00e9l\u00e9ment est sup\u00e9rieur \u00e0 5\nma_fonction = lambda tableau: tableau[0] &gt; 5\nma_fonction([6, 2, 3]) # Retourne True\n</code></pre> <p>La m\u00e9thode de tri <code>sort</code> prend en param\u00e8tre une fonction de comparaison.</p> <pre><code>\ntableau = [1, 2, 3, 4, 5]\n\ntableau.sort() # Trie le tableau par ordre croissant\ntableau.sort(reverse=True) # Trie le tableau par ordre d\u00e9croissant\ntableau.sort(key=lambda x: x % 2 == 0) # Trie le tableau par ordre croissant en mettant les nombres pairs en premier\n</code></pre> <p>La fonction <code>filter</code> permet de filtrer un tableau en fonction d'une fonction de comparaison.</p> <pre><code>\ntableau = [1, 2, 3, 4, 5]\n\ntableau_filtre = filter(lambda x: x % 2 == 0, tableau) # Retourne un tableau avec les nombres pairs\n</code></pre> <p>La fonction <code>map</code> permet d'appliquer une fonction \u00e0 tous les \u00e9l\u00e9ments d'un tableau.</p> <pre><code>\ntableau = [1, 2, 3, 4, 5]\n\ntableau_map = map(lambda x: x * 2, tableau) # Retourne un tableau avec les nombres multipli\u00e9s par 2\n</code></pre> <p>On peut aussi utiliser des listes en compr\u00e9hension pour r\u00e9aliser ces op\u00e9rations. ex : <code>tableau_filtre = [x for x in tableau if x % 2 == 0]</code> ex : <code>tableau_map = [x * 2 for x in tableau]</code></p> <p>On peut aussi donner le nom d'une fonction d\u00e9finie ailleurs \u00e0 la place d'une lambda fonction. ex : <code>tableau_filtre = filter(ma_fonction, tableau)</code></p>"},{"location":"AutresRessources/AidePython/#api","title":"API","text":"<p>Une API est une interface de programmation applicative. C'est un ensemble de fonctions permettant d'interagir avec un service.</p> <p>Pour utiliser une API, on utilise le module <code>requests</code>.</p> <pre><code>\nimport requests\n\nreponse = requests.get(\"https://api.github.com/users/defunkt\") # Appel de l'API\n\nreponse.status_code # Code de retour de la requ\u00eate\n\nreponse.json() # Retourne la r\u00e9ponse au format json\n</code></pre>"},{"location":"AutresRessources/AidePython/#programmation-fonctionnelle","title":"Programmation fonctionnelle","text":"<p>La programmation fonctionnelle est un paradigme de programmation. Il s'agit de programmer en utilisant des fonctions.</p> <pre><code>\n# On peut utiliser des fonctions comme des variables\n\ndef ma_fonction(a: int, b: int) -&gt; int:\n    return a + b\n\nfonction = ma_fonction\n\nfonction(1, 2) # Retourne 3\n\n# On peut utiliser des fonctions comme des param\u00e8tres\n\ndef appliquer2fois(fonction, a)\n    return f(f(a))\n\n</code></pre> <p>Une fonction qui prend une fonction en param\u00e8tre ou qui retourne une fonction est appel\u00e9e fonction d'ordre sup\u00e9rieur.</p>"},{"location":"AutresRessources/AidePython/#programmation-parrallele","title":"Programmation parrall\u00e8le","text":"<p>La programmation parrall\u00e8le est un paradigme de programmation. Il s'agit de programmer en utilisant des processus ou des threads.</p> <pre><code>\nimport multiprocessing\n\ndef ma_fonction(a: int, b: int) -&gt; int:\n    return a + b\n\nprocessus = multiprocessing.Process(target=ma_fonction, args=(1, 2)) # Cr\u00e9e un processus qui ex\u00e9cute ma_fonction(1, 2)\n\nprocessus.start() # D\u00e9marre le processus\n\nprocessus.join() # Attend que le processus se termine\n\n</code></pre> <p>Un processus est un programme en cours d'ex\u00e9cution. Un thread est un flux d'ex\u00e9cution au sein d'un processus. Un processus peut contenir plusieurs threads. Les processus et les threads sont des t\u00e2ches concurrentes.</p>"},{"location":"AutresRessources/Histoire/Cours/","title":"Histoire de l'informatique","text":""},{"location":"AutresRessources/Histoire/Cours/#linformatique-cest-quoi","title":"L'informatique c'est quoi ?","text":"<p>L'informatique est une science qui traite de la collecte, du stockage, du traitement, de la communication et de l'utilisation de l'information.</p> <p>Le num\u00e9rique est l'ensemble des techniques et des technologies qui utilisent des nombres pour traiter de l'information.</p> <p>Donc NSI pour Num\u00e9rique et Sciences Informatiques c'est l'\u00e9tude des techniques et des technologies qui utilisent des nombres pour traiter de l'information. C'est assez large comme d\u00e9finition mais on peut donc se rendre compte que c'est l'\u00e9tude de l'informatique, que ce soit sous l'angle de l'histoire, de la th\u00e9orie ou de la pratique.</p>"},{"location":"AutresRessources/Histoire/Cours/#les-debuts-de-linformatique","title":"Les d\u00e9buts de l'informatique","text":""},{"location":"AutresRessources/Histoire/Cours/#les-premiers-calculateurs","title":"Les premiers calculateurs","text":"<p>Depuis l'Antiquit\u00e9, l'homme a toujours cherch\u00e9 \u00e0 automatiser les calculs. Les premiers calculateurs \u00e9taient des machines m\u00e9caniques.</p>"},{"location":"AutresRessources/Histoire/Cours/#le-boulier-chinois","title":"Le boulier chinois","text":"<p>Le boulier chinois est un des premiers outils de calcul. Il est compos\u00e9 de tiges sur lesquelles sont enfil\u00e9es des boules. Chaque boule repr\u00e9sente une valeur. En d\u00e9pla\u00e7ant les boules, on peut effectuer des calculs. C'est un outil tr\u00e8s simple mais qui permet de faire des calculs.</p> <p></p>"},{"location":"AutresRessources/Histoire/Cours/#la-pascaline","title":"La Pascaline","text":"<p>Une des premi\u00e8res machines \u00e0 calculer est la Pascaline invent\u00e9e par Blaise Pascal en 1642. C'est une machine m\u00e9canique qui permettait d'effectuer des additions et des soustractions. Elle \u00e9tait compos\u00e9e de roues dent\u00e9es qui tournaient pour effectuer les calculs. Elle \u00e9tait limit\u00e9e \u00e0 8 chiffres mais elle permettait d\u00e9j\u00e0 d'effectuer des calculs et pourtant sans aucune \u00e9lectricit\u00e9.</p> <p></p>"},{"location":"AutresRessources/Histoire/Cours/#la-machine-de-babbage","title":"La machine de Babbage","text":"<p>Mais c'est en 1837 que Charles Babbage invente la premi\u00e8re machine \u00e0 calculer programmable. La machine de Babbage est une machine m\u00e9canique qui permettait d'effectuer des calculs et qui \u00e9tait programmable. C'est la premi\u00e8re machine \u00e0 calculer qui ressemble \u00e0 un ordinateur.</p> <p></p> <p></p> <p>Babbage n'a jamais pu terminer sa machine mais elle a \u00e9t\u00e9 r\u00e9alis\u00e9e par la suite et elle fonctionne ! Le plus fou c'est que Babbage avait imagin\u00e9 sa machine avec des cartes perfor\u00e9es pour la programmer alors qu'elle n'a jamais \u00e9t\u00e9 r\u00e9alis\u00e9e de son vivant.</p> <p></p> <p>N'oublions pas Ada Lovelace, son assistante, qui est consid\u00e9r\u00e9e comme la premi\u00e8re programmeuse de l'histoire. Elle a \u00e9crit le premier programme informatique pour la machine de Babbage. </p>"},{"location":"AutresRessources/Histoire/Cours/#les-premiers-ordinateurs-modernes","title":"Les premiers ordinateurs modernes","text":""},{"location":"AutresRessources/Histoire/Cours/#la-machine-de-turing","title":"La machine de Turing","text":"<p>En 1936, Alan Turing invente la machine de Turing. C'est une machine abstraite qui permet de simuler n'importe quel algorithme. C'est un mod\u00e8le th\u00e9orique de l'ordinateur. C'est la base de l'informatique th\u00e9orique.  Durant la Seconde Guerre mondiale, Turing a utilis\u00e9 sa machine pour casser les codes secrets des nazis et ainsi \u00e9vit\u00e9 probablement des millions de morts (en \u00e9courtant la guerre de plusieurs ann\u00e9es).</p> <p></p>"},{"location":"AutresRessources/Histoire/Cours/#von-neumann","title":"Von Neumann","text":"<p>En 1945, John Von Neumann invente l'architecture des ordinateurs modernes. Il imagine un ordinateur compos\u00e9 de plusieurs parties : une unit\u00e9 de calcul, une unit\u00e9 de m\u00e9moire, une unit\u00e9 de contr\u00f4le et des entr\u00e9es/sorties. C'est l'architecture des ordinateurs que nous utilisons encore aujourd'hui.</p> <p></p>"},{"location":"AutresRessources/Histoire/Cours/#leniac","title":"L'ENIAC","text":"<p>L'ENIAC (Electronic Numerical Integrator And Computer) est le premier ordinateur \u00e9lectronique. Il a \u00e9t\u00e9 construit en 1946 et il \u00e9tait capable d'effectuer des calculs tr\u00e8s rapidement. Il \u00e9tait compos\u00e9 de 17 468 tubes \u00e0 vide et il pesait 30 tonnes. Il \u00e9tait tr\u00e8s encombrant et tr\u00e8s fragile mais il a permis de faire des calculs tr\u00e8s rapidement.</p> <p></p>"},{"location":"AutresRessources/Histoire/Cours/#lunivac","title":"L'UNIVAC","text":"<p>L'UNIVAC (Universal Automatic Computer) est le premier ordinateur commercial. Il a \u00e9t\u00e9 construit en 1951 et il a \u00e9t\u00e9 vendu \u00e0 plusieurs exemplaires. C'est le premier ordinateur qui a \u00e9t\u00e9 utilis\u00e9 pour des applications commerciales.</p> <p></p>"},{"location":"AutresRessources/Histoire/Cours/#linformatique-moderne","title":"L'informatique moderne","text":"<p>Depuis les ann\u00e9es 1950, l'informatique a beaucoup \u00e9volu\u00e9. Les ordinateurs sont devenus de plus en plus petits, de plus en plus rapides et de plus en plus puissants. On a invent\u00e9 les circuits int\u00e9gr\u00e9s, les microprocesseurs, les ordinateurs personnels, les smartphones, les tablettes, les objets connect\u00e9s, les r\u00e9seaux sociaux, les jeux vid\u00e9o, etc.</p> <p>L'informatique est partout autour de nous et elle est devenue indispensable dans notre vie quotidienne. C'est pour cela qu'il est important de comprendre comment fonctionne l'informatique et comment elle a \u00e9volu\u00e9 pour mieux comprendre le monde dans lequel nous vivons.</p>"},{"location":"AutresRessources/Histoire/Cours/#internet","title":"Internet","text":"<p>Dernier bond dans le temps, en 1989, Tim Berners-Lee invente le World Wide Web. C'est un syst\u00e8me de publication et de consultation de documents sur Internet. C'est le d\u00e9but du web tel que nous le connaissons aujourd'hui. C'est le d\u00e9but de l'Internet grand public.</p> <p></p>"},{"location":"AutresRessources/Histoire/Cours/#pour-aller-plus-loin","title":"Pour aller plus loin","text":"<p>// [LIENS A AJOUTER]</p>"},{"location":"AutresRessources/TrisNonLineaires/Manuel/","title":"Tri en temps lin\u00e9aire","text":""},{"location":"AutresRessources/TrisNonLineaires/Manuel/#introduction","title":"Introduction","text":"<p>On conna\u00eet d\u00e9j\u00e0 les tris par comparaison qui utilisent des comparaisons entre les \u00e9l\u00e9ments du tableau \u00e0 trier. Mais ces tris sont limit\u00e9s \u00e0 une certaine complexit\u00e9. On va voir ici des tris qui ne sont pas limit\u00e9s par cette complexit\u00e9. Ils sont appel\u00e9s tris en temps lin\u00e9aires.</p>"},{"location":"AutresRessources/TrisNonLineaires/Manuel/#cest-quoi-un-tri-en-temps-lineaire","title":"C'est quoi un tri en temps lin\u00e9aire ?","text":"<p>Un tri en temps lin\u00e9aire est un tri dont la complexit\u00e9 est en $O(n)$. C'est-\u00e0-dire que la complexit\u00e9 du tri est proportionnelle \u00e0 la taille du tableau \u00e0 trier. Ces tris ne fonctionnent pas sur n'importe quel type de donn\u00e9es. Ils sont bas\u00e9s sur des hypoth\u00e8ses sur les donn\u00e9es \u00e0 trier, il faut donc bien choisir le tri en fonction des donn\u00e9es \u00e0 trier pour savoir si un de ces tris est adapt\u00e9.</p>"},{"location":"AutresRessources/TrisNonLineaires/Manuel/#un-exemple-de-tri-en-temps-lineaire-le-tri-par-denombrement","title":"Un exemple de tri en temps lin\u00e9aire : le tri par d\u00e9nombrement","text":""},{"location":"AutresRessources/TrisNonLineaires/Manuel/#principe","title":"Principe","text":"<p>Le tri par d\u00e9nombrement est un tri en temps lin\u00e9aire. On compte le nombre d'occurence dans le tableau de chaque valeurs possibles. (Il faut donc qu'on connaisse la valeur maximale du tableau) On met ces comptages dans un tableau \u00e0 l'indice correspondant \u00e0 la valeur, c'est \u00e0 dire que le nombre d'occurence de la valeur 3 sera \u00e0 l'indice 3 du tableau des comptages. Cela nous permet ensuite de reconstruire le tableau tri\u00e9 \u00e0 partir des comptages en mettant autant de fois chaque valeur qu'elle apparait dans le tableau.</p> <p>C'est un tri efficace pour trier des donn\u00e9es qui se r\u00e9p\u00e8tent beaucoup si on connais la plage de valeurs possibles. On peut l'utiliser pour trier des entiers compris entre 0 et 100 par exemple.</p>"},{"location":"AutresRessources/TrisNonLineaires/Manuel/#exemple","title":"Exemple","text":"<p>On veut trier le tableau suivant :</p> 6 0 2 0 1 3 4 6 1 3 2 1 <p>On compte le nombre d'occurrences de chaque \u00e9l\u00e9ment :</p> \u00c9l\u00e9ment 0 1 2 3 4 5 6 Nombre d'occurrences 2 3 2 2 1 0 2 <p>Cela correspond \u00e0 ce tableau : <code>[2, 3, 2, 2, 1, 0, 2]</code></p> <p>On peut ensuite reconstruire le tableau tri\u00e9 en utilisant les comptages pour mettre les \u00e9l\u00e9ments dans le bon ordre autant de fois qu'ils apparaissent, on met 2 fois 0, 3 fois 1, 2 fois 2, etc... : <code>2*[0] + 3*[1] + 2*[2] + 2*[3] + 1*[4] + 0*[5] + 2*[6] = [0, 0, 1, 1, 1, 2, 2, 3, 3, 4, 6, 6]</code></p> 0 0 1 1 1 2 2 3 3 4 6 6"},{"location":"AutresRessources/TrisNonLineaires/Manuel/#exercices","title":"Exercices","text":""},{"location":"AutresRessources/TrisNonLineaires/Manuel/#1-utilisez-le-tri-par-denombrement-pour-trier-le-tableau-suivant","title":"1. Utilisez le tri par d\u00e9nombrement pour trier le tableau suivant :","text":"5 6 2 6 4 3 5 5 2 0 <p>Nombres d'occurences : </p> Indice ... ... ... ... ... ... ... Valeur ... ... ... ... ... ... ... <p>Tableau tri\u00e9 :</p> ... ... ... ... ... ... ... ... ... ..."},{"location":"AutresRessources/TrisNonLineaires/Manuel/#1-implementer-une-fonction-pour-compter-le-nombre-doccurrences-de-chaque-element-dun-tableau","title":"1. Impl\u00e9menter une fonction pour compter le nombre d'occurrences de chaque \u00e9l\u00e9ment d'un tableau","text":"<p>Les occurences de chaque valeurs seront stock\u00e9s \u00e0 l'indice correspondant \u00e0 la valeur dans le tableau des comptages. Donc le nombre d'occurences de la valeur $4$ sera \u00e0 l'indice <code>4</code> du tableau des comptages.</p> <pre><code>def nombre_occur(tab : [int], k : int) -&gt; [int]:\n    \"\"\" Renvoie un tableau contenant le nombre d'occurrences de chaque \u00e9l\u00e9ment du tableau tab.\n    tab est un tableau d'entiers compris entre 0 et k.\n\n    Pr\u00e9conditions :\n        k doit \u00eatre connu.\n        tab doit \u00eatre un tableau d'entiers compris entre 0 et k.\n\n    Param\u00e8tres :\n        tab (list) : le tableau \u00e0 trier.\n        k (int) : la valeur maximale du tableau.\n\n    Retour :\n        comptages (list) : le tableau des comptages.\n    \"\"\"\n\n    ...\n</code></pre>"},{"location":"AutresRessources/TrisNonLineaires/Manuel/#2-implementer-une-fonction-pour-reconstruire-le-tableau-trie-a-partir-des-comptages","title":"2. Impl\u00e9menter une fonction pour reconstruire le tableau tri\u00e9 \u00e0 partir des comptages","text":"<pre><code>def reconstruire(tab : [int], k : int) -&gt; [int]:\n    \"\"\" Renvoie un tableau tri\u00e9 \u00e0 partir des comptages.\n    ...\n    \"\"\"\n    ...\n</code></pre>"},{"location":"AutresRessources/TrisNonLineaires/Manuel/#3-en-utilisant-les-fonctions-precedentes-implementer-le-tri-par-denombrement","title":"3. En utilisant les fonctions pr\u00e9c\u00e9dentes, impl\u00e9menter le tri par d\u00e9nombrement","text":"<p>Pensez \u00e0 bien documenter votre fonction.</p> <pre><code>def tri_par_denombrement(...\n</code></pre>"},{"location":"AutresRessources/TrisNonLineaires/Manuel/#4-tester-votre-fonction","title":"4. Tester votre fonction","text":""},{"location":"AutresRessources/TrisNonLineaires/Manuel/#pour-aller-plus-loin","title":"Pour aller plus loin","text":"<p>Ils existent de nombreux autres tris en complexit\u00e9s lin\u00e9aires. On peut citer par exemple le tri par base. Il est bas\u00e9 sur le principe de d\u00e9composer les entiers \u00e0 trier en base $k$ et de trier la liste des entiers en fonction de la valeur de chaque chiffre en partant du chiffre des unit\u00e9s. </p> <p>Note : On montre la plupart de nos tests avec des tableaux d'entiers. Mais on peut aussi utiliser ces tris pour trier des tableaux de cha\u00eenes de caract\u00e8res par exemple. Il suffit de d\u00e9finir une fonction de comparaison adapt\u00e9e.</p> <p>Exemple :</p> <p>On veut trier le tableau suivant :</p> BAC RUE ROC MUR SUD COQ DUC RAT SAC <p>On trie les mots selon le dernier caract\u00e8re :</p> BAC ROC DUC SAC SUD RUE COQ MUR RAT <p>On trie les mots selon l'avant-dernier caract\u00e8re :</p> BAC SAC RAT ROC COQ DUC SUD RUE MUR <p>On trie les mots selon le premier caract\u00e8re :</p> BAC COQ DUC MUR RAT ROC RUE SAC SUD"},{"location":"AutresRessources/TrisNonLineaires/Manuel/#1-realiser-un-tri-par-base-a-la-main-pour-trier-le-tableau-suivant","title":"1. R\u00e9aliser un tri par base \u00e0 la main pour trier le tableau suivant :","text":"<p>Attention, avant la derni\u00e8re \u00e9tape les mots ne seront pas en ordre alphab\u00e9tique. Ils doivent \u00eatre tri\u00e9s selon un certain caract\u00e8re qui correspond \u00e0 l'\u00e9tape en cours.</p> ABC CBA BCA BAC CAB ACB ABA CAA BAA AAC CAC ACA CBB BCB ABB BBB ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ... ..."},{"location":"AutresRessources/TrisNonLineaires/Manuel/#2-implementer-le-tri-par-base-en-python","title":"2. Impl\u00e9menter le tri par base en Python","text":"<pre><code>def tri_par_base(tab : [str], tailleMot : int) -&gt; [str]:\n    \"\"\"Trie le tableau tab par base.\n        ...\n    \"\"\"\n\n    ...\n</code></pre>"},{"location":"Manuel/","title":"Liens","text":"Language Lien Fait HTML Html JS JavaScript x CSS CSS PHP PHP SQL SQL Python Python Java Java x C C C# C# Git Git x Concepts Concepts x UML UML Bash Bash Markdown Markdown x"},{"location":"Manuel/Concepts/","title":"Quelques concepts d'informatique","text":"<p>note : les exemples sont en python</p> <ul> <li>1. Les bases</li> <li>1.1. Les variables</li> <li>1.2. Les types</li> <li>1.3. Les op\u00e9rateurs</li> <li>1.4. Les fonctions</li> <li>1.5. Les conditions</li> <li>1.6. Les boucles</li> <li>2. POO</li> <li>2.1. Les classes</li> <li>2.2. Les attributs</li> <li>2.3. Les m\u00e9thodes</li> <li>2.4. L'h\u00e9ritage</li> <li>2.5. L'encapsulation</li> <li>2.6. Le polymorphisme</li> <li>3. R\u00e9curcivit\u00e9</li> <li>3.1. Exemple</li> <li>3.2. Quelques r\u00e8gles</li> <li>3.3. Exemples d'utilisation de la r\u00e9cursivit\u00e9</li> <li>4. Les exceptions</li> <li>4.1. Exemple</li> <li>4.2. Les exceptions personnalis\u00e9es</li> <li>5. Calcul de la complexit\u00e9</li> <li>5.1. Les notations</li> <li>5.2. Exemple</li> <li>6. Les algorithmes de tri</li> <li>6.1. Tri \u00e0 bulles</li> <li>6.2. Tri par insertion</li> <li>6.3. Tri par s\u00e9lection</li> <li>6.4. Tri fusion</li> <li>6.5. Tri rapide</li> <li>7. Les algorithmes de recherche</li> <li>7.1. Recherche s\u00e9quentielle</li> <li>7.2. Recherche dichotomique</li> <li>8. Calcul logique</li> <li>8.1 Op\u00e9rateurs logiques</li> <li>8.2. Op\u00e9rateurs de comparaison</li> </ul>"},{"location":"Manuel/Concepts/#1-les-bases","title":"1. Les bases","text":""},{"location":"Manuel/Concepts/#11-les-variables","title":"1.1. Les variables","text":"<p>Les variables sont des conteneurs qui peuvent contenir des donn\u00e9es. Elles sont d\u00e9finies par un nom et une valeur. La valeur peut \u00eatre de n'importe quel type (entier, flottant, cha\u00eene de caract\u00e8res, bool\u00e9en, liste, dictionnaire, etc.).</p> <pre><code>a = 1\n\nb = 2.5\n\nc = \"Hello World\"\n\nd = True\n</code></pre>"},{"location":"Manuel/Concepts/#12-les-types","title":"1.2. Les types","text":"<p>Les types sont des cat\u00e9gories de donn\u00e9es. Les types les plus courants sont les entiers, les flottants, les cha\u00eenes de caract\u00e8res, les bool\u00e9ens, les listes, les dictionnaires, etc.</p> <pre><code>\na = 1 # Entier\n\nb = 2.5 # Flottant\n\nc = \"Hello World\" # Cha\u00eene de caract\u00e8res\n\nd = True # Bool\u00e9en\n\ne = [1, 2, 3] # Liste\n\nf = {\"a\": 1, \"b\": 2} # Dictionnaire\n</code></pre>"},{"location":"Manuel/Concepts/#13-les-operateurs","title":"1.3. Les op\u00e9rateurs","text":"<p>Les op\u00e9rateurs sont des symboles qui permettent de r\u00e9aliser des op\u00e9rations sur des donn\u00e9es. Les op\u00e9rateurs les plus courants sont les op\u00e9rateurs arithm\u00e9tiques, les op\u00e9rateurs de comparaison, les op\u00e9rateurs logiques, etc.</p> <pre><code>\na = 1 + 2 # Addition\n\nb = 2 - 1 # Soustraction\n\nc = 2 * 2 # Multiplication\n\nd = 4 / 2 # Division\n\ne = 4 // 2 # Division enti\u00e8re\n\nf = 4 % 2 # Modulo\n</code></pre>"},{"location":"Manuel/Concepts/#14-les-fonctions","title":"1.4. Les fonctions","text":"<p>Les fonctions sont des blocs de code qui permettent d'effectuer des op\u00e9rations sur des donn\u00e9es. Les fonctions les plus courantes sont les fonctions d'entr\u00e9e/sortie, les fonctions math\u00e9matiques, les fonctions de manipulation de cha\u00eenes de caract\u00e8res, etc.</p> <pre><code>\nprint(\"Hello World\") # Affiche \"Hello World\" dans la console\n\nlen(\"Hello World\") # Retourne la longueur de la cha\u00eene de caract\u00e8res\n</code></pre>"},{"location":"Manuel/Concepts/#15-les-conditions","title":"1.5. Les conditions","text":"<p>Les conditions sont des blocs de code qui permettent d'ex\u00e9cuter du code en fonction d'une condition. Les conditions les plus courantes sont les conditions if, les conditions elif, les conditions else, etc.</p> <pre><code>\nif a == 1:\n    print(\"a est \u00e9gal \u00e0 1\")\nelif a == 2:\n    print(\"a est \u00e9gal \u00e0 2\")\nelse:\n    print(\"a est diff\u00e9rent de 1 et 2\")\n</code></pre>"},{"location":"Manuel/Concepts/#16-les-boucles","title":"1.6. Les boucles","text":"<p>Les boucles sont des blocs de code qui permettent d'ex\u00e9cuter du code en boucle. Les boucles les plus courantes sont les boucles for, les boucles while, etc.</p> <pre><code>\nfor i in range(10):\n    print(i)\n\ni = 0\n\nwhile i &lt; 10:\n    print(i)\n    i += 1\n</code></pre>"},{"location":"Manuel/Concepts/#2-poo","title":"2. POO","text":"<p>La POO ou Programmation Orient\u00e9e Objet est un paradigme de programmation qui permet de cr\u00e9er des objets \u00e0 partir de classes. Les objets sont des instances de classes. Les classes sont des mod\u00e8les qui permettent de cr\u00e9er des objets. Les classes sont d\u00e9finies par un nom, des attributs et des m\u00e9thodes. Les attributs sont des variables qui sont propres \u00e0 l'objet. Les m\u00e9thodes sont des fonctions qui sont propres \u00e0 l'objet.</p> <p>Pour sch\u00e9matiser on peut dire que les classes sont des \"moules\" et les objets sont des \"g\u00e2teaux\" qui sont cr\u00e9\u00e9s \u00e0 partir des \"moules\".</p>"},{"location":"Manuel/Concepts/#21-les-classes","title":"2.1. Les classes","text":"<p>Les classes sont des mod\u00e8les qui permettent de cr\u00e9er des objets. Les classes sont d\u00e9finies par un nom, des attributs et des m\u00e9thodes. Les attributs sont des variables qui sont propres \u00e0 l'objet. Les m\u00e9thodes sont des fonctions qui sont propres \u00e0 l'objet.</p> <pre><code>\nclass Person:\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n\n    def say_hello(self):\n        print(\"Hello, my name is \" + self.name + \" and I am \" + str(self.age) + \" years old.\")\n\nperson = Person(\"John Doe\", 30)\n\nperson.say_hello()\n</code></pre> <p>Ici Person est une classe qui repr\u00e9sente une personne. Mais Person est juste le \"mod\u00e8le\" qui permet de cr\u00e9er des objets. Pour cr\u00e9er un objet \u00e0 partir de la classe Person on utilise le mot cl\u00e9 \"new\" suivi du nom de la classe. Ici on cr\u00e9e un objet de type Person qui est stock\u00e9 dans la variable person. On peut ensuite appeler la m\u00e9thode say_hello() de l'objet person :</p> <pre><code>\nmathieu = Person(\"Mathieu\", 18)\n# ici on cr\u00e9e un objet de type Person qui est stock\u00e9 dans la variable mathieu\n</code></pre>"},{"location":"Manuel/Concepts/#22-les-attributs","title":"2.2. Les attributs","text":"<p>Les attributs sont des variables qui sont propres \u00e0 l'objet. Les attributs sont d\u00e9finis dans la m\u00e9thode init() de la classe.</p> <p>Dans la classe Person on a d\u00e9fini deux attributs : name et age. Ces attributs sont accessibles depuis l'objet person.</p>"},{"location":"Manuel/Concepts/#23-les-methodes","title":"2.3. Les m\u00e9thodes","text":"<p>Les m\u00e9thodes sont des fonctions qui sont propres \u00e0 l'objet. Les m\u00e9thodes sont d\u00e9finies dans la classe. Elle sont accessible depuis l'objet.</p> <p>Dans la classe Person on a d\u00e9fini une m\u00e9thode : say_hello(). Cette m\u00e9thode est accessible depuis l'objet person.</p> <p>Exemple :</p> <pre><code>\nmathieu.say_hello()\n# ici on appelle la m\u00e9thode say_hello() de l'objet mathieu\n</code></pre>"},{"location":"Manuel/Concepts/#24-lheritage","title":"2.4. L'h\u00e9ritage","text":"<p>L'h\u00e9ritage permet de cr\u00e9er des classes qui h\u00e9ritent des attributs et des m\u00e9thodes d'une autre classe. On peut dire que la classe fille h\u00e9rite de la classe m\u00e8re.</p> <p>Par exemple, si on veut d\u00e9finir une classe animal qui repr\u00e9sentera tous les animaux et une classe chat qui repr\u00e9sentera tous les chats, on peut dire que la classe chat h\u00e9rite de la classe animal. Ainsi il en r\u00e9cup\u00e9rera tous les attributs et toutes les m\u00e9thodes.</p> <pre><code>\nclass Animal:\n    def __init__(self, name):\n        self.name = name\n\n    def roar(self):\n        print(\"Roar !\")\n\nclass Cat(Animal):\n    def __init__(self, name):\n        super().__init__(name)\n\n    def meow(self):\n        print(\"Meow !\")\n\npotiLeChat = Cat(\"Poti\")\npotiLeChat.roar() # poti le chat h\u00e9rite de la m\u00e9thode roar() de la classe Animal\npotiLeChat.meow()\n</code></pre>"},{"location":"Manuel/Concepts/#25-lencapsulation","title":"2.5. L'encapsulation","text":"<p>L'encapsulation permet de rendre les attributs et les m\u00e9thodes priv\u00e9s. Cela signifie qu'ils ne sont pas accessibles depuis l'ext\u00e9rieur de la classe. (En python, Pour rendre un attribut ou une m\u00e9thode priv\u00e9 il faut les pr\u00e9fixer par deux underscores.)</p>"},{"location":"Manuel/Concepts/#26-le-polymorphisme","title":"2.6. Le polymorphisme","text":"<p>Le polymorphisme permet de red\u00e9finir une m\u00e9thode dans une classe fille. Ainsi, la m\u00e9thode de la classe fille sera appel\u00e9e \u00e0 la place de la m\u00e9thode de la classe m\u00e8re.</p> <pre><code>\nclass Animal:\n    def __init__(self, name):\n        self.name = name\n\n    def roar(self):\n        print(\"Roar !\")\n\nclass Cat(Animal):\n\n    def __init__(self, name):\n        super().__init__(name)\n\n    def roar(self):\n        print(\"Meow !\")\n\npotiLeChat = Cat(\"Poti\")\n\npotiLeChat.roar() # Ici la m\u00e9thode roar() de la classe Cat sera appel\u00e9e, on aura donc \"Meow !\" qui sera affich\u00e9 dans la console.\n</code></pre>"},{"location":"Manuel/Concepts/#3-recurcivite","title":"3. R\u00e9curcivit\u00e9","text":"<p>La r\u00e9cursivit\u00e9 est un concept qui permet de r\u00e9soudre un probl\u00e8me en le d\u00e9composant en plusieurs sous-probl\u00e8mes. Le sous-probl\u00e8me est lui-m\u00eame d\u00e9compos\u00e9 en plusieurs sous-probl\u00e8mes, etc. Le sous-probl\u00e8me le plus simple est r\u00e9solu et le r\u00e9sultat est utilis\u00e9 pour r\u00e9soudre le sous-probl\u00e8me pr\u00e9c\u00e9dent, etc.</p>"},{"location":"Manuel/Concepts/#31-exemple","title":"3.1. Exemple","text":"<p>Voici un exemple de r\u00e9cursivit\u00e9 qui permet de calculer la factorielle d'un nombre.</p> <pre><code>\ndef factorielle(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorielle(n - 1)\n\nprint(factorielle(5))\n\n# 5 * factorielle(4)\n# 5 * 4 * factorielle(3)\n# 5 * 4 * 3 * factorielle(2)\n# 5 * 4 * 3 * 2 * factorielle(1)\n# 5 * 4 * 3 * 2 * 1 * factorielle(0)\n# 5 * 4 * 3 * 2 * 1 * 1\n</code></pre> <p>Une fonction qui s'appelle elle-m\u00eame est dite r\u00e9cursive.</p>"},{"location":"Manuel/Concepts/#32-quelques-regles","title":"3.2. Quelques r\u00e8gles","text":"<ul> <li> <p>Une fonction r\u00e9cursive doit avoir une condition d'arr\u00eat. Sinon la fonction va s'appeler \u00e0 l'infini.</p> </li> <li> <p>Une fonction r\u00e9cursive doit \u00eatre appel\u00e9e dans la fonction elle-m\u00eame.</p> </li> <li> <p>Une fonction r\u00e9cursive doit \u00eatre appel\u00e9e avec des param\u00e8tres diff\u00e9rents \u00e0 chaque fois.</p> </li> <li> <p>Une fonction r\u00e9cursive doit \u00eatre appel\u00e9e avec des param\u00e8tres qui tendent vers la condition d'arr\u00eat.</p> </li> </ul>"},{"location":"Manuel/Concepts/#33-exemples-dutilisation-de-la-recursivite","title":"3.3. Exemples d'utilisation de la r\u00e9cursivit\u00e9","text":"<ul> <li>Calculer la somme des \u00e9l\u00e9ments d'une liste</li> </ul> <pre><code>\ndef somme(liste):\n    if len(liste) == 0:\n        return 0\n    else:\n        # ici on appelle la fonction somme() avec une liste qui contient tous les \u00e9l\u00e9ments de la liste sauf le premier\n        return liste[0] + somme(liste[1:])\n</code></pre> <ul> <li>Compter le nombre d'\u00e9l\u00e9ments d'une liste</li> </ul> <pre><code>\ndef compter(liste):\n    if len(liste) == 0:\n        return 0\n    else:\n        # ici on appelle la fonction compter() avec une liste qui contient tous les \u00e9l\u00e9ments de la liste sauf le premier\n        return 1 + compter(liste[1:])\n</code></pre> <ul> <li>Calculer la puissance d'un nombre</li> </ul> <pre><code>\ndef puissance(nombre, exposant):\n    if exposant == 0:\n        return 1\n    else:\n        # ici on appelle la fonction puissance() avec un exposant qui est \u00e9gal \u00e0 l'exposant - 1\n        return nombre * puissance(nombre, exposant - 1)\n</code></pre> <p>La r\u00e9cursivit\u00e9 est tr\u00e8s puissante mais elle peut aussi \u00eatre tr\u00e8s gourmande en ressources. Il faut donc faire attention \u00e0 ne pas l'utiliser dans des cas o\u00f9 elle n'est pas n\u00e9cessaire.</p>"},{"location":"Manuel/Concepts/#4-les-exceptions","title":"4. Les exceptions","text":"<p>Les exceptions sont des erreurs qui peuvent survenir lors de l'ex\u00e9cution d'un programme. Les exceptions sont g\u00e9r\u00e9es par des blocs try/except. Le bloc try contient le code qui peut g\u00e9n\u00e9rer une exception. Le bloc except contient le code qui sera ex\u00e9cut\u00e9 si une exception est lev\u00e9e.</p> <pre><code>\ntry:\n    # ici on met le code qui peut g\u00e9n\u00e9rer une exception\nexcept:\n    # ici on met le code qui sera ex\u00e9cut\u00e9 si une exception est lev\u00e9e\n</code></pre>"},{"location":"Manuel/Concepts/#41-exemple","title":"4.1. Exemple","text":"<pre><code>\ntry:\n    print(1 / 0)\nexcept:\n    print(\"Une erreur est survenue\")\n</code></pre>"},{"location":"Manuel/Concepts/#42-les-exceptions-personnalisees","title":"4.2. Les exceptions personnalis\u00e9es","text":"<p>On peut cr\u00e9er ses propres exceptions en cr\u00e9ant une classe qui h\u00e9rite de la classe Exception.</p> <pre><code>\nclass MonException(Exception):\n    pass\n\ntry:\n\n    raise MonException(\"Une erreur est survenue\")\n\nexcept MonException as e:\n    print(e)\n</code></pre>"},{"location":"Manuel/Concepts/#5-calcul-de-la-complexite","title":"5. Calcul de la complexit\u00e9","text":"<p>La complexit\u00e9 d'un algorithme est une mesure de la quantit\u00e9 de ressources n\u00e9cessaires pour ex\u00e9cuter l'algorithme. Plus la complexit\u00e9 est faible, plus l'algorithme est performant.</p>"},{"location":"Manuel/Concepts/#51-les-notations","title":"5.1. Les notations","text":"<ul> <li> <p>O(n) : la complexit\u00e9 est proportionnelle \u00e0 la taille de l'entr\u00e9e.</p> </li> <li> <p>O(n\u00b2) : la complexit\u00e9 est proportionnelle au carr\u00e9 de la taille de l'entr\u00e9e.</p> </li> <li> <p>O(log n) : la complexit\u00e9 est proportionnelle au logarithme de la taille de l'entr\u00e9e. (logarithme en base 2)     &gt; cette complexit\u00e9 est tr\u00e8s performante, elle est utilis\u00e9e dans les algorithmes de tri.</p> </li> </ul> <p>Pour calculer la complexit\u00e9 d'un algorithme, on compte le nombre d'op\u00e9rations effectu\u00e9es par l'algorithme. On peut aussi utiliser des formules math\u00e9matiques pour calculer la complexit\u00e9.</p>"},{"location":"Manuel/Concepts/#52-exemple","title":"5.2. Exemple","text":"<pre><code>\ndef somme(liste):\n    somme = 0\n    for i in liste:\n        somme += i\n    return somme\n\n# la complexit\u00e9 de cette fonction est O(n)\n# car on effectue n op\u00e9rations (n = taille de la liste)\n</code></pre>"},{"location":"Manuel/Concepts/#6-les-algorithmes-de-tri","title":"6. Les algorithmes de tri","text":"<p>Les algorithmes de tri sont des algorithmes qui permettent de trier une liste. Il existe plusieurs algorithmes de tri, chacun a ses avantages et ses inconv\u00e9nients.</p>"},{"location":"Manuel/Concepts/#61-tri-a-bulles","title":"6.1. Tri \u00e0 bulles","text":"<p>Le tri \u00e0 bulles est un algorithme de tri qui consiste \u00e0 comparer deux \u00e9l\u00e9ments cons\u00e9cutifs et \u00e0 les \u00e9changer si l'\u00e9l\u00e9ment de gauche est plus grand que l'\u00e9l\u00e9ment de droite. On r\u00e9p\u00e8te cette op\u00e9ration jusqu'\u00e0 ce que la liste soit tri\u00e9e.</p> <pre><code>\ndef triABulles(liste):\n    for i in range(len(liste) - 1):\n        for j in range(len(liste) - 1):\n            if liste[j] &gt; liste[j + 1]:\n                liste[j], liste[j + 1] = liste[j + 1], liste[j]\n    return liste\n</code></pre> <ul> <li>Le tri \u00e0 bulles est tr\u00e8s simple \u00e0 impl\u00e9menter mais il est tr\u00e8s lent. Sa complexit\u00e9 est O(n\u00b2).</li> </ul>"},{"location":"Manuel/Concepts/#62-tri-par-insertion","title":"6.2. Tri par insertion","text":"<p>Le tri par insertion est un algorithme de tri qui consiste \u00e0 prendre un \u00e9l\u00e9ment de la liste et \u00e0 le placer \u00e0 sa place dans la liste tri\u00e9e. On r\u00e9p\u00e8te cette op\u00e9ration jusqu'\u00e0 ce que la liste soit tri\u00e9e.</p> <pre><code>\ndef triParInsertion(liste):\n    for i in range(1, len(liste)):\n        j = i\n        while j &gt; 0 and liste[j] &lt; liste[j - 1]:\n            liste[j], liste[j - 1] = liste[j - 1], liste[j]\n            j -= 1\n    return liste\n</code></pre> <ul> <li>Sa complexit\u00e9 est O(n\u00b2).</li> </ul>"},{"location":"Manuel/Concepts/#63-tri-par-selection","title":"6.3. Tri par s\u00e9lection","text":"<p>Le tri par s\u00e9lection est un algorithme de tri qui consiste \u00e0 prendre le plus petit \u00e9l\u00e9ment de la liste et \u00e0 le placer \u00e0 la premi\u00e8re position. On r\u00e9p\u00e8te cette op\u00e9ration jusqu'\u00e0 ce que la liste soit tri\u00e9e.</p> <pre><code>\ndef triParSelection(liste):\n    for i in range(len(liste) - 1):\n        min = i\n        for j in range(i + 1, len(liste)):\n            if liste[j] &lt; liste[min]:\n                min = j\n        liste[i], liste[min] = liste[min], liste[i]\n    return liste\n</code></pre> <ul> <li>La complexit\u00e9 de cet algorithme est O(n\u00b2).</li> </ul>"},{"location":"Manuel/Concepts/#64-tri-fusion","title":"6.4. Tri fusion","text":"<p>Le tri fusion est un algorithme de tri qui consiste \u00e0 diviser la liste en deux listes de taille \u00e9gale, \u00e0 trier ces deux listes et \u00e0 fusionner les deux listes tri\u00e9es.</p> <pre><code>\ndef triFusion(liste):\n    if len(liste) &lt;= 1:\n        return liste\n    else:\n        milieu = len(liste) // 2\n        gauche = triFusion(liste[:milieu])\n        droite = triFusion(liste[milieu:])\n        return fusion(gauche, droite)\n\ndef fusion(liste1, liste2):\n\n    liste = []\n\n    while len(liste1) &gt; 0 and len(liste2) &gt; 0:\n        if liste1[0] &lt; liste2[0]:\n            liste.append(liste1[0])\n            liste1.pop(0)\n        else:\n            liste.append(liste2[0])\n            liste2.pop(0)\n\n    if len(liste1) &gt; 0:\n        liste += liste1\n    else:\n        liste += liste2\n\n    return liste\n</code></pre> <p>La complexit\u00e9 de cet algorithme est O(n log n). C'est l'algorithme de tri le plus performant.</p> <ul> <li>Il existe une autre version du tri fusion qui utilise une fonction r\u00e9cursive.</li> </ul> <pre><code>\ndef triFusion(liste):\n    if len(liste) &lt;= 1:\n        return liste\n    else:\n        milieu = len(liste) // 2\n        gauche = triFusion(liste[:milieu])\n        droite = triFusion(liste[milieu:])\n        return fusion(gauche, droite)\n\ndef fusion(liste1, liste2):\n\n    liste = []\n\n    while len(liste1) &gt; 0 and len(liste2) &gt; 0:\n        if liste1[0] &lt; liste2[0]:\n            liste.append(liste1[0])\n            liste1.pop(0)\n        else:\n            liste.append(liste2[0])\n            liste2.pop(0)\n\n    if len(liste1) &gt; 0:\n        liste += liste1\n    else:\n        liste += liste2\n\n    return liste\n</code></pre>"},{"location":"Manuel/Concepts/#65-tri-rapide","title":"6.5. Tri rapide","text":"<p>Le tri rapide est un algorithme de tri qui consiste \u00e0 prendre un \u00e9l\u00e9ment de la liste et \u00e0 placer tous les \u00e9l\u00e9ments plus petits \u00e0 sa gauche et tous les \u00e9l\u00e9ments plus grands \u00e0 sa droite. On r\u00e9p\u00e8te cette op\u00e9ration sur les deux listes obtenues jusqu'\u00e0 ce que la liste soit tri\u00e9e.</p> <pre><code>\ndef triRapide(liste):\n    if len(liste) &lt;= 1:\n        return liste\n    else:\n        pivot = liste[0]\n        gauche = []\n        droite = []\n        for i in range(1, len(liste)):\n            if liste[i] &lt; pivot:\n                gauche.append(liste[i])\n            else:\n                droite.append(liste[i])\n        return triRapide(gauche) + [pivot] + triRapide(droite)\n</code></pre> <ul> <li>La complexit\u00e9 de cet algorithme est O(n log n). C'est un autre algorithme de tri le plus performant.</li> </ul>"},{"location":"Manuel/Concepts/#7-les-algorithmes-de-recherche","title":"7. Les algorithmes de recherche","text":"<p>Les algorithmes de recherche sont des algorithmes qui permettent de rechercher un \u00e9l\u00e9ment dans une liste. Il existe plusieurs algorithmes de recherche, chacun a ses avantages et ses inconv\u00e9nients.</p>"},{"location":"Manuel/Concepts/#71-recherche-sequentielle","title":"7.1. Recherche s\u00e9quentielle","text":"<p>La recherche s\u00e9quentielle est un algorithme de recherche qui consiste \u00e0 parcourir la liste jusqu'\u00e0 trouver l'\u00e9l\u00e9ment recherch\u00e9.</p> <pre><code>\ndef rechercheSequentielle(liste, element):\n    for i in range(len(liste)):\n        if liste[i] == element:\n            return i\n    return -1\n</code></pre> <ul> <li>La complexit\u00e9 de cet algorithme est O(n).</li> </ul>"},{"location":"Manuel/Concepts/#72-recherche-dichotomique","title":"7.2. Recherche dichotomique","text":"<p>La recherche dichotomique est un algorithme de recherche qui consiste \u00e0 diviser la liste en deux listes de taille \u00e9gale, \u00e0 choisir la liste qui contient l'\u00e9l\u00e9ment recherch\u00e9 et \u00e0 r\u00e9p\u00e9ter cette op\u00e9ration jusqu'\u00e0 trouver l'\u00e9l\u00e9ment recherch\u00e9.</p> <pre><code>\ndef rechercheDichotomique(liste, element):\n    debut = 0\n    fin = len(liste) - 1\n    while debut &lt;= fin:\n        milieu = (debut + fin) // 2\n        if liste[milieu] == element:\n            return milieu\n        elif liste[milieu] &lt; element:\n            debut = milieu + 1\n        else:\n            fin = milieu - 1\n    return -1\n</code></pre> <ul> <li>La complexit\u00e9 de cet algorithme est O(log n).</li> </ul>"},{"location":"Manuel/Concepts/#8-calcul-logique","title":"8. Calcul logique","text":""},{"location":"Manuel/Concepts/#81-operateurs-logiques","title":"8.1 Op\u00e9rateurs logiques","text":"<p>Les op\u00e9rateurs logiques sont des op\u00e9rateurs qui permettent de r\u00e9aliser des op\u00e9rations logiques.</p> <ul> <li>L'op\u00e9rateur ET est repr\u00e9sent\u00e9 par le symbole &amp;&amp; dans la plupart des languages et and en python. Il permet de v\u00e9rifier si deux conditions sont vraies.</li> </ul> <pre><code>\na = 5\n\nif a &gt; 0 and a &lt; 10:\n    print(\"a est compris entre 0 et 10\")\n</code></pre> <ul> <li>L'op\u00e9rateur OU est repr\u00e9sent\u00e9 par le symbole || dans la plupart des languages et or en python. Il permet de v\u00e9rifier si au moins une des deux conditions est vraie.</li> </ul> <pre><code>\na = 5\n\nif a &lt; 0 or a &gt; 10:\n    print(\"a est inf\u00e9rieur \u00e0 0 ou sup\u00e9rieur \u00e0 10\")\n</code></pre> <ul> <li>L'op\u00e9rateur NON est repr\u00e9sent\u00e9 par le symbole ! dans la plupart des languages et not en python. Il permet de v\u00e9rifier si une condition est fausse.</li> </ul> <pre><code>\na = 5\n\nif not a &gt; 0:\n    print(\"a est inf\u00e9rieur ou \u00e9gal \u00e0 0\")\n</code></pre>"},{"location":"Manuel/Concepts/#82-operateurs-de-comparaison","title":"8.2. Op\u00e9rateurs de comparaison","text":"<p>Les op\u00e9rateurs de comparaison sont des op\u00e9rateurs qui permettent de comparer deux valeurs.</p> <ul> <li>L'op\u00e9rateur == permet de v\u00e9rifier si deux valeurs sont \u00e9gales.</li> </ul> <pre><code>\na = 5\n\nif a == 5:\n    print(\"a est \u00e9gal \u00e0 5\")\n</code></pre> <ul> <li>L'op\u00e9rateur != permet de v\u00e9rifier si deux valeurs sont diff\u00e9rentes.</li> </ul> <pre><code>\na = 5\n\nif a != 5:\n    print(\"a est diff\u00e9rent de 5\")\n</code></pre> <ul> <li>Le XOR est un op\u00e9rateur logique qui permet de v\u00e9rifier si deux conditions sont diff\u00e9rentes.</li> </ul> <p>il est repr\u00e9sent\u00e9 par le symbole ^ en python. Il permet de v\u00e9rifier si au moins une des deux conditions est vraie mais pas les deux.</p> <pre><code>\na = 5\n\nif a &gt; 0 ^ a &lt; 10:\n    print(\"a est inf\u00e9rieur \u00e0 0 ou sup\u00e9rieur \u00e0 10\")\n</code></pre> <ul> <li>L'op\u00e9rateur &lt; permet de v\u00e9rifier si une valeur est inf\u00e9rieure \u00e0 une autre.</li> </ul> <pre><code>\na = 5\n\nif a &lt; 5:\n    print(\"a est inf\u00e9rieur \u00e0 5\")\n</code></pre> <ul> <li>Tous les autres op\u00e9rateurs de comparaison sont similaires. Ils sont repr\u00e9sent\u00e9s par &lt;= pour inf\u00e9rieur ou \u00e9gal, &gt; pour sup\u00e9rieur et &gt;= pour sup\u00e9rieur ou \u00e9gal.</li> </ul> <p>Les op\u00e9rateurs logiques et les op\u00e9rateurs de comparaison peuvent \u00eatre combin\u00e9s pour r\u00e9aliser des op\u00e9rations logiques plus complexes.</p> <pre><code>\nfor i in range(20):\n    if i &gt; 0 and i &lt; 10 and i != 5 or i == 12:\n        print(i)\n\n    # 1 2 3 4 6 7 8 9 12\n</code></pre> <p>Note : Les op\u00e9rateurs logiques et les op\u00e9rateurs de comparaison ont la m\u00eame priorit\u00e9. Les op\u00e9rateurs logiques sont \u00e9valu\u00e9s en premier. On peut utiliser des parenth\u00e8ses pour changer l'ordre d'\u00e9valuation.</p> <pre><code>\nfor i in range(20):\n    if (i &gt; 0 and i &lt; 10) and (i != 5 or i == 12):\n        print(i)\n\n    # 1 2 3 4 6 7 8 9\n</code></pre> <p>Les op\u00e9rateurs logiques r\u00e9alisent enfait des op\u00e9rations bit \u00e0 bit. Ce sont enfait des calculs binaires.</p> <p>tableau de v\u00e9rit\u00e9 des op\u00e9rateurs logiques :</p> a b a and b a or b not a xor 0 0 0 0 1 0 0 1 0 1 1 1 1 0 0 1 0 1 1 1 1 1 0 0"},{"location":"Manuel/JS/","title":"JS","text":""},{"location":"Manuel/JS/#sommaire","title":"Sommaire","text":"<ul> <li>Sommaire</li> <li>0 - Introduction</li> <li>1 - Les bases</li> <li>1.1 - Les variables</li> <li>1.2 - Listes</li> <li>1.3 - Les fonctions</li> <li>1.4 - Les boucles</li> <li>1.5 - Les conditions</li> <li>1.6 - Les objets</li> <li>1.7 - Les classes</li> <li>1.8 - Les promesses</li> <li>1.9 - Les fonctions fl\u00e9ch\u00e9es</li> <li>1.10 - Les modules</li> <li>1.11 - Les imports</li> <li>1.12 - Les API</li> <li>1.13 - Les fonctions asynchrones</li> <li>1.14 - Modification de la page web<ul> <li>1.14.1 - La m\u00e9thode innerHTML</li> <li>1.14.2 - La m\u00e9thode createElement</li> <li>1.14.3 - La m\u00e9thode appendChild</li> </ul> </li> <li>1.15 - Les \u00e9v\u00e9nements</li> <li>1.16 - Les formulaires</li> <li>1.17 - Les cookies</li> <li>1.18 - Les sessions</li> <li>1.19 - Query selector</li> <li>1.20 - Query selector all</li> <li>1.21 - JQUERY<ul> <li>1.21.1 - S\u00e9lectionner un \u00e9l\u00e9ment</li> <li>1.21.2 - Cr\u00e9er un \u00e9l\u00e9ment</li> <li>1.21.3 - Ajouter un \u00e9l\u00e9ment</li> <li>1.21.4 - Cr\u00e9er un \u00e9v\u00e9nement</li> <li>1.21.5 - R\u00e9cup\u00e9rer les donn\u00e9es d'un formulaire</li> <li>1.21.6 - R\u00e9cup\u00e9rer les donn\u00e9es d'un formulaire avec AJAX</li> </ul> </li> <li>1.22 - Les fichiers<ul> <li>1.22.1 - Cr\u00e9er un fichier</li> <li>1.22.2 - Lire un fichier</li> <li>1.22.3 - Supprimer un fichier</li> </ul> </li> <li>2 - Les frameworks</li> <li>3 - Bases de donn\u00e9es</li> <li>3.1 - Les bases de donn\u00e9es relationnelles</li> <li>3.2 - Utilisation en JS</li> <li>4 - Erreurs fr\u00e9quentes</li> <li>4.1 - SyntaxError</li> <li>4.2 - ReferenceError</li> <li>4.3 - TypeError</li> <li>4.4 - RangeError</li> <li>4.5 - EvalError</li> <li>4.6 - URIError</li> </ul>"},{"location":"Manuel/JS/#0-introduction","title":"0 - Introduction","text":"<p>Javascript est un langage de programmation qui permet de cr\u00e9er des sites web dynamiques. Il est utilis\u00e9 pour cr\u00e9er des sites web, des applications mobiles, des jeux vid\u00e9os, des robots, des objets connect\u00e9s, etc.</p>"},{"location":"Manuel/JS/#1-les-bases","title":"1 - Les bases","text":""},{"location":"Manuel/JS/#11-les-variables","title":"1.1 - Les variables","text":"<p>il existe 2 types de variables en javascript : les let et les const.</p> <pre><code>let a = 1;\nconst b = 2;\n</code></pre> <p>Les let sont des variables qui peuvent \u00eatre modifi\u00e9es, les const sont des variables qui ne peuvent pas \u00eatre modifi\u00e9es. /!\\ Il est possible de modifier une constante si elle est un tableau ou un objet. /!\\ Il existait une troisi\u00e8me variable, les var, mais elles sont d\u00e9pr\u00e9ci\u00e9es et ne doivent plus \u00eatre utilis\u00e9es.</p>"},{"location":"Manuel/JS/#12-listes","title":"1.2 - Listes","text":"<p>Les listes sont des variables qui contiennent plusieurs valeurs. On peut les cr\u00e9er de plusieurs mani\u00e8res :</p> <pre><code>let liste = [1, 2, 3];\n\nlet liste2 = new Array(1, 2, 3);\n\nlet liste3 = new Array(3);\nliste3[0] = 1;\nliste3[1] = 2;\nliste3[2] = 3;\n</code></pre> <p>Pour acc\u00e9der \u00e0 une valeur d'une liste, on utilise l'index de la valeur dans la liste :</p> <pre><code>let liste = [1, 2, 3];\nconsole.log(liste[0]); // affiche 1\nconsole.log(liste[1]); // affiche 2\nconsole.log(liste[2]); // affiche 3\n</code></pre>"},{"location":"Manuel/JS/#13-les-fonctions","title":"1.3 - Les fonctions","text":"<p>Les fonctions sont des morceaux de code qui peuvent \u00eatre appel\u00e9s plusieurs fois. Elles peuvent prendre des param\u00e8tres et renvoyer des valeurs.</p> <pre><code>function maFonction(param1, param2) {\n    return param1 + param2;\n}\n\nconsole.log(maFonction(1, 2)); // affiche 3\n</code></pre>"},{"location":"Manuel/JS/#14-les-boucles","title":"1.4 - Les boucles","text":"<p>Les boucles permettent de r\u00e9p\u00e9ter un morceau de code plusieurs fois.</p> <pre><code>\n// boucle for\n\nfor (let i = 0; i &lt; 10; i++) {\n    console.log(i);\n}\n\n// boucle while\n\nlet i = 0;\n\nwhile (i &lt; 10) {\n    console.log(i);\n    i++;\n}\n\n// boucle do while\n\nlet i = 0;\n\ndo {\n    console.log(i);\n    i++;\n} while (i &lt; 10);\n\n// boucle for each\n// Il permet de parcourir une liste et d'effectuer une action sur chaque \u00e9l\u00e9ment\n\nlet liste = [1, 2, 3];\n\nliste.forEach(function (element) {\n    console.log(element);\n});\n\n// boucle for of\n// Il correspond au for each de java\n\nlet liste = [1, 2, 3];\n\nfor (let element of liste) {\n    console.log(element);\n}\n\n// boucle for in\n// Il permet de parcourir les propri\u00e9t\u00e9s d'un objet\n\nlet objet = {\n    a: 1,\n    b: 2,\n    c: 3\n};\n\nfor (let propriete in objet) {\n    console.log(propriete);\n}\n</code></pre>"},{"location":"Manuel/JS/#15-les-conditions","title":"1.5 - Les conditions","text":"<p>Les conditions permettent d'ex\u00e9cuter un morceau de code si une condition est remplie.</p> <pre><code>\n// if\nif (condition) {\n    // code\n}\n\n// if else\n\nif (condition) {\n    // code\n} else {\n    // code\n}\n\n// if else if else\n\nif (condition) {\n    // code\n} else if (condition) {\n    // code\n} else {\n    // code\n}\n\n// switch\n\nswitch (variable) {\n    case valeur1:\n        // code\n        break;\n    case valeur2:\n        // code\n        break;\n    default:\n        // code\n        break;\n}\n</code></pre>"},{"location":"Manuel/JS/#16-les-objets","title":"1.6 - Les objets","text":"<p>Les objets sont des variables qui contiennent plusieurs propri\u00e9t\u00e9s.</p> <pre><code>\nlet objet = {\n    propriete1: 1,\n    propriete2: 2,\n    propriete3: 3\n};\n</code></pre> <p>Pour instancier un objet, on utilise le mot cl\u00e9 new :</p> <pre><code>\nlet objet = new Object();\n</code></pre> <p>Pour acc\u00e9der \u00e0 une propri\u00e9t\u00e9 d'un objet, on utilise le point :</p> <pre><code>console.log(objet.propriete1); // affiche la valeur de la propri\u00e9t\u00e9 propriete1\n</code></pre>"},{"location":"Manuel/JS/#17-les-classes","title":"1.7 - Les classes","text":"<p>Les classes sont des mod\u00e8les qui permettent de cr\u00e9er des objets.</p> <pre><code>\nclass MaClasse {\n    constructor(param1, param2) {\n        this.propriete1 = param1;\n        this.propriete2 = param2;\n    }\n\n    methode1() {\n        return this.propriete1 + this.propriete2;\n    }\n}\n</code></pre> <p>Les constructeurs sont des fonctions qui sont appel\u00e9es lors de l'instanciation d'un objet.</p> <p>/!\\ Les classes ne peuvent avoir qu'un seul constructeur.</p> <p>Pour instancier un objet, on utilise le mot cl\u00e9 new :</p> <pre><code>let objet = new MaClasse(1, 2);\n\nconsole.log(objet.methode1()); // affiche 3\n</code></pre>"},{"location":"Manuel/JS/#18-les-promesses","title":"1.8 - Les promesses","text":"<p>Les promesses permettent de g\u00e9rer des actions asynchrones.</p> <pre><code>\nlet promesse = new Promise(function (resolve, reject) {\n    // code\n});\n\npromesse.then(function (resultat) {\n    // code\n}).catch(function (erreur) {\n    // code\n});\n</code></pre>"},{"location":"Manuel/JS/#19-les-fonctions-flechees","title":"1.9 - Les fonctions fl\u00e9ch\u00e9es","text":"<p>Les fonctions fl\u00e9ch\u00e9es sont des fonctions plus courtes et plus simples \u00e0 \u00e9crire. Aussi appel\u00e9es arrow functions. Ou lambda en java.</p> <pre><code>\n// fonction fl\u00e9ch\u00e9e\n\nlet maFonction = (param1, param2) =&gt; {\n    return param1 + param2;\n};\n\n// fonction fl\u00e9ch\u00e9e avec un seul param\u00e8tre\n\nlet maFonction = param =&gt; {\n    return param;\n};\n\n// fonction fl\u00e9ch\u00e9e avec un seul param\u00e8tre et un seul retour\n\nlet maFonction = param =&gt; param;\n\n// fonction fl\u00e9ch\u00e9e avec plusieurs param\u00e8tres et un seul retour\n\nlet maFonction = (param1, param2) =&gt; param1 + param2;\n</code></pre>"},{"location":"Manuel/JS/#110-les-modules","title":"1.10 - Les modules","text":"<p>Les modules permettent de d\u00e9couper un programme en plusieurs fichiers.</p> <pre><code>\n// module.js\n\nexport function maFonction(param1, param2) {\n    return param1 + param2;\n}\n\n// index.js\n\nimport { maFonction } from './module.js';\n\nconsole.log(maFonction(1, 2)); // affiche 3\n</code></pre>"},{"location":"Manuel/JS/#111-les-imports","title":"1.11 - Les imports","text":"<p>Les imports permettent d'importer des modules.</p> <pre><code>\n// module.js\n\nexport function maFonction(param1, param2) {\n    return param1 + param2;\n}\n\n// index.js\n\nimport { maFonction } from './module.js';\n\nconsole.log(maFonction(1, 2)); // affiche 3\n</code></pre>"},{"location":"Manuel/JS/#112-les-api","title":"1.12 - Les API","text":"<p>Les API sont des interfaces qui permettent d'acc\u00e9der \u00e0 des donn\u00e9es. Elles sont souvent utilis\u00e9es pour r\u00e9cup\u00e9rer des donn\u00e9es depuis un serveur. Les API sont souvent au format JSON. Pour les utiliser, on utilise la fonction fetch.</p> <pre><code>\n// API fetch\n\nfetch('https://api.github.com/users/kevin-pierre')\n    .then(function (reponse) {\n        return reponse.json();\n    })\n    .then(function (donnees) {\n        console.log(donnees);\n    })\n    .catch(function (erreur) {\n        console.log(erreur);\n    });\n</code></pre> <p>Cela permet de r\u00e9cup\u00e9rer les donn\u00e9es de l'utilisateur kevin-pierre sur github.</p>"},{"location":"Manuel/JS/#113-les-fonctions-asynchrones","title":"1.13 - Les fonctions asynchrones","text":"<p>Les fonctions asynchrones permettent d'ex\u00e9cuter du code de mani\u00e8re asynchrone. C'est \u00e0 dire que le code suivant ne sera pas ex\u00e9cut\u00e9 tant que le code asynchrone n'est pas termin\u00e9. Pour utiliser une fonction asynchrone, on utilise le mot cl\u00e9 async.</p> <pre><code>\n// fonction asynchrone\n\nasync function maFonction() {\n    let reponse = await fetch('https://api.github.com/users/kevin-pierre');\n    let donnees = await reponse.json();\n    console.log(donnees);\n}\n\nmaFonction();\n</code></pre>"},{"location":"Manuel/JS/#114-modification-de-la-page-web","title":"1.14 - Modification de la page web","text":"<p>Pour modifier le contenu d'une page web, on a plusieurs solutions.</p>"},{"location":"Manuel/JS/#1141-la-methode-innerhtml","title":"1.14.1 - La m\u00e9thode innerHTML","text":"<p>La m\u00e9thode innerHTML permet de selectionner (et donc de modifier) le contenu d'un \u00e9l\u00e9ment HTML.</p> <pre><code>\n// s\u00e9lectionne l'\u00e9l\u00e9ment HTML avec l'id \"monElement\"\nlet monElement = document.getElementById('monElement');\n\n// modifie le contenu de l'\u00e9l\u00e9ment\n\nmonElement.innerHTML = 'nouveau contenu';\n</code></pre>"},{"location":"Manuel/JS/#1142-la-methode-createelement","title":"1.14.2 - La m\u00e9thode createElement","text":"<p>La m\u00e9thode createElement permet de cr\u00e9er un \u00e9l\u00e9ment HTML.</p> <pre><code>\n// cr\u00e9e un \u00e9l\u00e9ment HTML\nlet monElement = document.createElement('div');\n\n// modifie le contenu de l'\u00e9l\u00e9ment\n\nmonElement.innerHTML = 'nouveau contenu';\n</code></pre>"},{"location":"Manuel/JS/#1143-la-methode-appendchild","title":"1.14.3 - La m\u00e9thode appendChild","text":"<p>La m\u00e9thode appendChild permet d'ajouter un \u00e9l\u00e9ment HTML \u00e0 un autre \u00e9l\u00e9ment HTML.</p> <pre><code>\n// s\u00e9lectionne l'\u00e9l\u00e9ment HTML avec l'id \"monElement\"\nlet monElement = document.getElementById('monElement');\n\n// cr\u00e9e un \u00e9l\u00e9ment HTML\n\nlet monElement2 = document.createElement('div');\n\n// modifie le contenu de l'\u00e9l\u00e9ment\n\nmonElement2.innerHTML = 'nouveau contenu';\n\n// ajoute l'\u00e9l\u00e9ment \u00e0 l'\u00e9l\u00e9ment parent\n\nmonElement.appendChild(monElement2);\n</code></pre>"},{"location":"Manuel/JS/#115-les-evenements","title":"1.15 - Les \u00e9v\u00e9nements","text":"<p>Les \u00e9v\u00e9nements permettent de d\u00e9clencher une action lorsqu'un \u00e9v\u00e9nement se produit.</p> <pre><code>\n// s\u00e9lectionne l'\u00e9l\u00e9ment HTML avec l'id \"monElement\"\n\nlet monElement = document.getElementById('monElement');\n\n// d\u00e9clenche une action lorsqu'on clique sur l'\u00e9l\u00e9ment\n\nmonElement.addEventListener('click', function () {\n    console.log('click');\n});\n</code></pre>"},{"location":"Manuel/JS/#116-les-formulaires","title":"1.16 - Les formulaires","text":"<p>Les formulaires permettent de r\u00e9cup\u00e9rer des donn\u00e9es saisies par l'utilisateur.</p> <pre><code>\n&lt;form id=\"monFormulaire\"&gt;\n    &lt;input type=\"text\" name=\"nom\" /&gt;\n    &lt;input type=\"text\" name=\"prenom\" /&gt;\n    &lt;input type=\"submit\" value=\"Envoyer\" /&gt;\n\n    &lt;div id=\"resultat\"&gt;&lt;/div&gt;\n\n    &lt;script src=\"index.js\"&gt;&lt;/script&gt;\n\n&lt;/form&gt;\n\n</code></pre> <pre><code>\n// s\u00e9lectionne l'\u00e9l\u00e9ment HTML avec l'id \"monFormulaire\"\n\nlet monFormulaire = document.getElementById('monFormulaire');\n\n// d\u00e9clenche une action lorsqu'on soumet le formulaire\n\nmonFormulaire.addEventListener('submit', function (e) {\n    e.preventDefault();\n\n    // r\u00e9cup\u00e8re les donn\u00e9es du formulaire\n\n    let nom = document.querySelector('input[name=\"nom\"]').value;\n    let prenom = document.querySelector('input[name=\"prenom\"]').value;\n\n    // affiche les donn\u00e9es dans le HTML\n\n    document.getElementById('resultat').innerHTML = 'Bonjour ' + prenom + ' ' + nom;\n});\n</code></pre>"},{"location":"Manuel/JS/#117-les-cookies","title":"1.17 - Les cookies","text":"<p>Les cookies sont des donn\u00e9es stock\u00e9es dans le navigateur de l'utilisateur. On peut les utiliser pour stocker des informations sur l'utilisateur.</p> <pre><code>\n// cr\u00e9e un cookie\n\ndocument.cookie = 'nom=kevin';\n\n// r\u00e9cup\u00e8re un cookie\n\nlet cookies = document.cookie.split(';');\n\nconsole.log(cookies);\n</code></pre>"},{"location":"Manuel/JS/#118-les-sessions","title":"1.18 - Les sessions","text":"<p>Les sessions permettent de stocker des donn\u00e9es c\u00f4t\u00e9 serveur. On peut les utiliser pour stocker des informations sur l'utilisateur.</p> <pre><code>\n// cr\u00e9e une session\n\nreq.session.nom = 'kevin';\n\n// r\u00e9cup\u00e8re une session\n\nconsole.log(req.session.nom);\n</code></pre>"},{"location":"Manuel/JS/#119-query-selector","title":"1.19 - Query selector","text":"<p>La m\u00e9thode querySelector permet de s\u00e9lectionner un \u00e9l\u00e9ment HTML.</p> <p>Il s'agit d'une m\u00e9thode plus puissante que getElementById et getElementsByClassName. Elle permet de s\u00e9lectionner un \u00e9l\u00e9ment HTML avec un id, une classe ou les deux.</p> <p>Attention, la m\u00e9thode querySelector ne permet de s\u00e9lectionner qu'un seul \u00e9l\u00e9ment. Si plusieurs \u00e9l\u00e9ments correspondent \u00e0 la s\u00e9lection, seul le premier sera s\u00e9lectionn\u00e9.</p> <pre><code>\n// s\u00e9lectionne l'\u00e9l\u00e9ment HTML avec l'id \"monElement\"\n\nlet monElement = document.querySelector('#monElement');\n\n// s\u00e9lectionne l'\u00e9l\u00e9ment HTML avec la classe \"maClasse\"\n\nlet monElement2 = document.querySelector('.maClasse');\n\n// s\u00e9lectionne l'\u00e9l\u00e9ment HTML avec l'id \"monElement\" et la classe \"maClasse\"\n\nlet monElement3 = document.querySelector('#monElement.maClasse');\n</code></pre>"},{"location":"Manuel/JS/#120-query-selector-all","title":"1.20 - Query selector all","text":"<p>La m\u00e9thode querySelectorAll permet de s\u00e9lectionner plusieurs \u00e9l\u00e9ments HTML.</p> <pre><code>\n// s\u00e9lectionne tous les \u00e9l\u00e9ments HTML avec la classe \"maClasse\"\n\nlet mesElements = document.querySelectorAll('.maClasse');\n</code></pre>"},{"location":"Manuel/JS/#121-jquery","title":"1.21 - JQUERY","text":"<p>JQUERY est une librairie JS qui permet de simplifier le d\u00e9veloppement web.</p> <p>JQuery permet de s\u00e9lectionner des \u00e9l\u00e9ments HTML, de modifier leur contenu, de cr\u00e9er des \u00e9v\u00e9nements, etc.</p> <p>Il est possible d'utiliser JQuery en ajoutant le script suivant dans la page HTML :</p> <pre><code>\n&lt;script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"&gt;&lt;/script&gt;\n\n</code></pre>"},{"location":"Manuel/JS/#1211-selectionner-un-element","title":"1.21.1 - S\u00e9lectionner un \u00e9l\u00e9ment","text":"<p>La m\u00e9thode $ permet de s\u00e9lectionner un \u00e9l\u00e9ment HTML.</p> <pre><code>\n// s\u00e9lectionne l'\u00e9l\u00e9ment HTML avec l'id \"monElement\"\n\nlet monElement = $('#monElement');\n\n// modifie le contenu de l'\u00e9l\u00e9ment\n\nmonElement.html('nouveau contenu');\n</code></pre>"},{"location":"Manuel/JS/#1212-creer-un-element","title":"1.21.2 - Cr\u00e9er un \u00e9l\u00e9ment","text":"<p>La m\u00e9thode $ permet de cr\u00e9er un \u00e9l\u00e9ment HTML.</p> <pre><code>\n// cr\u00e9e un \u00e9l\u00e9ment HTML\n\nlet monElement = $('&lt;div&gt;');\n\n// modifie le contenu de l'\u00e9l\u00e9ment\n\nmonElement.html('nouveau contenu');\n</code></pre>"},{"location":"Manuel/JS/#1213-ajouter-un-element","title":"1.21.3 - Ajouter un \u00e9l\u00e9ment","text":"<p>La m\u00e9thode append permet d'ajouter un \u00e9l\u00e9ment HTML \u00e0 un autre \u00e9l\u00e9ment HTML.</p> <pre><code>\n// s\u00e9lectionne l'\u00e9l\u00e9ment HTML avec l'id \"monElement\"\n\nlet monElement = $('#monElement');\n\n// cr\u00e9e un \u00e9l\u00e9ment HTML\n\nlet monElement2 = $('&lt;div&gt;');\n\n// modifie le contenu de l'\u00e9l\u00e9ment\n\nmonElement2.html('nouveau contenu');\n\n// ajoute l'\u00e9l\u00e9ment \u00e0 l'\u00e9l\u00e9ment parent\n\nmonElement.append(monElement2);\n</code></pre>"},{"location":"Manuel/JS/#1214-creer-un-evenement","title":"1.21.4 - Cr\u00e9er un \u00e9v\u00e9nement","text":"<p>La m\u00e9thode on permet de cr\u00e9er un \u00e9v\u00e9nement.</p> <pre><code>\n// s\u00e9lectionne l'\u00e9l\u00e9ment HTML avec l'id \"monElement\"\n\nlet monElement = $('#monElement');\n\n// d\u00e9clenche une action lorsqu'on clique sur l'\u00e9l\u00e9ment\n\nmonElement.on('click', function () {\n    console.log('click');\n});\n</code></pre>"},{"location":"Manuel/JS/#1215-recuperer-les-donnees-dun-formulaire","title":"1.21.5 - R\u00e9cup\u00e9rer les donn\u00e9es d'un formulaire","text":"<p>La m\u00e9thode serializeArray permet de r\u00e9cup\u00e9rer les donn\u00e9es d'un formulaire.</p> <pre><code>\n// s\u00e9lectionne l'\u00e9l\u00e9ment HTML avec l'id \"monFormulaire\"\n\nlet monFormulaire = $('#monFormulaire');\n\n// d\u00e9clenche une action lorsqu'on soumet le formulaire\n\nmonFormulaire.on('submit', function (e) {\n    e.preventDefault();\n\n    // r\u00e9cup\u00e8re les donn\u00e9es du formulaire\n\n    let donnees = monFormulaire.serializeArray();\n\n    console.log(donnees);\n});\n</code></pre>"},{"location":"Manuel/JS/#1216-recuperer-les-donnees-dun-formulaire-avec-ajax","title":"1.21.6 - R\u00e9cup\u00e9rer les donn\u00e9es d'un formulaire avec AJAX","text":"<p>AJAX est une technique qui permet de r\u00e9cup\u00e9rer des donn\u00e9es sans recharger la page.</p> <p>La m\u00e9thode ajax permet de r\u00e9cup\u00e9rer les donn\u00e9es d'un formulaire avec AJAX.</p> <pre><code>\n// s\u00e9lectionne l'\u00e9l\u00e9ment HTML avec l'id \"monFormulaire\"\n\nlet monFormulaire = $('#monFormulaire');\n\n// d\u00e9clenche une action lorsqu'on soumet le formulaire\n\nmonFormulaire.on('submit', function (e) {\n    e.preventDefault();\n\n    // r\u00e9cup\u00e8re les donn\u00e9es du formulaire\n\n    let donnees = monFormulaire.serializeArray();\n\n    // envoie les donn\u00e9es avec AJAX\n\n    $.ajax({\n        url: 'http://localhost:3000/formulaire',\n        method: 'POST',\n        data: donnees,\n        success: function (data) {\n            console.log(data);\n        }\n    });\n});\n</code></pre>"},{"location":"Manuel/JS/#122-les-fichiers","title":"1.22 - Les fichiers","text":"<p>Les fichiers permettent de stocker des donn\u00e9es sur le disque dur de l'ordinateur.</p>"},{"location":"Manuel/JS/#1221-creer-un-fichier","title":"1.22.1 - Cr\u00e9er un fichier","text":"<p>La m\u00e9thode writeFile permet de cr\u00e9er un fichier.</p> <pre><code>\n// importe le module fs\n\nconst fs = require('fs');\n\n// cr\u00e9e un fichier\n\nfs.writeFile('monFichier.txt', 'contenu du fichier', function (err) {\n    if (err) {\n        console.log(err);\n    }\n});\n</code></pre>"},{"location":"Manuel/JS/#1222-lire-un-fichier","title":"1.22.2 - Lire un fichier","text":"<p>La m\u00e9thode readFile permet de lire un fichier.</p> <pre><code>\n// importe le module fs\n\nconst fs = require('fs');\n\n// lit un fichier\n\n// le contenu du fichier est stock\u00e9 dans la variable data\n\ndata = fs.readFile('monFichier.txt', function (err, data) {\n    if (err) {\n        console.log(err);\n    }\n});\n</code></pre>"},{"location":"Manuel/JS/#1223-supprimer-un-fichier","title":"1.22.3 - Supprimer un fichier","text":"<p>La m\u00e9thode unlink permet de supprimer un fichier.</p> <pre><code>\n// importe le module fs\n\nconst fs = require('fs');\n\n// supprime un fichier\n\nfs.unlink('monFichier.txt', function (err) {\n    if (err) {\n        console.log(err);\n    }\n});\n</code></pre>"},{"location":"Manuel/JS/#2-les-frameworks","title":"2 - Les frameworks","text":"<p>Il existe plusieurs frameworks pour le d\u00e9veloppement web. Les plus connus sont React, Angular et Vue.</p> <p>Ils permettent de cr\u00e9er des applications web plus rapidement pour les d\u00e9veloppeurs qui ont d\u00e9j\u00e0 une certaine exp\u00e9rience.</p>"},{"location":"Manuel/JS/#3-bases-de-donnees","title":"3 - Bases de donn\u00e9es","text":""},{"location":"Manuel/JS/#31-les-bases-de-donnees-relationnelles","title":"3.1 - Les bases de donn\u00e9es relationnelles","text":"<p>Les bases de donn\u00e9es relationnelles sont des bases de donn\u00e9es qui permettent de stocker des donn\u00e9es dans des tables. Les tables sont reli\u00e9es entre elles par des cl\u00e9s \u00e9trang\u00e8res.</p>"},{"location":"Manuel/JS/#32-utilisation-en-js","title":"3.2 - Utilisation en JS","text":"<p>Pour utiliser une base de donn\u00e9es en JS, on utilise un ORM. Un ORM est un outil qui permet de faire le lien entre une base de donn\u00e9es et un langage de programmation.</p> <p>Les ORM les plus connus sont Sequelize et Mongoose.</p> <p>plus d'informations sur : https://www.npmjs.com/ MongoDB : https://www.mongodb.com/fr Sequelize : https://sequelize.org/ Mongoose : https://mongoosejs.com/</p>"},{"location":"Manuel/JS/#4-erreurs-frequentes","title":"4 - Erreurs fr\u00e9quentes","text":""},{"location":"Manuel/JS/#41-syntaxerror","title":"4.1 - SyntaxError","text":"<p>Une erreur de syntaxe est une erreur qui survient lors de la compilation du code. Elle est souvent caus\u00e9e par une faute de frappe.</p>"},{"location":"Manuel/JS/#42-referenceerror","title":"4.2 - ReferenceError","text":"<p>Une erreur de r\u00e9f\u00e9rence est une erreur qui survient lors de l'ex\u00e9cution du code. Elle est souvent caus\u00e9e par une faute de frappe.</p>"},{"location":"Manuel/JS/#43-typeerror","title":"4.3 - TypeError","text":"<p>Une erreur de type est une erreur qui survient lors de l'ex\u00e9cution du code. Elle est souvent caus\u00e9e par une mauvaise utilisation d'une fonction.</p>"},{"location":"Manuel/JS/#44-rangeerror","title":"4.4 - RangeError","text":"<p>Une erreur de plage est une erreur qui survient lors de l'ex\u00e9cution du code. Elle est souvent caus\u00e9e par une mauvaise utilisation d'une fonction.</p>"},{"location":"Manuel/JS/#45-evalerror","title":"4.5 - EvalError","text":"<p>Une erreur d'\u00e9valuation est une erreur qui survient lors de l'ex\u00e9cution du code. Elle est souvent caus\u00e9e par une mauvaise utilisation d'une fonction.</p>"},{"location":"Manuel/JS/#46-urierror","title":"4.6 - URIError","text":"<p>Une erreur d'URI est une erreur qui survient lors de l'ex\u00e9cution du code. Elle est souvent caus\u00e9e par une mauvaise utilisation d'une fonction.</p>"},{"location":"Manuel/Java/","title":"JAVA","text":"<p>Mise en forme :  * les notes sont apr\u00e8s un note : * le format est : note : texte (en gras)     un truc \u00e0 changer : c'est les trucs \u00e0 changer (y'a jamais de __ autour) * les exemples sont dans les zones java, apr\u00e8s les commentaires</p>"},{"location":"Manuel/Java/#0-sommaire","title":"0) SOMMAIRE :","text":"<ul> <li>1) IMPORTS</li> <li>2) CLASSES</li> <li>3) METHODES</li> <li>4) VARIABLES 4.1 Port\u00e9e des variables</li> <li>5) BOUCLES 5.1 For : 5.2 While : 5.3 Foreach :</li> <li>6) STRUCTURES DE DONNEES 6.1 TABLEAU 6.2 LISTE 6.3 MAP 6.4 SET 6.5 INTERFACE</li> <li>7) HERITAGE 7.1 Classes abstraites 7.2 Classes filles</li> <li>8) EXCEPTIONS</li> <li>9) ENUMERATIONS</li> <li>10) FICHIERS</li> <li>11) THREADS</li> <li>SPECIAL Conception Points virgules Commentaires GIT UML</li> </ul>"},{"location":"Manuel/Java/#1-imports","title":"1) IMPORTS","text":"<p>les imports sont les classes externes que tu appel dans ton code. Si une autre classe est dans le meme \"package\" que la tienne, tu n'as pas besoin de l'importer.</p> <pre><code>```java\n/*\nimport __nom de la classe__;\n*/\nimport java.util.Scanner;\n```\n</code></pre>"},{"location":"Manuel/Java/#2-classes","title":"2) CLASSES","text":"<pre><code>```java\n/*\npublic class __nom de la classe__ ((extends __nom de la classe parente__)) ((implements __nom de l'interface__)) {\n*/\npublic class Dragon extends Animal implements Volant {}\n// Le Dragon est un Animal et on peut lui appeler les m\u00e9thodes de l'interface Volant\n```\n</code></pre>"},{"location":"Manuel/Java/#3-methodes","title":"3) METHODES","text":"<p>static : la m\u00e9thode est appel\u00e9e depuis la classe et non depuis un objet (en gros elle est globale), comme la m\u00e9thode main ou un constructeur global</p> <pre><code>```java\n/*\npublic ((static)) __type de retour__ __nom de la m\u00e9thode__ (__type du param\u00e8tre__ __nom du param\u00e8tre__) {\n*/\n\npublic static void main(String[] args) {}\n\npublic void manger(Dragon quiQuiMange, Eatable quoiQuiEstManger) {}\n```\n</code></pre>"},{"location":"Manuel/Java/#4-variables","title":"4) VARIABLES","text":"<p>static : la variable est globale \u00e0 la classe et non \u00e0 l'objet final : la variable ne peut pas \u00eatre modifi\u00e9e</p>"},{"location":"Manuel/Java/#41-portee-des-variables","title":"4.1 Port\u00e9e des variables","text":"<p>si tu pr\u00e9cise pas ca sera private par d\u00e9faut</p> <p>private : la variable ne peut pas \u00eatre modifi\u00e9e depuis l'ext\u00e9rieur de la classe (- en UML) protected : la variable peut \u00eatre modifi\u00e9e depuis les classes filles (# en UML) *public : la variable peut \u00eatre modifi\u00e9e depuis n'importe o\u00f9 (+ en UML)</p> <pre><code>```java\n/*\n((__port\u00e9e de la variable__)) ((static)) ((final)) __type de la variable__ __nom de la variable__;\n*/\n\nprivate static final int nombreDePattesDunDragon = 4;\n\npublic Dragon didierLeDragon;\n```\n\n*les variables globales sont en camelCase : nombreDePattesDunDragon\n</code></pre>"},{"location":"Manuel/Java/#5-boucles","title":"5) BOUCLES","text":""},{"location":"Manuel/Java/#51-for","title":"5.1 For :","text":"<pre><code>```java\n/*\n    for (__type de l'\u00e9l\u00e9ment__ __nom de l'\u00e9l\u00e9ment__ = __valeur de d\u00e9part__; __condition__; __incr\u00e9mentation__) {\n        //code\n    }\n*/\n\nfor (int i = 0; i &lt; 10; i++) {}\n\nfor (int i = 0; i &lt; list.Length; i += 2) {}\n```\n</code></pre>"},{"location":"Manuel/Java/#52-while","title":"5.2 While :","text":"<pre><code>```java\n/*\n    while (__condition__) {\n        //code\n    }\n*/\n\nwhile (true) {}\n\nwhile (didier.isAlive()) {}\n```\n</code></pre> <ul> <li>doWhile : pareil que while mais le code est execut\u00e9 au moins une fois</li> </ul>"},{"location":"Manuel/Java/#53-foreach","title":"5.3 Foreach :","text":"<p>*note : foreach est une boucle qui ne peut \u00eatre utilis\u00e9e que sur des listes</p> <pre><code>```java\n/*\n    for (__type de l'\u00e9l\u00e9ment__ __nom de l'\u00e9l\u00e9ment__ : __nom de la liste__) {\n        //code\n    }\n*/\n\nfor (String nom : listeDeNomsDeDragons) {}\n```\n</code></pre>"},{"location":"Manuel/Java/#6-structures-de-donnees","title":"6) STRUCTURES DE DONNEES","text":""},{"location":"Manuel/Java/#61-tableau","title":"6.1 TABLEAU","text":"<p>un tableau est une structure de donn\u00e9es qui permet de stocker des \u00e9l\u00e9ments de m\u00eame type. Tu peux acc\u00e9der \u00e0 un \u00e9l\u00e9ment du tableau en utilisant son indice (commence \u00e0 0). La taille du tableau est fixe.</p>"},{"location":"Manuel/Java/#creation-dun-tableau","title":"CREATION D'UN TABLEAU","text":"<pre><code>```java\n/*\n    __type de l'\u00e9l\u00e9ment__[] __nom du tableau__ = new __type de l'\u00e9l\u00e9ment__[__taille du tableau__];\n*/\n\nint[] tableau = new int[10];\n\nDragon[] dragons = new Dragon[10];\n\n```\n</code></pre>"},{"location":"Manuel/Java/#assignation-de-valeurs-dans-un-tableau","title":"ASSIGNATION DE VALEURS DANS UN TABLEAU","text":"<pre><code>```java\n/*\n    __type de l'\u00e9l\u00e9ment__[] __nom du tableau__ = {__valeur 1__, __valeur 2__, __valeur 3__};\n    OU\n    __nom du tableau__[__indice de l'\u00e9l\u00e9ment__] = __valeur__;\n*/\n\nint[] tableau = {1, 2, 3};\n\ntableau[0] = 1;\n\ntableau[tableau.Length - 1] = 3; // pour la derni\u00e8re case\n```\n</code></pre>"},{"location":"Manuel/Java/#tableau-a-2-dimensions","title":"Tableau \u00e0 2 dimensions","text":"<pre><code>    /*\n        __type de l'\u00e9l\u00e9ment__[][] __nom du tableau__ = new __type de l'\u00e9l\u00e9ment__[__taille du tableau__][__taille du tableau__];\n    */\n\n    int[][] tableau = new int[10][10];\n</code></pre> <pre><code>Les donn\u00e9es sont stock\u00e9es dans le tableau comme \u00e7a : [num\u00e9ro de la ligne][num\u00e9ro de la colonne]\n</code></pre> <pre><code>    int[][] tableau = new int[3][3];\n    tableau[1][0] = 1;\n    tableau[1][1] = 2;\n    tableau[1][2] = 3;\n</code></pre> <p>tableau :</p> 0 0 0 1 2 3 0 0 0"},{"location":"Manuel/Java/#62-liste","title":"6.2 LISTE","text":"<p>une liste est une structure de donn\u00e9es qui permet de stocker des \u00e9l\u00e9ments de m\u00eame type (comme un tableau) mais qui peut \u00eatre redimensionn\u00e9 dynamiquement. Donc tu peux ajouter des \u00e9l\u00e9ments \u00e0 la liste sans avoir \u00e0 red\u00e9finir la taille du tableau.</p>"},{"location":"Manuel/Java/#creation-dune-liste","title":"CREATION D'UNE LISTE","text":"<p>*note : ArrayList est UN type de liste, il y en a d'autres (mais celui l\u00e0 il est bien)</p> <pre><code>```java\n/*\n    ArrayList&lt;__type de l'\u00e9l\u00e9ment__&gt; __nom de la liste__ = new ArrayList&lt;__type de l'\u00e9l\u00e9ment__&gt;();\n*/\n\nArrayList&lt;String&gt; listeDeNomsDeDragons = new ArrayList&lt;String&gt;();\n```\n</code></pre>"},{"location":"Manuel/Java/#modidier-une-liste","title":"MODIDIER UNE LISTE","text":"<p>Je te met toutes les fonctions pratiques de la liste (y'en a d'autres mais celles l\u00e0 sont les plus utilis\u00e9es) PAS LENGTH pour la taille, c'est SIZE</p> <pre><code>```java\n/*\n    AJOUTER\n    __nom de la liste__.add(__valeur__);\n\n    SUPPRIMER\n    __nom de la liste__.remove(__indice de l'\u00e9l\u00e9ment__);\n\n    TROUVER UN ELEMENT PAR SON INDICE\n    __nom de la liste__.get(__indice de l'\u00e9l\u00e9ment__);\n\n    MODIFIER UN ELEMENT PAR SON INDICE\n    __nom de la liste__.set(__indice de l'\u00e9l\u00e9ment__, __nouvelle valeur__);\n\n    TAILLE DE LA LISTE\n    __nom de la liste__.size();\n\n    VIDER TOUT\n    __nom de la liste__.clear();\n\n    BOOLEEN, SI L'ELEMENT EST DANS LA LISTE\n    __nom de la liste__.contains(__valeur__);\n\n    RETOURNE L'INDICE DE L'ELEMENT\n    __nom de la liste__.indexOf(__valeur__);\n\n    BOOLEEN, SI LA LISTE EST VIDE\n    __nom de la liste__.isEmpty();\n*/\n\nlisteDeNomsDeDragons.add(\"Didier\");\n\nlisteDeNomsDeDragons.remove(0);\n\nlisteDeNomsDeDragons.get(0);\n\nlisteDeNomsDeDragons.set(0, \"Didier\");\n\nlisteDeNomsDeDragons.size();\n\nlisteDeNomsDeDragons.clear();\n\nboolean didierEstLa = listeDeNomsDeDragons.contains(\"Didier\");\n\nint indiceDeDidier = listeDeNomsDeDragons.indexOf(\"Didier\");\n\nboolean listeVide = listeDeNomsDeDragons.isEmpty();\n```\n</code></pre>"},{"location":"Manuel/Java/#63-map","title":"6.3 MAP","text":"<p>une map est une structure de donn\u00e9es qui permet de stocker des \u00e9l\u00e9ments de m\u00eame type mais qui est organis\u00e9 en cl\u00e9/valeur. Tu peux acc\u00e9der \u00e0 un \u00e9l\u00e9ment de la map en utilisant sa cl\u00e9.</p>"},{"location":"Manuel/Java/#creation-dune-map","title":"CREATION D'UNE MAP","text":"<pre><code>```java\n/*\n    HashMap&lt;__type de la cl\u00e9__, __type de la valeur__&gt; __nom de la map__ = new HashMap&lt;__type de la cl\u00e9__, __type de la valeur__&gt;();\n*/\n\nHashMap&lt;String, Integer&gt; mapDeNomsDeDragonsEtDePoids = new HashMap&lt;String, Integer&gt;();\n```\n</code></pre>"},{"location":"Manuel/Java/#modidier-une-map","title":"MODIDIER UNE MAP","text":"<pre><code>```java\n/*\n    AJOUTER\n    __nom de la map__.put(__cl\u00e9__, __valeur__);\n\n    SUPPRIMER\n    __nom de la map__.remove(__cl\u00e9__);\n\n    TROUVER UNE VALEUR PAR SA CLE\n    __nom de la map__.get(__cl\u00e9__);\n\n    TAILLE DE LA MAP\n    __nom de la map__.size();\n\n    VIDER TOUT\n    __nom de la map__.clear();\n\n    BOOLEEN, SI LA CLE EST DANS LA MAP\n    __nom de la map__.containsKey(__cl\u00e9__);\n\n    BOOLEEN, SI LA VALEUR EST DANS LA MAP\n    __nom de la map__.containsValue(__valeur__);\n\n    BOOLEEN, SI LA MAP EST VIDE\n    __nom de la map__.isEmpty();\n*/\n\nmapDeNomsDeDragonsEtDePoids.put(\"Didier\", 100);\n\nmapDeNomsDeDragonsEtDePoids.remove(\"Didier\");\n\nmapDeNomsDeDragonsEtDePoids.get(\"Didier\");\n\nmapDeNomsDeDragonsEtDePoids.size();\n\nmapDeNomsDeDragonsEtDePoids.clear();\n\nboolean didierEstLa = mapDeNomsDeDragonsEtDePoids.containsKey(\"Didier\");\n\nboolean poidsDeDidierEstLa = mapDeNomsDeDragonsEtDePoids.containsValue(100);\n\nboolean mapVide = mapDeNomsDeDragonsEtDePoids.isEmpty();\n```\n</code></pre>"},{"location":"Manuel/Java/#64-set","title":"6.4 SET","text":"<p>un set est une structure de donn\u00e9es qui permet de stocker des \u00e9l\u00e9ments de m\u00eame type mais qui ne peut pas contenir de doublons. Tu peux acc\u00e9der \u00e0 un \u00e9l\u00e9ment de la map en utilisant son indice. *c'est pas tr\u00e8s utile mais si un jour on te demande d'en faire...</p> <p>*ca marche comme une liste mais sans doublons</p>"},{"location":"Manuel/Java/#creation-dun-set","title":"CREATION D'UN SET","text":"<pre><code>```java\n/*\n    HashSet&lt;__type de l'\u00e9l\u00e9ment__&gt; __nom du set__ = new HashSet&lt;__type de l'\u00e9l\u00e9ment__&gt;();\n*/\n\nHashSet&lt;String&gt; setDeNomsDeDragons = new HashSet&lt;String&gt;();\n```\n</code></pre>"},{"location":"Manuel/Java/#modidier-un-set","title":"MODIDIER UN SET","text":"<pre><code>```java\n/*\n    AJOUTER\n    __nom du set__.add(__valeur__);\n\n    SUPPRIMER\n    __nom du set__.remove(__valeur__);\n\n    TROUVER UN ELEMENT PAR SON INDICE\n    __nom du set__.get(__indice de l'\u00e9l\u00e9ment__);\n\n    TAILLE DU SET\n    __nom du set__.size();\n\n    VIDER TOUT\n    __nom du set__.clear();\n\n    BOOLEEN, SI L'ELEMENT EST DANS LE SET\n    __nom du set__.contains(__valeur__);\n\n    BOOLEEN, SI LE SET EST VIDE\n    __nom du set__.isEmpty();\n*/\n\nsetDeNomsDeDragons.add(\"Didier\");\n\nsetDeNomsDeDragons.remove(\"Didier\");\n\nsetDeNomsDeDragons.get(0);\n\nsetDeNomsDeDragons.size();\n\nsetDeNomsDeDragons.clear();\n\nboolean didierEstLa = setDeNomsDeDragons.contains(\"Didier\");\n\nboolean setVide = setDeNomsDeDragons.isEmpty();\n```\n</code></pre>"},{"location":"Manuel/Java/#65-interface","title":"6.5 INTERFACE","text":"<p>une interface est une classe qui ne peut pas \u00eatre instanci\u00e9e (donc tu ne peux pas faire new nom de la classe). Elle sert \u00e0 d\u00e9finir des m\u00e9thodes qui seront impl\u00e9ment\u00e9es dans les classes filles. Comme par exemple une interface \"animal\", elle existe pas toute seule mais ca regroupe tout ce qui est commun \u00e0 tous les animaux (comme le fait qu'ils ont tous une couleur).</p>"},{"location":"Manuel/Java/#creation-dune-interface","title":"CREATION D'UNE INTERFACE","text":"<pre><code>```java\n/*\n    interface __nom de l'interface__ {\n        __attributs__\n        __constructeur__\n        __m\u00e9thodes__\n    }\n*/\n\ninterface Animal {\n    String couleur;\n    int positionX;\n    int positionY;\n\n    public Animal(String couleur, int positionX, int positionY) {\n        this.couleur = couleur;\n        this.positionX = positionX;\n        this.positionY = positionY;\n    }\n\n    public void seDeplacer(int positionX, int positionY);\n}\n```\n</code></pre>"},{"location":"Manuel/Java/#implementation-dune-interface","title":"IMPLEMENTATION D'UNE INTERFACE","text":"<pre><code>```java\n\nclass Dragon implements Animal {\n    String couleur;\n    int positionX;\n    int positionY;\n\n    public Dragon(String couleur, int positionX, int positionY) {\n        this.couleur = couleur;\n        this.positionX = positionX;\n        this.positionY = positionY;\n    }\n\n    public void seDeplacer(int positionX, int positionY) {\n        this.positionX = positionX;\n        this.positionY = positionY;\n    }\n}\n```\n\n*ca marche comme une classe abstraite mais tu peux pas instancier une interface\nLa diff\u00e9rence c'est que \n- Interface = tu d\u00e9finis les m\u00e9thodes mais tu ne les impl\u00e9mentes pas (aucun code, juste une liste de m\u00e9thodes) communes\n- Classe abstraite = tu d\u00e9finis les m\u00e9thodes et tu les impl\u00e9mentes (avec du code) communes (t'\u00e9cris le code que tu veux dedans ou pas)\n</code></pre>"},{"location":"Manuel/Java/#7-heritage","title":"7) HERITAGE","text":""},{"location":"Manuel/Java/#71-classes-abstraites","title":"7.1 CLASSES ABSTRAITES","text":"<p>une classe abstraite est une classe qui ne peut pas \u00eatre instanci\u00e9e (donc tu ne peux pas faire new nom de la classe). Elle sert \u00e0 d\u00e9finir des m\u00e9thodes qui seront impl\u00e9ment\u00e9es dans les classes filles. Comme par exemple une classe \"piece d'\u00e9chec\", elle existe pas toute seule mais ca regroupe tout ce qui est commun \u00e0 toutes les pi\u00e8ces d'\u00e9chec (comme le fait qu'elles ont toutes une couleur).</p>"},{"location":"Manuel/Java/#creation-dune-classe-abstraite","title":"CREATION D'UNE CLASSE ABSTRAITE","text":"<pre><code>```java\n/*\n    abstract class __nom de la classe__ {\n        __attributs__\n        __constructeur__\n        __m\u00e9thodes__\n    }\n*/\n\nabstract class PieceEchec {\n    String couleur;\n    int positionX;\n    int positionY;\n\n    public PieceEchec(String couleur, int positionX, int positionY) {\n        this.couleur = couleur;\n        this.positionX = positionX;\n        this.positionY = positionY;\n    }\n\n    // m\u00e9thode abstraite : elle n'a pas de corps, elle est juste d\u00e9clar\u00e9e pour \u00eatre impl\u00e9ment\u00e9e dans les classes filles et que tu puisse l'appeler sur n'importe quelle pi\u00e8ce (qui en h\u00e9rite)\n    public abstract void deplacer(int positionX, int positionY);\n}\n```\n</code></pre>"},{"location":"Manuel/Java/#utilisation-dune-classe-abstraite","title":"UTILISATION D'UNE CLASSE ABSTRAITE","text":"<pre><code>```java\n/*\n    __nom de la classe__ __nom de l'objet__ = new __nom de la classe__();\n*/\n\nPieceEchec piece = new PieceEchec();\n```\n</code></pre>"},{"location":"Manuel/Java/#72-classes-filles","title":"7.2 CLASSES FILLES","text":"<p>une classe fille est une classe qui h\u00e9rite d'une classe m\u00e8re. Elle peut donc utiliser toutes les m\u00e9thodes et attributs de la classe m\u00e8re. Elle peut aussi red\u00e9finir des m\u00e9thodes de la classe m\u00e8re (comme par exemple la m\u00e9thode toString() qui est red\u00e9finie dans la classe String).</p>"},{"location":"Manuel/Java/#creation-dune-classe-fille","title":"CREATION D'UNE CLASSE FILLE","text":"<pre><code>```java\n/*\n    class __nom de la classe__ extends __nom de la classe m\u00e8re__ {\n        __attributs__\n        __constructeur__\n        __m\u00e9thodes__\n    }\n*/\n\nclass Cavalier extends PieceEchec {\n    public Cavalier(String couleur, int positionX, int positionY) {\n        super(couleur, positionX, positionY);\n    }\n\n    // red\u00e9finition de la m\u00e9thode deplacer de la classe m\u00e8re\n    public void deplacer(int positionX, int positionY) {\n        this.positionX = positionX;\n        this.positionY = positionY;\n    }\n}\n```\n</code></pre>"},{"location":"Manuel/Java/#utilisation-dune-classe-fille","title":"UTILISATION D'UNE CLASSE FILLE","text":"<pre><code>```java\n/*\n    __nom de la classe__ __nom de l'objet__ = new __nom de la classe__();\n*/\n\nCavalier cavalier = new Cavalier();\n```\n</code></pre>"},{"location":"Manuel/Java/#8-exceptions","title":"8) EXCEPTIONS","text":""},{"location":"Manuel/Java/#81-exceptions","title":"8.1 EXCEPTIONS","text":"<p>une exception est une erreur qui peut arriver pendant l'ex\u00e9cution du programme. Par exemple, tu veux diviser un nombre par 0, tu vas avoir une exception. Il existe plusieurs types d'exceptions, tu peux les trouver ici.</p>"},{"location":"Manuel/Java/#creation-dune-exception","title":"CREATION D'UNE EXCEPTION","text":"<pre><code>```java\n/*\n    try {\n        __code qui peut lever une exception__\n    } catch (__type de l'exception__) {\n        __code \u00e0 ex\u00e9cuter si une exception est lev\u00e9e__\n    }\n*/\n\n// le try catch permet de pas faire planter tout le programme en enfermant l'erreur dans un bloc try/catch\n\ntry {\n    int resultat = 1 / 0;\n} catch (ArithmeticException e) {\n    System.out.println(\"Division par 0\");\n}\n```\n</code></pre>"},{"location":"Manuel/Java/#9-enumerations","title":"9) ENUMERATIONS","text":""},{"location":"Manuel/Java/#91-enum","title":"9.1 ENUM","text":"<p>une \u00e9num\u00e9ration est une liste de valeurs possibles. Par exemple, tu peux cr\u00e9er une \u00e9num\u00e9ration pour les couleurs, et tu pourras utiliser les couleurs \"rouge\", \"bleu\", \"vert\" dans ton programme. (c'est pas tr\u00e8s tr\u00e8s utile, c'est juste pour faire joli)</p>"},{"location":"Manuel/Java/#creation-dune-enumeration","title":"CREATION D'UNE ENUMERATION","text":"<pre><code>```java\n/*\n    enum __nom de l'\u00e9num\u00e9ration__ {\n        __valeur 1__,\n        __valeur 2__,\n        __valeur 3__,\n        ...\n    }\n*/\n\nenum Couleur {\n    ROUGE,\n    BLEU,\n    VERT\n}\n```\n</code></pre>"},{"location":"Manuel/Java/#utilisation-dune-enumeration","title":"UTILISATION D'UNE ENUMERATION","text":"<pre><code>```java\n/*\n    __nom de l'\u00e9num\u00e9ration__ __nom de l'objet__ = __nom de l'\u00e9num\u00e9ration__.__valeur__;\n*/\n\nCouleur couleur = Couleur.ROUGE;\n```\n</code></pre>"},{"location":"Manuel/Java/#10-fichiers","title":"10) FICHIERS","text":""},{"location":"Manuel/Java/#101-fichiers","title":"10.1 FICHIERS","text":""},{"location":"Manuel/Java/#creation-dun-fichier","title":"CREATION D'UN FICHIER","text":"<pre><code>```java\n/*\n    __nom de l'objet__ = new File(__chemin du fichier__);\n*/\n\nFile fichier = new File(\"C:\\\\Users\\\\Utilisateur\\\\Desktop\\\\fichier.txt\");\n```\n</code></pre>"},{"location":"Manuel/Java/#lecture-dun-fichier","title":"LECTURE D'UN FICHIER","text":"<p>Scanner est une classe qui permet de lire un fichier, il y a d'autres classes qui permettent de lire des fichiers, comme BufferedReader, FileReader, etc...</p> <pre><code>```java\n/*\n    import java.util.Scanner; &lt;- il faut importer la classe Scanner\n\n    __nom de l'objet__ = new Scanner(__nom du fichier__);\n    __lecture du fichier__\n*/\n\n//dans la partie import\nimport java.util.Scanner;\n\nScanner scanner = new Scanner(fichier);\nString contenu = scanner.nextLine();\n```\n</code></pre>"},{"location":"Manuel/Java/#ecriture-dans-un-fichier","title":"ECRITURE DANS UN FICHIER","text":"<p>je te donne une seule m\u00e9thode, mais il y en a d'autres</p> <pre><code>```java\n/*\n    import java.io.FileWriter; &lt;- il faut importer la classe FileWriter\n\n    __nom de l'objet__ = new FileWriter(__nom du fichier__);\n    __ecriture dans le fichier__\n*/\n\n//dans la partie import\nimport java.io.FileWriter;\n\nFileWriter writer = new FileWriter(fichier);\nwriter.write(\"Bonjour\");\n```\n</code></pre>"},{"location":"Manuel/Java/#11-threads","title":"11) THREADS","text":""},{"location":"Manuel/Java/#111-threads","title":"11.1 THREADS","text":"<p>un thread est un processus qui s'ex\u00e9cute en parall\u00e8le d'un autre processus. Par exemple, tu peux avoir un thread qui s'occupe de l'affichage, et un autre qui s'occupe de la logique du programme. Ca permet de faire des choses en paral\u00e8lle et donc de d\u00e9couper le programme en plusieurs parties sur les diff\u00e9rents coeurs de ton processeur.</p>"},{"location":"Manuel/Java/#creation-dun-thread","title":"CREATION D'UN THREAD","text":"<pre><code>```java\n/*\n    __nom de la classe__ extends Thread {\n        __attributs__\n        __constructeur__\n        __m\u00e9thodes__\n    }\n\n    __nom de l'objet__ = new __nom de la classe__();\n    __nom de l'objet__.start();\n*/\n\nclass MonThread extends Thread {\n    public void run() {\n        System.out.println(\"Bonjour\");\n    }\n}\n\nMonThread thread = new MonThread();\nthread.start();\n```\n</code></pre>"},{"location":"Manuel/Java/#special-conception","title":"SPECIAL) CONCEPTION","text":""},{"location":"Manuel/Java/#1-conception","title":"1) CONCEPTION","text":"<p>Pour savoir si une classe en impl\u00e9mente (interface) une autre, en h\u00e9rite une autre, etc...</p>"},{"location":"Manuel/Java/#heritage","title":"HERITAGE :","text":"<p>Etre de la classe parent, mais etre un truc plus pr\u00e9cis Animal &lt;|--- Chat &lt;|--- ChatGriffu</p>"},{"location":"Manuel/Java/#interface","title":"INTERFACE :","text":"<p>Etre de la classe parent, pour avoir des m\u00e9thodes obligatoires communes Animal &lt;|--- Chat Animal &lt;|--- Renard</p> <p>Les deux doivent avoir les m\u00e9thodes communes \u00e0 l'interface</p>"},{"location":"Manuel/Java/#composition","title":"COMPOSITION :","text":"<p>Etre de la classe parent, mais avoir un truc en plus *C'est compliqu\u00e9, t'occupe pas de \u00e7a (je note juste que ca existe) Animal &lt;|--- Chat &lt;|--- ChatGriffu Animal &lt;|--- Renard</p>"},{"location":"Manuel/Java/#aggregation","title":"AGGREGATION :","text":"<p>Etre de la classe parent, mais avoir un truc en plus *C'est compliqu\u00e9, t'occupe pas de \u00e7a (je note juste que ca existe) Animal &lt;|--- Chat &lt;|--- ChatGriffu Animal &lt;|--- Renard</p>"},{"location":"Manuel/Java/#points-virgules","title":"POINTS VIRGULES :","text":"<p>\u00e0 la fin d'une instruction, pas apr\u00e8s }</p>"},{"location":"Manuel/Java/#commentaires","title":"COMMENTAIRES :","text":"<pre><code>// pour un commentaire sur une ligne\n/* pour un commentaire sur plusieurs lignes */\n</code></pre>"},{"location":"Manuel/Java/#git","title":"GIT :","text":"<p>Git permet de g\u00e9rer les versions de ton code, et de travailler en \u00e9quipe sur un m\u00eame projet. En envoyant des modifications sur le serveur, tu peux r\u00e9cup\u00e9rer les modifications des autres personnes, et tu peux revenir \u00e0 une version pr\u00e9c\u00e9dente du code.</p>"},{"location":"Manuel/Java/#creation-dun-repertoire-git","title":"CREATION D'UN REPERTOIRE GIT","text":"<p>*(en local)     <code>bash     git init</code></p>"},{"location":"Manuel/Java/#connetion-au-serveur","title":"CONNETION AU SERVEUR","text":"<p>Pour connecter un d\u00e9pot local, au d\u00e9pot sur le serveur</p> <pre><code>```bash\ngit remote add origin __lien du serveur__\n```\n</code></pre>"},{"location":"Manuel/Java/#ajouter-des-fichiers","title":"AJOUTER DES FICHIERS","text":"<pre><code>```bash\ngit add __nom du fichier__\n```\n\n*marche avec le REGEX donc tu peux faire :*\n```bash\ngit add *\n```\nou alors\n```bash\ngit add *.java\n```\n\n*pour ajouter tous les fichiers*\n</code></pre>"},{"location":"Manuel/Java/#envoyer-des-fichiers","title":"ENVOYER DES FICHIERS","text":"<pre><code>```bash\ngit commit -m \"__message__\"\n```\n</code></pre>"},{"location":"Manuel/Java/#recuperer-les-modifications","title":"RECUPERER LES MODIFICATIONS","text":"<pre><code>```bash\ngit pull\n```\n</code></pre>"},{"location":"Manuel/Java/#envoyer-les-modifications","title":"ENVOYER LES MODIFICATIONS","text":"<pre><code>```bash\ngit push\n```\n</code></pre>"},{"location":"Manuel/Java/#creer-une-branche","title":"CREER UNE BRANCHE","text":"<pre><code>```bash\ngit branch __nom de la branche__\n```\n</code></pre>"},{"location":"Manuel/Java/#problemes-de-merge","title":"Probl\u00e8mes de merge","text":"<p>Si tu as des conflits de merge, c'est que tu as modifi\u00e9 le m\u00eame fichier que quelqu'un d'autre, et que tu as des modifications diff\u00e9rentes. Il faut que tu r\u00e9solves les conflits, et que tu commit \u00e0 nouveau.</p>"},{"location":"Manuel/Java/#resolution-des-conflits","title":"RESOLUTION DES CONFLITS","text":"<pre><code>```bash\ngit status\ngit add __nom du fichier__\ngit commit -m \"__message__\"\n```\n</code></pre>"},{"location":"Manuel/Java/#problemes-de-push","title":"Probl\u00e8mes de push","text":"<p>Si tu as des probl\u00e8mes de push, c'est que tu as modifi\u00e9 le m\u00eame fichier que quelqu'un d'autre, et que tu as des modifications diff\u00e9rentes. Il faut que tu r\u00e9solves les conflits, et que tu commit \u00e0 nouveau.</p>"},{"location":"Manuel/Java/#resolution-des-conflits_1","title":"RESOLUTION DES CONFLITS","text":"<pre><code>```bash\ngit status\ngit add __nom du fichier__\ngit commit -m \"__message__\"\n```\n</code></pre>"},{"location":"Manuel/Java/#uml","title":"UML","text":"<ul> <li>la partie sur l'UML viendra apr\u00e8s... (en DLC)</li> </ul>"},{"location":"Manuel/Markdown/","title":"Markdown","text":"<p>Le markdown est un langage de balisage l\u00e9ger qui permet de formater du texte. Il est utilis\u00e9 par de nombreux sites web pour \u00e9crire des articles, des commentaires, des messages, etc.</p>"},{"location":"Manuel/Markdown/#sommaire","title":"Sommaire","text":"<ul> <li>Markdown</li> <li>Sommaire</li> <li>Syntaxe<ul> <li>Titres</li> <li>Listes</li> <li>Gras</li> <li>Italique</li> <li>Lien</li> <li>Images</li> <li>Code</li> <li>Bloc de code</li> <li>Citation</li> <li>Tableau</li> <li>Ligne horizontale</li> <li>Saut de ligne</li> <li>Exemples</li> </ul> </li> <li>Web</li> <li>Lien vers d'autres pages</li> <li>G\u00e9n\u00e9rer un Sommaire</li> </ul>"},{"location":"Manuel/Markdown/#syntaxe","title":"Syntaxe","text":""},{"location":"Manuel/Markdown/#titres","title":"Titres","text":"<p>Les titres sont d\u00e9finis par des caract\u00e8res <code>#</code> en d\u00e9but de ligne. Plus il y a de caract\u00e8res <code>#</code>, plus le titre est petit.</p> <pre><code># Titre 1\n\n## Titre 2\n\n### Titre 3\n</code></pre>"},{"location":"Manuel/Markdown/#listes","title":"Listes","text":"<p>Les listes sont d\u00e9finies par des caract\u00e8res <code>-</code> ou <code>*</code> en d\u00e9but de ligne.</p> <pre><code>- Liste 1\n- Liste 2\n- Liste 3\n</code></pre>"},{"location":"Manuel/Markdown/#gras","title":"Gras","text":"<p>Le gras est d\u00e9fini par des caract\u00e8res <code>**</code> en d\u00e9but et fin de mot.</p> <pre><code>\n**gras**\n</code></pre>"},{"location":"Manuel/Markdown/#italique","title":"Italique","text":"<p>L'italique est d\u00e9fini par des caract\u00e8res <code>*</code> en d\u00e9but et fin de mot.</p> <pre><code>\n*italique*\n</code></pre>"},{"location":"Manuel/Markdown/#lien","title":"Lien","text":"<p>Les liens sont d\u00e9finis par des caract\u00e8res <code>[]</code> en d\u00e9but et fin de mot, et des caract\u00e8res <code>()</code> en d\u00e9but et fin de lien.</p> <pre><code>\n[lien](https://www.google.com)\n</code></pre>"},{"location":"Manuel/Markdown/#images","title":"Images","text":"<p>Les images sont d\u00e9finies par des caract\u00e8res <code>![]()</code> en d\u00e9but et fin de mot, et des caract\u00e8res <code>()</code> en d\u00e9but et fin de lien.</p> <pre><code>\n![image](https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png)\n</code></pre>"},{"location":"Manuel/Markdown/#code","title":"Code","text":"<p>Le code est d\u00e9fini par des caract\u00e8res <code>`</code> en d\u00e9but et fin de mot.</p> <pre><code>\n`code`\n</code></pre>"},{"location":"Manuel/Markdown/#bloc-de-code","title":"Bloc de code","text":"<p>Le bloc de code est d\u00e9fini par des caract\u00e8res ``` en d\u00e9but et fin de mot.</p>"},{"location":"Manuel/Markdown/#citation","title":"Citation","text":"<p>La citation est d\u00e9finie par des caract\u00e8res <code>&gt;</code> en d\u00e9but de ligne.</p> <pre><code>\n&gt; citation\n</code></pre>"},{"location":"Manuel/Markdown/#tableau","title":"Tableau","text":"<p>Les tableaux sont d\u00e9finis par des caract\u00e8res <code>|</code> en d\u00e9but et fin de ligne, et des caract\u00e8res <code>-</code> en d\u00e9but de ligne.</p> <pre><code>\n| Colonne 1 | Colonne 2 |\n| --------- | --------- |\n| Ligne 1   | Ligne 2   |\n</code></pre> <ul> <li> <p>On peut d\u00e9finir la largeur des colonnes en ajoutant des caract\u00e8res <code>-</code> apr\u00e8s le caract\u00e8re <code>|</code> de d\u00e9but de ligne.</p> </li> <li> <p>On peut d\u00e9finir l'alignement des colonnes en ajoutant des caract\u00e8res <code>:</code> apr\u00e8s le caract\u00e8re <code>|</code> de d\u00e9but de ligne.</p> <ul> <li>Exemple :  <code>| Colonne 1 | Colonne 2 | | :-------: | --------: | | Ligne 1   | Ligne 2   |</code></li> <li><code>:</code> \u00e0 gauche : align\u00e9 \u00e0 gauche</li> <li><code>:</code> de chaque cot\u00e9 : centr\u00e9</li> <li><code>:</code> \u00e0 droite : align\u00e9 \u00e0 droite</li> </ul> </li> </ul>"},{"location":"Manuel/Markdown/#ligne-horizontale","title":"Ligne horizontale","text":"<p>La ligne horizontale est d\u00e9finie par des caract\u00e8res <code>---</code> en d\u00e9but de ligne.</p> <pre><code>\n---\n\n</code></pre>"},{"location":"Manuel/Markdown/#saut-de-ligne","title":"Saut de ligne","text":"<p>Le saut de ligne est d\u00e9fini par des caract\u00e8res  en fin de ligne.</p> <pre><code>\nLigne 1\n\nLigne 2\n</code></pre>"},{"location":"Manuel/Markdown/#exemples","title":"Exemples","text":"1 2 3 4 5 6 7 8 9 10 1 1 2 3 4 5 6 7 8 9 10 2 2 4 6 8 10 12 14 16 18 20 3 3 6 9 12 15 18 21 24 27 30"},{"location":"Manuel/Markdown/#web","title":"Web","text":"<pre><code>On peut ouvrir un fichier markdown dans un navigateur web pour le lire.\n</code></pre>"},{"location":"Manuel/Markdown/#lien-vers-dautres-pages","title":"Lien vers d'autres pages","text":"<pre><code>Pour mettre un lien vers une autre page, il suffit de mettre le nom du fichier markdown entre crochets, et le lien entre parenth\u00e8ses.\n\nExemple : [Markdown](Markdown.md)\n\nSi le fichier markdown est dans un dossier, il faut mettre le nom du dossier entre crochets, et le nom du fichier markdown entre parenth\u00e8ses.\n\nExemple : [Markdown](Dossier/Markdown.md)\n\nOn peut mettre un lien vers une partie particuli\u00e8re d'un fichier markdown en ajoutant un `#` suivi du nom de la partie.\n\nExemple : [Markdown](Dossier/Markdown.md#markdown)\n</code></pre>"},{"location":"Manuel/Markdown/#generer-un-sommaire","title":"G\u00e9n\u00e9rer un Sommaire","text":"<pre><code>Pour g\u00e9n\u00e9rer le sommaire, il suffit de mettre un lien vers une partie particuli\u00e8re d'un fichier markdown en ajoutant un `#` suivi du nom de la partie.\n\nExemple : [Sommaire](#sommaire)\n\nPour g\u00e9n\u00e9rer le sommaire automatiquement, il faut ajouter le code suivant en d\u00e9but de fichier markdown.\n</code></pre>"},{"location":"Manuel/UML/","title":"UML","text":"<p>L'UML est un langage de mod\u00e9lisation graphique qui permet de repr\u00e9senter des objets, leurs relations et leurs interactions.</p> <p>On va voir ici principalement les diagrammes de classes et de s\u00e9quences.</p>"},{"location":"Manuel/UML/#diagramme-de-classes","title":"Diagramme de classes","text":"<p>Un diagramme de classes est un diagramme UML qui permet de repr\u00e9senter les classes d'un syst\u00e8me.</p>"},{"location":"Manuel/UML/#classes","title":"Classes","text":"<p>Les classes sont repr\u00e9sent\u00e9es par des rectangles. Le nom de la classe est \u00e9crit en haut du rectangle.</p> <p>la classe est d\u00e9coup\u00e9e en 3 parties :</p> <ul> <li>nom de la classe</li> <li>attributs</li> <li>m\u00e9thodes</li> </ul> <p>note : si une partie est vide, on ne la repr\u00e9sente pas</p> <p>avant un attribut ou une m\u00e9thode, on peut mettre un caract\u00e8re qui indique son visibilit\u00e9 :</p> <p><code>+</code> : public</p> <p><code>-</code> : private</p> <p><code>#</code> : protected</p> <p><code>~</code> : package</p> <p>On repr\u00e9sente les attributs selon ce format :</p> <p><code>[visibilit\u00e9] [nom] : [type]</code></p> <p>On repr\u00e9sente les m\u00e9thodes selon ce format :</p> <p><code>[visibilit\u00e9] [nom]([param\u00e8tres]) : [type de retour]</code></p> <p>Exemple de diagramme de classe:</p> <pre><code>@startuml classDiagramExemple\nskinparam classAttributeIconSize 0\n\nabstract class Dragon {\n    - int power\n    # int getPower()\n    # void setPower(int power)\n}\n\nclass Dragonite {\n    - int pokemonNumber\n    + int getPokemonNumber()\n    + Dragonite(int power, int pokemonNumber)\n}\n\nDragon &lt;|-- Dragonite\n\nnote left of Dragonite\n    This is a note\n    on two lines\nend note\n\n@enduml\n</code></pre>"},{"location":"Manuel/info/","title":"Info","text":""},{"location":"Manuel/info/#models","title":"models","text":"<ul> <li>Humains<ul> <li>0 : Lancier</li> <li>2 : Worker</li> <li>4 : Archer</li> <li>6 : Griffon</li> <li>8 : Chevalier</li> <li>10 : Paladin</li> <li>12 : Mage</li> <li>14 : Engin de siege</li> </ul> </li> <li>Orcs<ul> <li>16 : Grunt</li> <li>18 : Peon</li> <li>20 : Warlock</li> <li>22 : Hog Rider</li> <li>24 : Head Hunter</li> <li>26 : Drake</li> <li>28 : Berserker</li> <li>30 : Engin de siege vol\u00e9</li> </ul> </li> <li>Elfes<ul> <li>32 : Gnome</li> <li>34 : Ranger</li> <li>36 : Dryad</li> <li>38 : Druide</li> <li>40 : Assassin</li> <li>42 : Griffon</li> <li>44 : Golem</li> <li>46 : Treant</li> </ul> </li> <li>Morts<ul> <li>48 : Squelette guerrier</li> <li>50 : Esclave</li> <li>52 : Arbal\u00e9trier squelette</li> <li>54 : Spadassin mort</li> <li>56 : Chevalier de la mort</li> <li>58 : Wyrm</li> <li>60 : Liche mage noir</li> <li>62 : Engin de siege mort</li> </ul> </li> <li>Neutres<ul> <li>64 : Chauve souris</li> <li>66 : Dragon boule</li> <li>68 : Mage noir</li> <li>70 : Golem machine</li> <li>72 : Plante carnivore</li> <li>74 : Orc sauvage</li> <li>76 : Squelette</li> <li>78 : Slime</li> <li>80 : Araign\u00e9e</li> <li>82 : Turtle shell</li> <li>84 : Grosoeil rose</li> <li>86 : Paladin noir</li> <li>88 : Mimic</li> <li>90 : Crab</li> <li>92 : D\u00e9mon volant</li> <li>94 : Lizard</li> <li>96 : Rat assassin</li> <li>98 : Spectre</li> <li>100 : Loup Garou</li> <li>102 : Ver g\u00e9ant</li> </ul> </li> <li>Stuffs<ul> <li>104 : Hache</li> <li>112 : Faux</li> <li>113 : Arc</li> <li>116 : Arbalete</li> <li>119 : Marteau</li> <li>122 : Massue</li> <li>126 : Couteau</li> <li>131 : Carquois</li> <li>132 : Bouclier</li> <li>138 : Lance</li> <li>140 : Baton</li> <li>141 : Ep\u00e9e</li> <li>147 : Lance bois</li> </ul> </li> </ul> <p>Terrain : [Humain] 0 = plain, 1 = villes ; [Elfes] 2 = for\u00eat, 3 = foret magique ; [Orcs] 4 = desert, 5 = aride ; [Mort] 6 = cimeti\u00e8re, 7 = neige</p> Nom Race Rg category id Rid atk vit def effet Lancier Humain 1 Lancier 0 0 1 2 3 / Ouvrier Humain 1 Infanterie 1 2 1 1 1 Jou\u00e9 : donne +1/1 \u00e0 un humain Archer Humain 2 Archer 2 4 3 2 2 Humain jou\u00e9 : gagne +1 atk Cavalier Humain 2 Cavalier 3 8 2 5 3 Attaque : donne +1/1 \u00e0 un humain Chevalier Humain 3 Cavalier 4 9 5 6 3 Attaque : gagne (1/1) pour chaque humain alli\u00e9s Sorcier Humain 3 Magicien 5 12 4 3 2 Magie+1. Humain jou\u00e9 : donne +1 pv aux autres Ing\u00e9nieur Humain 3 Infanterie 6 3 2 3 2 Jou\u00e9 : donne +2/2 \u00e0 vos humains Spadassin Humain 4 Guerrier 7 10 3 3 3 Bouclier Piquier Humain 4 Lancier 8 1 4 3 3 Jou\u00e9 : donne 3 pv \u00e0 vos humains Magicien Humain 5 Magicien 9 13 6 4 4 Magie+1. Start : fait 1 d\u00e9gats aux ennemis Griffon Humain 5 Volant 10 6 3 6 7 Attaque : donne 2/2 \u00e0 un humain Paladin Humain 6 Guerrier 11 11 6 5 5 Bouclier. Attaque : donne +1/1 \u00e0 un humain Machine de si\u00e8 Humain 6 Colosse 12 14 4 2 8 Humain jou\u00e9 : gagne +2/2 Hypogriffe Humain 7 Volant 13 7 8 6 6 Humain jou\u00e9 : Donne +2/2 \u00e0 un humain Char Humain 7 Colosse 14 15 4 2 10 Start : hitRandom(son attaque * 2) Gobelin Orc 1 Infanterie 15 Grunt Orc 1 Guerrier 16 Grunt bleu Orc 2 Guerrier 17 Guerrier Orc Orc 2 Guerrier 18 Tireur orc Orc 3 Archer 19 Chaman Orc 3 Magicien 20 Ing\u00e9nieur Gobelin Orc 4 Infanterie 21 Chasseur de t\u00eates Orc 4 Archer 22 Cavalier Orc Orc 4 Cavalier 23 Sorcier Orc Orc 5 Magicien 24 Berserker Orc 5 Guerrier 25 Drake Orc 5 Volant 26 Monteur de sanglier Orc 6 Cavalier 27 Machine vol\u00e9e Orc 6 Colosse 28 Char vol\u00e9 Orc 7 Colosse 29 Dragon Orc 7 Volant 30 Gnome Elfe 1 Infanterie 31 32 1 1 1 Jou\u00e9 : donne magie+1 \u00e0 un elfe Archer Elfe Elfe 1 Archer 32 34 1 2 1 Attaque : hit(1) Assassin Elfe Elfe 2 Lancier 33 40 3 2 2 Ennemi meurt : hit(2) Druide Elfe 2 Magicien 34 38 2 3 2 Magie+1. Jou\u00e9 : +0 pv aux elfes Tireur d'\u00e9lite Elfe 3 Archer 35 Centaure Elfe 3 Cavalier 36 Gnome artisan Elfe 3 Infanterie 37 Aigle Elfe 4 Volant 38 Chasseur de nuit Elfe 4 Lancier 39 Archidruide Elfe 4 Magicien 40 Tr\u00e9ant Elfe 5 Colosse 41 Dryade Elfe 5 Cavalier 42 Golem Elfe 5 Colosse 43 Aigle royal Elfe 6 Volant 44 Ancient Elfe 7 Colosse 45 Golem ancien Elfe 7 Colosse 46 Guerrier Squelette Mort 1 Lancier 47 Goule esclave Mort 1 Infanterie 48 Guerrier goule Mort 2 Guerrier 49 Arbal\u00e9trier Mort 3 Archer 50 Goule ouvri\u00e8re Mort 3 Infanterie 51 Soldat Spectre Mort 3 Lancier 52 Tireur de nuit Mort 4 Archer 53 Liche Mort 4 Magicien 54 Gargouille Mort 4 Volant 55 Chavalier mort Mort 5 Cavalier 56 Canon des cranes Mort 5 Colosse 57 Archiliche Mort 6 Magicien 58 Wyrm Mort 6 Volant 59 Faucheuse Mort 7 Cavalier 60 Artillecrane Mort 7 Colosse 61 Slime Monstre 1 Infanterie 62 1 3 1 Troupe : donne +2/2 aux alli\u00e9s Chauve souris Mob/Mort 1 Volant 63 2 4 1 Start : hit 1 Squelette Monstre, Morts 1 Guerrier 64 1 2 3 Mort : donne +(2) atk Carnivore Monstre, Elfe 2 Colosse 65 2 2 3 Start : hit random atk Mimic Monstre 2 Guerrier 66 1 3 5 Bouclier. Defense : hit 2 ennemi Orc sauvage Monstre, Orc 2 Guerrier 67 2 2 3 Bouclier. Jou\u00e9 : donne +2 pv \u00e0 un guerrier Slime tortue Monstre 2 Lancier 68 1 3 3 Mort : hit 2 tous Lezard Monstre 2 Infanterie 69 4 4 2 Kill : gagne 1 or Loup garou Monstre 2 Infanterie 70 3 3 2 Kill : donne +1/1 \u00e0 un alli\u00e9 Rat assassin Monstre 2 Infanterie 71 2 5 1 Jou\u00e9 : donne 2 or Arachnide Elfe, Monstre 2 Colosse 72 2 2 5 Monstre jou\u00e9 : donne +1 atk aux alli\u00e9s Chauve souris vampire Monstre, Mort 3 Volant 73 5 4 1 Volant jou\u00e9 : vos volants gagnent 1 pv Squelette maudis Monstre, Morts 3 Guerrier 74 3 3 3 Mort : Donne +(2/3) \u00e0 un alli\u00e9 Planto\u00efde Monstre, Elfe 3 Colosse 75 2 2 3 Quand quelqu'un meurt : hit random 2 Observateur Monstre 3 Magicien 76 3 3 3 Jou\u00e9 : ajoute un perso al\u00e9atoire \u00e0 la main Bouldragon Monstre 3 Volant 77 2 3 2 Attack : +1/1 Slime tortue g\u00e9ant Monstre 3 Lancier 78 2 2 3 Mort : invoque slime tortue Slime g\u00e9ant Monstre 3 Infanterie 79 2 3 2 Troupe : donne +5 pv aux alli\u00e9s. Jou\u00e9 : donne +2 pv \u00e0 un alli\u00e9 Golem Monstre 3 Colosse 80 4 1 1 Magicien jou\u00e9 : gagne 2 pv Crabe Monstre 3 Guerrier 81 3 3 3 Quand quelqu'un meurt : gagne (2) pv Spectre Monstre 3 Infanterie 82 4 4 1 Mort : donne atk en atk \u00e0 un alli\u00e9 Ver g\u00e9ant Monstre 3 Colosse 83 3 3 4 Quand quelqu'un meurt : donne +1/1 \u00e0 un alli\u00e9 Mage noir Monstre 4 Magicien 84 2 2 3 Magie + 1. Start : hit 2 ennemis Rat g\u00e9ant Monstre 4 Infanterie 85 1 4 1 Mort : donne +2 atk aux alli\u00e9s Spectre noir Monstre 4 Infanterie 86 4 4 3 Start : gagne magie en atk Loup garou alpha Monstre 4 Infanterie 87 3 4 2 Kill : gagne 2/1 Mimic g\u00e9ant Monstre 4 Guerrier 88 2 1 6 Bouclier. Defense : hit 2 les ennemis Assassin l\u00e9zard Monstre 4 Lancier 89 3 3 3 Jou\u00e9 : donne Bouclier \u00e0 un alli\u00e9 Craboss Monstre 4 Guerrier 90 4 4 4 Bouclier. Start : gagne 2 pv Dragonet Monstre 5 Volant 91 3 4 5 Attack : hiy atk adjacents Ver colosses Monstre 5 Colosse 92 5 3 6 Boost : gagne +1/1 Reine arachnide Elfe, Monstre 5 Colosse 93 3 3 9 Jou\u00e9 monstre : donne +1/2 aux alli\u00e9s D\u00e9mon ail\u00e9 Monstre 5 Volant 94 4 4 6 Quand quelqu'un meurt : gagne +1/1 Golem ancien Monstre 5 Colosse 95 0 1 10 Personnage jou\u00e9 : donne +1 atk aux alli\u00e9s Grosoeil Monstre 5 Magicien 96 5 3 5 Magie + 1. Quand quelqu'un meurt : hit random 3 Chevalier noir Monstre 5 Guerrier 97 5 1 8 Bouclier. Kill : gagne +2/3 Seigneur de l'ombre Monstre 6 Magicien 98 7 3 5 Magie + 2. Start : donne +8/8 \u00e0 un alli\u00e9 Paladin noir Monstre 7 Guerrier 97 8 1 8 Bouclier. Quand quelqu'un meurt : donne (4/4) \u00e0 un alli\u00e9 Archid\u00e9mon Monstre 7 Volant 98 6 5 7 Attack : hit atk tous les ennemis"},{"location":"Manuel/info/#stuffs","title":"Stuffs","text":"<p>Categories : 1 = infanterie, 2 = guerrier, 3 = lancier, 4 = cavalier, 5 = archer, 6 = volant, 7 = magique, 8 = colosse</p> id rid Nom Rang Espece Category Atk Def Vit Mag Effet 101 104 Hache rouill\u00e9e 1 -1 2.Guerrier 3 0 0 0 - 102 105 Hache de fer 2 2 -1 2 2 0 0 - 103 106 Hache de guerre 3 -1 2.Guerrier 4 2 0 0 - 104 107 Hache de berzerker 4 2 2.Guerrier 5 3 0 0 - 105 108 Hache lourde 5 -1 2.Guerrier 5 3 -1 0 - 106 109 Hache longue 2 -1 2.Guerrier 3 1 0 0 - 107 110 Hache ? 6 -1 2.Guerrier 4 6 0 0 - 108 111 Hache ? 6 2 -1 6 4 0 0 ? 109 112 Faux 4 4 -1 4 1 0 0 Kill : gagne 1 atk 110 113 Arc 1 -1 5.Archer 2 1 0 0 - 111 114 Arc long 4 -1 5.Archer 4 1 0 1 - 112 115 Arc de chasse 3 3 -1 3 0 0 1 - 113 116 Arbalete 2 -1 5.Archer 2 3 0 0 - 114 117 Arbalete \u00e0 r\u00e9p\u00e9tition 5 -1 5.Archer 6 3 0 0 - 115 118 Arbalete de chasse 4 3 -1 3 3 0 1 - 119 Marteau 2 -1 8.colosse 1 4 0 0 - 120 Marteau de guerre 3 -1 8.colosse 2 2 0 0 Bouclier 121 Marteau champion 5 -1 8.colosse 2 5 0 0 ? 122 Massue 1 -1 -1 1 2 0 0 - 123 Massue d'armes 124 Massue de guerre 125 Masse colossale 5 8 8.Colosse 3 8 0 0 - 126 Couteau 131 Carquois 132 Bouclier 138 Lance 140 Baton 141 Ep\u00e9e 147 Lance bois"},{"location":"Manuel/info/#tresors","title":"Tresors","text":"id Nom raret\u00e9 Effet Condition 1 Coeur de vie EPIQUE +1 pv / 6 Bouclier de Krag COMMUN +1 def / 8 Coeur de dragon RARE +1/1 / 9 \u00c2me de dragon EPIQUE +2/2 / 10 Coeur de dieu LEGEND +3/3 / 12 Montagnes d'or RARE +20 or ce tour / 13 Coffres enchant\u00e9s RARE or +2 par tours / 14 Coeur de magma EPIQUE Materiaux +1 par tours / 15 Sceptre de Magouz COMMUN random dammage : magie * 3 TOUS 16 Sceptre de Balthazarak LEGEND d\u00e9but du combat : +3/3 \u00e0 un alli\u00e9 / RARE Magie +2 / COMMUN Magie +1 / RARE Level up le chateau / 0 Tranchebrume RARE Quand vous jouez un alli\u00e9 : +1 pv aux alli\u00e9s Infanterie 1 Hache de Maktaghor COMMUN +2 atk Guerrier 2 Lance de Krag COMMUN +1/1 Lancier 3 Lance de joute COMMUN +2 vitesse cavalier 4 Arc de Medvef EPIQUE +1 magie Archer 5 Ailes d'argent RARE +1 vitesse et +3 atk Volant 6 Sceptre de Magus EPIQUE +2/2 Magicien 7 Roche runique RARE Quand un colosse est d\u00e9truit, il gagne +1/1 Colosse 8 Callibur LEGEND D\u00e9but du combat : donne bouclier Infanterie 9 Hache de seigneur de guerre EPIQUE ? Guerrier 10 Lance de seigneur de guerre EPIQUE ? Lancier 11 Arc c\u00e9leste LEGEND ? Donne port\u00e9e 12 Ailes de dragon EPIQUE D\u00e9but : fais 2 d\u00e9g\u00e2ts aux ennemis par volants Volant 13 Sceptre de l'archimage LEGEND ? Magicien 14 Coeur de magie LEGEND ? Colosse"},{"location":"Manuel/info/#updgrades","title":"Updgrades","text":"<p>Ressources : Mana, Or, Materiaux</p> <p>Fin de combat : Or + Revenu d'un tour * 4 Mana +1 par niveau fini, +10 par boss</p> Nom id niveaux Cout Effet Am\u00e9lioration Cat\u00e9gorie 1-9 10 10 * (lv+1) Mana Categorie +1 lv de base Chances tr\u00e9sors 10 10 10 * (lv+1) Or Chances de tr\u00e9sors +5% par lv Pv bonus 11 4 100 * (lv+1) Or Pv +1 de base+1 Tresor de d\u00e9part 12 1 100         Or Choix d'un tresor de d\u00e9part Or de base 13 10 10 * (lv+1) Or villages de base +1 par lv Materiaux de base 14 5 10 * (lv+1) Or Materiaux de base +1 par lv"},{"location":"Manuel/documentation/docs/","title":"Aesen's Documentation","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"Manuel/documentation/docs/#server-commands","title":"Server Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"Manuel/documentation/docs/#pages","title":"Pages","text":"Page Cours SNT Python Revision NSI I Python Revision NSI Terminale Python Revision Java Revision"},{"location":"Premiere/","title":"Cours de NSI - Premiere","text":""},{"location":"Premiere/#cours","title":"Cours","text":""},{"location":"Premiere/#1-rentree","title":"1. Rentr\u00e9e","text":"<p>Cours : Web Pdf</p>"},{"location":"Premiere/#2-types-et-valeurs-de-base","title":"2. Types et valeurs de base","text":"<p>Activit\u00e9 : Web Pdf</p> <p>Cours : Web Pdf</p> <p>Exercice : Web Pdf</p>"},{"location":"Premiere/#3-langages-et-programmation-les-constructions-elementaires","title":"3. Langages et programmation - Les constructions \u00e9l\u00e9mentaires","text":"<p>Cours : Web Pdf</p> <p>//TODO Exercice : Web Pdf</p>"},{"location":"Premiere/#4-principes-darchitecture-des-machines","title":"4. Principes d'architecture des machines","text":"<p>//TODO Cours : Web Pdf</p> <p>//TODO Activit\u00e9 : Web Pdf</p>"},{"location":"Premiere/#5-projet-1","title":"5. Projet 1","text":"<p>//TODO</p>"},{"location":"Premiere/#6-langage-les-types-construits","title":"6. Langage - Les types construits","text":"<p>Cours : Web Pdf</p> <p>//TODO Exercice : Web Pdf</p>"},{"location":"Premiere/#7-interactions-homme-machine-sur-le-web","title":"7. Interactions Homme-Machine sur le Web","text":"<p>Cours : Web Pdf</p> <p>//TODO Exercice : Web Pdf</p> <p>//TODO Activit\u00e9 : Web Pdf</p>"},{"location":"Premiere/#8-projet-2","title":"8. Projet 2","text":"<p>//TODO</p>"},{"location":"Premiere/#9-algorithme-des-k-plus-proches-voisins","title":"9. Algorithme des k-plus proches voisins","text":"<p>// TODO Cours : Web Pdf</p>"},{"location":"Premiere/#10-dictonnaires","title":"10. Dictonnaires","text":"<p>// TODO Cours : Web Pdf</p> <p>// TODO Exercice : Web Pdf</p>"},{"location":"Premiere/#11-reseaux","title":"11. R\u00e9seaux","text":"<p>// TODO Cours : Web Pdf</p> <p>// TODO Exercice : Web Pdf</p>"},{"location":"Premiere/#12-les-tris","title":"12. Les Tris","text":"<p>Cours : Web Pdf</p> <p>// TODO Exercice : Web Pdf</p>"},{"location":"Premiere/#13-traitement-de-donnees-en-tables","title":"13. Traitement de donn\u00e9es en tables","text":"<p>// TODO Cours : Web Pdf</p> <p>// TODO Exercice : Web Pdf</p>"},{"location":"Premiere/#14-projet-3","title":"14. Projet 3","text":"<p>// TODO</p>"},{"location":"Premiere/#15-algorithmes-gloutons","title":"15. Algorithmes gloutons","text":"<p>// TODO Cours : Web Pdf</p> <p>// TODO Exercice : Web Pdf</p>"},{"location":"Premiere/#16-recherche-dichotomique","title":"16. Recherche dichotomique","text":"<p>// TODO Cours : Web Pdf</p> <p>// TODO Exercice : Web Pdf</p>"},{"location":"Premiere/#17-projet-4","title":"17. Projet 4","text":"<p>// TODO</p>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/Cours/","title":"Algorithme du plus proche voisin","text":""},{"location":"Premiere/Algorithmique/PlusProchesVoisins/Cours/#introduction","title":"Introduction","text":"<p>L'algorithme du plus proche voisin (aussi appel\u00e9 KNN pour K-Nearest Neighbors) consiste \u00e0 trouver les k plus proches voisins d'un point \u00e0 classer et \u00e0 lui attribuer la classe majoritaire parmi ces k voisins.</p> <p>C'est un algorithmes de classification tr\u00e8s utilis\u00e9 car il est simple \u00e0 comprendre et \u00e0 mettre en oeuvre.</p>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/Cours/#principe","title":"Principe","text":"<p>Le principe de l'algorithme du plus proche voisin est le suivant :</p> <p></p> <p>On consid\u00e8re un ensemble de points de donn\u00e9es et des classes associ\u00e9es \u00e0 ces points. On cherche \u00e0 classer un nouveau point de donn\u00e9es en fonction de ses voisins.</p>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/Cours/#_1","title":"Algorithme du plus proche voisin","text":"<p>Dans l'exemple ci-dessus, on cherche \u00e0 classer le point vert, on veut savoir s'il est de la classe rouge ou de la classe bleue. Pour cela, on cherche les 3 plus proches voisins du point vert. On constate qu'il y a 2 voisins rouges et 1 voisin bleu. On en d\u00e9duit que le point vert est de la classe rouge.</p>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/Cours/#algorithme","title":"Algorithme","text":"<p>En pseudo-code, l'algorithme du plus proche voisin s'\u00e9crit :</p> <pre><code>Pour chaque point \u00e0 classer :\n    Pour chaque point de donn\u00e9es :\n        Calculer la distance entre le point \u00e0 classer et le point de donn\u00e9es\n    Trier les points de donn\u00e9es par distance croissante\n    S\u00e9lectionner les k plus proches voisins\n    D\u00e9terminer la classe majoritaire parmi les k plus proches voisins\n    Attribuer cette classe au point \u00e0 classer\n</code></pre>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/Manuel/","title":"Algorithmes de classification","text":""},{"location":"Premiere/Algorithmique/PlusProchesVoisins/Manuel/#mesure-des-distances","title":"Mesure des distances","text":""},{"location":"Premiere/Algorithmique/PlusProchesVoisins/Manuel/#distance-euclidienne","title":"Distance euclidienne","text":"<p>La distance euclidienne est la distance g\u00e9om\u00e9trique entre deux points. Elle est calcul\u00e9e en prenant la racine carr\u00e9e de la somme des carr\u00e9s des diff\u00e9rences entre les coordonn\u00e9es des deux points.</p> <p>Exemple : Soient deux points A et B de coordonn\u00e9es respectives (1, 2) et (3, 4). La distance euclidienne entre ces deux points est : $\\sqrt{(3-1)^2 + (4-2)^2} = \\sqrt{8} = 2\\sqrt{2}$</p>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/Manuel/#distance-de-manhattan","title":"Distance de Manhattan","text":"<p>La distance de Manhattan est la distance entre deux points mesur\u00e9e le long des axes \u00e0 angle droit. Elle est calcul\u00e9e en faisant la somme des diff\u00e9rences entre les coordonn\u00e9es des deux points.</p> <p>Exemple : Soient deux points A et B de coordonn\u00e9es respectives (1, 2) et (3, 4). La distance de Manhattan entre ces deux points est : $|3-1| + |4-2| = 4$</p>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/Manuel/#distance-de-minkowski","title":"Distance de Minkowski","text":"<p>La distance de Minkowski est une g\u00e9n\u00e9ralisation de la distance euclidienne et de la distance de Manhattan. Elle est calcul\u00e9e en prenant la racine n-i\u00e8me de la somme des puissances n-i\u00e8mes des diff\u00e9rences entre les coordonn\u00e9es des deux points.</p> <p>Exemple : Soient deux points A et B de coordonn\u00e9es respectives (1, 2) et (3, 4). La distance de Minkowski d'ordre 3 entre ces deux points est : $\\sqrt[3]{|3-1|^3 + |4-2|^3} = \\sqrt[3]{8} = 2$</p>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/Manuel/#distance-de-hamming","title":"Distance de Hamming","text":"<p>La distance de Hamming est la distance entre deux cha\u00eenes de caract\u00e8res de m\u00eame longueur. Elle est calcul\u00e9e en faisant la somme des diff\u00e9rences entre les caract\u00e8res des deux cha\u00eenes. Cela fonctionne aussi avec n'importe quelle liste d'\u00e9l\u00e9ments de m\u00eame longueur.</p> <p>On la calcule en faisant la somme des diff\u00e9rences entre les caract\u00e8res des deux cha\u00eenes.</p> <p>Exemple : \"abc\" et \"abd\" ont une distance de Hamming de 1 car il y a une diff\u00e9rence entre les deux cha\u00eenes. \"abc\" et \"def\" ont une distance de Hamming de 3 car il y a trois diff\u00e9rences entre les deux cha\u00eenes.</p>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/Manuel/#distance-de-jaccard","title":"Distance de Jaccard","text":"<p>La distance de Jaccard est la distance entre deux ensembles. Elle est calcul\u00e9e en faisant le rapport entre la taille de l'intersection et la taille de l'union des deux ensembles.</p> <p>Exemple : Soient deux ensembles A et B de valeurs respectives {1, 2, 3} et {2, 3, 4}. La distance de Jaccard entre ces deux ensembles est : $\\frac{|{2, 3}|}{|{1, 2, 3, 4}|} = \\frac{2}{4} = \\frac{1}{2}$</p>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/Manuel/#knn","title":"KNN","text":"<p>KNN (pour K-Nearest Neighbors) est un algorithme de classification supervis\u00e9. Il s'agit d'un algorithme d'apprentissage paresseux (lazy learning) car il ne construit pas de mod\u00e8le explicite mais se contente de stocker les donn\u00e9es d'entra\u00eenement. Le calcul de la pr\u00e9diction se fait uniquement lors de la phase de test.</p> <p>Dans knn, k repr\u00e9sentent le nombre de voisins \u00e0 consid\u00e9rer pour la classification. Il s'agit d'un hyperparam\u00e8tre de l'algorithme. Il est g\u00e9n\u00e9ralement choisi impair pour \u00e9viter les cas d'\u00e9galit\u00e9. Il est aussi g\u00e9n\u00e9ralement choisi petit pour \u00e9viter les cas de sur-apprentissage.</p> <p>k \u00e9lev\u00e9 : biais faible, variance \u00e9lev\u00e9e k faible : biais \u00e9lev\u00e9, variance faible</p>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/Manuel/#principe","title":"Principe","text":"<p>L'algorithme KNN consiste \u00e0 trouver les k plus proches voisins d'un point \u00e0 classer et \u00e0 lui attribuer la classe majoritaire parmi ces k voisins.</p>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/Manuel/#usages","title":"Usages","text":"<p>KNN est un algorithme de classification tr\u00e8s utilis\u00e9 car il est simple \u00e0 comprendre et \u00e0 mettre en oeuvre. Il est aussi tr\u00e8s efficace dans les cas o\u00f9 les fronti\u00e8res de d\u00e9cision sont tr\u00e8s irr\u00e9guli\u00e8res.</p> <p>On peut l'utiliser par exemple pour la reconnaissance de caract\u00e8res manuscrits, la reconnaissance de visages, la d\u00e9tection de spams, la d\u00e9tection de fraude, la d\u00e9tection de maladies, etc.</p>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/Manuel/#avantages","title":"Avantages","text":"<ul> <li>Simple \u00e0 comprendre et \u00e0 mettre en oeuvre</li> <li>Efficace dans les cas o\u00f9 les fronti\u00e8res de d\u00e9cision sont tr\u00e8s irr\u00e9guli\u00e8res</li> <li>Peu de param\u00e8tres \u00e0 r\u00e9gler</li> <li>Peu de temps d'entra\u00eenement</li> </ul>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/Manuel/#inconvenients","title":"Inconv\u00e9nients","text":"<ul> <li>Peu efficace dans les cas o\u00f9 les fronti\u00e8res de d\u00e9cision sont tr\u00e8s r\u00e9guli\u00e8res</li> <li>Peu efficace dans les cas o\u00f9 les donn\u00e9es sont tr\u00e8s nombreuses</li> <li>Peu efficace dans les cas o\u00f9 les donn\u00e9es sont tr\u00e8s dimensionnelles</li> <li>Peu efficace dans les cas o\u00f9 les donn\u00e9es sont tr\u00e8s d\u00e9s\u00e9quilibr\u00e9es</li> </ul>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/Manuel/#metriques","title":"M\u00e9triques","text":""},{"location":"Premiere/Algorithmique/PlusProchesVoisins/Manuel/#exactitude","title":"Exactitude","text":"<p>L'exactitude est le rapport entre le nombre de pr\u00e9dictions correctes et le nombre total de pr\u00e9dictions.</p> <p>Accuracy = $\\frac{TP + TN}{TP + TN + FP + FN}$</p>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/Manuel/#precision","title":"Precision","text":"<p>La precision est le rapport entre le nombre de vrais positifs et le nombre de vrais positifs et de faux positifs.</p> <p>Precision = $\\frac{TP}{TP + FP}$</p>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/Manuel/#bayes-naif","title":"Bayes na\u00eff","text":"<p>L'algorithme de classification Bay\u00e9sien na\u00eff est un algorithme de classification supervis\u00e9 bas\u00e9 sur le th\u00e9or\u00e8me de Bayes. Il est dit na\u00eff car il suppose que les caract\u00e9ristiques sont ind\u00e9pendantes les unes des autres.</p> <p> { width=450 }              &lt;![CDATA[]]&gt; </p>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/arbreDecisionnel/arbreDecisionnel/","title":"Arbre de d\u00e9cision","text":"<p>L'arbre de d\u00e9cision est un algorithme de classification supervis\u00e9. Il s'agit d'un algorithme qui construit un arbre de d\u00e9cision \u00e0 partir des donn\u00e9es d'entra\u00eenement. Cet arbre est ensuite utilis\u00e9 pour pr\u00e9dire la classe d'un nouvel objet.</p> <p>L'arbre de d\u00e9cision est construit de mani\u00e8re \u00e0 minimiser l'entropie (ou l'indice de Gini) \u00e0 chaque \u00e9tape.</p> <p>Par entropie, on entend une mesure de l'incertitude. Plus l'entropie est \u00e9lev\u00e9e, plus l'incertitude est grande.</p>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/arbreDecisionnel/arbreDecisionnel/#principe","title":"Principe","text":"<p>Le principe de l'arbre de d\u00e9cision est le suivant :</p> <ul> <li>On consid\u00e8re un ensemble de points de donn\u00e9es et des classes associ\u00e9es \u00e0 ces points. On cherche \u00e0 classer un nouveau point de donn\u00e9es en fonction de ses caract\u00e9ristiques.</li> <li>On construit un arbre de d\u00e9cision \u00e0 partir des donn\u00e9es d'entra\u00eenement.</li> <li>On utilise cet arbre pour pr\u00e9dire la classe du point de donn\u00e9es.</li> <li>En pseudo-code, l'algorithme de l'arbre de d\u00e9cision s'\u00e9crit :</li> </ul> <pre><code>Pour chaque point \u00e0 classer :\n    Parcourir l'arbre de d\u00e9cision pour pr\u00e9dire la classe du point\n</code></pre>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/bayes/bayes/","title":"Algorithme de classification naive bayesienne","text":""},{"location":"Premiere/Algorithmique/PlusProchesVoisins/bayes/bayes/#introduction","title":"Introduction","text":"<p>L'algorithme de classification na\u00efve bay\u00e9sienne est une m\u00e9thode de classification supervis\u00e9e bas\u00e9e sur le th\u00e9or\u00e8me de Bayes. Elle repose sur l'hypoth\u00e8se na\u00efve que les variables explicatives sont ind\u00e9pendantes entre elles.</p> <p></p>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/bayes/bayes/#principe","title":"Principe","text":"<p>Le principe de l'algorithme de classification na\u00efve bay\u00e9sienne est le suivant :</p> <ul> <li>On consid\u00e8re un ensemble de points de donn\u00e9es et des classes associ\u00e9es \u00e0 ces points. On cherche \u00e0 classer un nouveau point de donn\u00e9es en fonction de ses caract\u00e9ristiques.</li> <li>On suppose que les caract\u00e9ristiques sont ind\u00e9pendantes entre elles.</li> <li>On utilise le th\u00e9or\u00e8me de Bayes pour calculer la probabilit\u00e9 que le point de donn\u00e9es appartienne \u00e0 chaque classe.</li> <li>On attribue au point de donn\u00e9es la classe ayant la plus grande probabilit\u00e9.</li> <li>En pseudo-code, l'algorithme de classification na\u00efve bay\u00e9sienne s'\u00e9crit :</li> </ul> <pre><code>Pour chaque point \u00e0 classer :\n    Calculer la probabilit\u00e9 a priori de chaque classe\n    Pour chaque caract\u00e9ristique :\n        Calculer la probabilit\u00e9 conditionnelle de chaque classe\n    Calculer la probabilit\u00e9 a posteriori de chaque classe\n    Attribuer au point \u00e0 classer la classe ayant la plus grande probabilit\u00e9 a posteriori\n</code></pre>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/bayes/bayes/#avantages","title":"Avantages","text":"<ul> <li>Simple \u00e0 comprendre et \u00e0 mettre en oeuvre</li> <li>Efficace dans les cas o\u00f9 les caract\u00e9ristiques sont ind\u00e9pendantes entre elles</li> <li>Efficace dans les cas o\u00f9 les donn\u00e9es sont tr\u00e8s nombreuses</li> <li>Efficace dans les cas o\u00f9 les donn\u00e9es sont tr\u00e8s dimensionnelles</li> </ul>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/bayes/bayes/#inconvenients","title":"Inconv\u00e9nients","text":"<ul> <li>Peu efficace dans les cas o\u00f9 les caract\u00e9ristiques sont d\u00e9pendantes entre elles</li> <li>Peu efficace dans les cas o\u00f9 les fronti\u00e8res de d\u00e9cision sont tr\u00e8s irr\u00e9guli\u00e8res</li> <li>Peu efficace dans les cas o\u00f9 les donn\u00e9es sont tr\u00e8s d\u00e9s\u00e9quilibr\u00e9es</li> <li>Peu efficace dans les cas o\u00f9 les donn\u00e9es sont tr\u00e8s bruit\u00e9es</li> </ul>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/bayes/bayes/#metriques","title":"M\u00e9triques","text":""},{"location":"Premiere/Algorithmique/PlusProchesVoisins/bayes/bayes/#exactitude","title":"Exactitude","text":"<p>L'exactitude est le rapport entre le nombre de pr\u00e9dictions correctes et le nombre total de pr\u00e9dictions.</p> <p>Accuracy = $\\frac{TP + TN}{TP + TN + FP + FN}$</p> <p>TP : Vrais positifs TN : Vrais n\u00e9gatifs FP : Faux positifs FN : Faux n\u00e9gatifs</p> <p></p>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/bayes/bayes/#precision","title":"Precision","text":"<p>La precision est le rapport entre le nombre de vrais positifs et le nombre de vrais positifs et de faux positifs.</p> <p>Precision = $\\frac{TP}{TP + FP}$</p> <p>TP : Vrais positifs FP : Faux positifs</p> <p></p>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/knn/Classification/","title":"Classification","text":""},{"location":"Premiere/Algorithmique/PlusProchesVoisins/knn/Classification/#classification-supervisee","title":"Classification supervis\u00e9e","text":""},{"location":"Premiere/Algorithmique/PlusProchesVoisins/knn/Classification/#definition","title":"D\u00e9finition","text":"<p>Sous probl\u00e8me de l'apprentissage supervis\u00e9 (pr\u00e9dire les informations manquantes d'un objet en fonction d'un ensemble d'objet dont on connais les informations), la classification consiste \u00e0 pr\u00e9dire une variable discr\u00e8te (ou cat\u00e9gorielle) \u00e0 partir d'un ensemble de variables explicatives. :base de connaissances:</p>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/knn/Classification/#methode-de-regression","title":"M\u00e9thode de r\u00e9gression","text":"<ul> <li>M\u00e9thode purement statistique qui utilisent une projection sur (une droite, un plan, etc...)</li> <li>M\u00e9thodes de classement (knn, arbre de d\u00e9cision, etc...)     Les objets de la base sont \u00e9tiquet\u00e9s par le superviseur. L'objectif est de pr\u00e9dire l'\u00e9tiquette d'un nouvel objet.</li> </ul>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/knn/Classification/#type-de-variables","title":"Type de variables","text":"<ul> <li>Qualitative (ou cat\u00e9gorielle) : variable qui prend un nombre fini de valeurs (ex : sexe, couleur, etc...)</li> <li>Quantitative : variable qui prend des valeurs num\u00e9riques (ex : taille, poids, etc...)</li> <li>Ordinale : variable qualitative dont les modalit\u00e9s sont ordonn\u00e9es (ex : taille des v\u00eatements, etc...). Ordre Canonique.</li> <li>Nominal : variable qualitative dont les modalit\u00e9s ne sont pas ordonn\u00e9es (ex : couleur des yeux, etc...). Pas d'ordre Canonique.</li> <li>Discr\u00e8te : variable quantitative dont les valeurs sont d\u00e9nombrables (en bijection avec $\\N$) (ex : nombre d'enfants, etc...)</li> <li>Continue : variable quantitative dont les valeurs sont sur un intervalle (ex : taille, poids, etc...) [a, b] $\\subset \\R$</li> <li>Variable d'intervalle : le 0 est arbitraire (ex : temp\u00e9rature en degr\u00e9 Celsius, longiture, etc...)</li> <li>Variable de ratio : le 0 est non arbitraire (ex : temp\u00e9rature en degr\u00e9 Kelvin, lattitude, poids, taille, etc...)</li> <li>Binaire : variable qualitative \u00e0 deux modalit\u00e9s (ex : vrai/faux, etc...)</li> <li>Classification : variable qualitative \u00e0 plusieurs modalit\u00e9s (ex : A, B, C, etc...)</li> </ul>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/knn/Classification/#methode-de-classification","title":"M\u00e9thode de classification","text":"<ul> <li>KNN (K-Nearest Neighbors) : algorithme de classification supervis\u00e9. Il s'agit d'un algorithme d'apprentissage paresseux (lazy learning) car il ne construit pas de mod\u00e8le explicite mais se contente de stocker les donn\u00e9es d'entra\u00eenement. Le calcul de la pr\u00e9diction se fait uniquement lors de la phase de test.</li> <li>k repr\u00e9sentent le nombre de voisins \u00e0 consid\u00e9rer pour la classification. Il s'agit d'un hyperparam\u00e8tre de l'algorithme. Il est g\u00e9n\u00e9ralement choisi impair pour \u00e9viter les cas d'\u00e9galit\u00e9. Il est aussi g\u00e9n\u00e9ralement choisi petit pour \u00e9viter les cas de sur-apprentissage.</li> <li>k \u00e9lev\u00e9 : biais faible, variance \u00e9lev\u00e9e</li> <li>k faible : biais \u00e9lev\u00e9, variance faible</li> <li>L'algorithme KNN consiste \u00e0 trouver les k plus proches voisins d'un point \u00e0 classer et \u00e0 lui attribuer la classe majoritaire parmi ces k voisins.</li> <li>KNN est un algorithme de classification tr\u00e8s utilis\u00e9 car il est simple \u00e0 comprendre et \u00e0 mettre en oeuvre. Il est aussi tr\u00e8s efficace dans les cas o\u00f9 les fronti\u00e8res de d\u00e9cision sont tr\u00e8s irr\u00e9guli\u00e8res.</li> <li>On peut l'utiliser par exemple pour la reconnaissance de caract\u00e8res manuscrits, la reconnaissance de visages, la d\u00e9tection de spams, la d\u00e9tection de fraude, la d\u00e9tection de maladies, etc.</li> <li>Avantages :<ul> <li>Simple \u00e0 comprendre et \u00e0 mettre en oeuvre</li> <li>Efficace dans les cas o\u00f9 les fronti\u00e8res de d\u00e9cision sont tr\u00e8s irr\u00e9guli\u00e8res</li> <li>Peu de param\u00e8tres \u00e0 r\u00e9gler</li> <li>Peu de temps d'entra\u00eenement</li> </ul> </li> <li>Inconv\u00e9nients :<ul> <li>Peu efficace dans les cas o\u00f9 les fronti\u00e8res de d\u00e9cision sont tr\u00e8s r\u00e9guli\u00e8res</li> <li>Peu efficace dans les cas o\u00f9 les donn\u00e9es sont tr\u00e8s nombreuses</li> <li>Peu efficace dans les cas o\u00f9 les donn\u00e9es sont tr\u00e8s dimensionnelles</li> <li>Peu efficace dans les cas o\u00f9 les donn\u00e9es sont tr\u00e8s d\u00e9s\u00e9quilibr\u00e9es</li> </ul> </li> <li>M\u00e9triques :<ul> <li>Exactitude</li> </ul> </li> <li>Arbre de d\u00e9cision : algorithme de classification supervis\u00e9. Il s'agit d'un algorithme qui construit un arbre de d\u00e9cision \u00e0 partir des donn\u00e9es d'entra\u00eenement. Cet arbre est ensuite utilis\u00e9 pour pr\u00e9dire la classe d'un nouvel objet.</li> <li>L'arbre de d\u00e9cision est construit de mani\u00e8re \u00e0 minimiser l'entropie (ou l'indice de Gini) \u00e0 chaque \u00e9tape.</li> <li>L'entropie est une mesure de l'incertitude. Plus l'entropie est \u00e9lev\u00e9e, plus l'incertitude est grande.</li> <li>L'indice de Gini est une mesure de l'impuret\u00e9. Plus l'indice de Gini est \u00e9lev\u00e9, plus l'impuret\u00e9 est grande.</li> <li>L'arbre de d\u00e9cision est un algorithme de classification tr\u00e8s utilis\u00e9 car il est simple \u00e0 comprendre et \u00e0 mettre en oeuvre. Il est aussi tr\u00e8s efficace dans les cas o\u00f9 les fronti\u00e8res de d\u00e9cision sont tr\u00e8s r\u00e9guli\u00e8res.</li> <li>On peut l'utiliser par exemple pour la reconnaissance de caract\u00e8res manuscrits, la reconnaissance de visages, la d\u00e9tection de spams, la d\u00e9tection de fraude, la d\u00e9tection de maladies, etc.</li> <li>Avantages :<ul> <li>Simple \u00e0 comprendre et \u00e0 mettre en oeuvre</li> <li>Efficace dans les cas o\u00f9 les fronti\u00e8res de d\u00e9cision sont tr\u00e8s r\u00e9guli\u00e8res</li> <li>Peu de param\u00e8tres \u00e0 r\u00e9gler</li> <li>Peu de temps d'entra\u00eenement</li> </ul> </li> <li>Inconv\u00e9nients :<ul> <li>Peu efficace dans les cas o\u00f9 les fronti\u00e8res de d\u00e9cision sont tr\u00e8s irr\u00e9guli\u00e8res</li> <li>Peu efficace dans les cas o\u00f9 les donn\u00e9es sont tr\u00e8s nombreuses</li> <li>Peu efficace dans les cas o\u00f9 les donn\u00e9es sont tr\u00e8s dimensionnelles</li> <li>Peu efficace dans les cas o\u00f9 les donn\u00e9es sont tr\u00e8s d\u00e9s\u00e9quilibr\u00e9es</li> </ul> </li> <li>M\u00e9triques :<ul> <li>Exactitude</li> </ul> </li> <li>R\u00e9gression logistique : algorithme de classification supervis\u00e9. Il s'agit d'un algorithme qui cherche \u00e0 trouver les coefficients d'une r\u00e9gression logistique \u00e0 partir des donn\u00e9es d'entra\u00eenement. Ces coefficients sont ensuite utilis\u00e9s pour pr\u00e9dire la classe d'un nouvel objet.</li> <li>La r\u00e9gression logistique est un algorithme de classification tr\u00e8s utilis\u00e9 car il est simple \u00e0 comprendre et \u00e0 mettre en oeuvre. Il est aussi tr\u00e8s efficace dans les cas o\u00f9 les fronti\u00e8res de d\u00e9cision sont tr\u00e8s r\u00e9guli\u00e8res.</li> <li>On peut l'utiliser par exemple pour la reconnaissance de caract\u00e8res manuscrits, la reconnaissance de visages, la d\u00e9tection de spams, la d\u00e9tection de fraude, la d\u00e9tection de maladies, etc.</li> <li>Avantages :<ul> <li>Simple \u00e0 comprendre et \u00e0 mettre en oeuvre</li> <li>Efficace dans les cas o\u00f9 les fronti\u00e8res de d\u00e9cision sont tr\u00e8s r\u00e9guli\u00e8res</li> <li>Peu de param\u00e8tres \u00e0 r\u00e9gler</li> <li>Peu de temps d'entra\u00eenement</li> </ul> </li> <li>Inconv\u00e9nients :<ul> <li>Peu efficace dans les cas o\u00f9 les fronti\u00e8res de d\u00e9cision sont tr\u00e8s irr\u00e9guli\u00e8res</li> <li>Peu efficace dans les cas o\u00f9 les donn\u00e9es sont tr\u00e8s nombreuses</li> <li>Peu efficace dans les cas o\u00f9 les donn\u00e9es sont tr\u00e8s dimensionnelles</li> <li>Peu efficace dans les cas o\u00f9 les donn\u00e9es sont tr\u00e8s d\u00e9s\u00e9quilibr\u00e9es</li> </ul> </li> <li>M\u00e9triques :<ul> <li>Exactitude</li> </ul> </li> <li>SVM (Support Vector Machine) : algorithme de classification supervis\u00e9. Il s'agit d'un algorithme qui cherche \u00e0 trouver un hyperplan s\u00e9parateur entre les diff\u00e9rentes classes. Cet hyperplan est ensuite utilis\u00e9 pour pr\u00e9dire la classe d'un nouvel objet.</li> <li>L'hyperplan est construit de mani\u00e8re \u00e0 maximiser la marge entre les diff\u00e9rentes classes.</li> <li>L'hyperplan est construit de mani\u00e8re \u00e0 minimiser l'erreur de classification.</li> <li>Classification na\u00efve bay\u00e9sienne : m\u00e9thode de classification supervis\u00e9e bas\u00e9e sur le th\u00e9or\u00e8me de Bayes. Elle repose sur l'hypoth\u00e8se na\u00efve que les variables explicatives sont ind\u00e9pendantes entre elles.</li> <li>R\u00e9seau de neurones : algorithme de classification supervis\u00e9. Il s'agit d'un algorithme qui cherche \u00e0 trouver les poids des diff\u00e9rentes connexions entre les neurones \u00e0 partir des donn\u00e9es d'entra\u00eenement. Ces poids sont ensuite utilis\u00e9s pour pr\u00e9dire la classe d'un nouvel objet.</li> <li>Le r\u00e9seau de neurones est un algorithme de classification tr\u00e8s utilis\u00e9 car il est tr\u00e8s efficace dans les cas o\u00f9 les fronti\u00e8res de d\u00e9cision sont tr\u00e8s irr\u00e9guli\u00e8res.</li> <li>On peut l'utiliser par exemple pour la reconnaissance de caract\u00e8res manuscrits, la reconnaissance de visages, la d\u00e9tection de spams, la d\u00e9tection de fraude, la d\u00e9tection de maladies, etc.</li> <li>Avantages :<ul> <li>Efficace dans les cas o\u00f9 les fronti\u00e8res de d\u00e9cision sont tr\u00e8s irr\u00e9guli\u00e8res</li> </ul> </li> <li>Inconv\u00e9nients :<ul> <li>Peu efficace dans les cas o\u00f9 les fronti\u00e8res de d\u00e9cision sont tr\u00e8s r\u00e9guli\u00e8res</li> <li>Peu efficace dans les cas o\u00f9 les donn\u00e9es sont tr\u00e8s nombreuses</li> <li>Peu efficace dans les cas o\u00f9 les donn\u00e9es sont tr\u00e8s dimensionnelles</li> <li>Peu efficace dans les cas o\u00f9 les donn\u00e9es sont tr\u00e8s d\u00e9s\u00e9quilibr\u00e9es</li> </ul> </li> <li>M\u00e9triques :<ul> <li>Exactitude</li> </ul> </li> <li>For\u00eat al\u00e9atoire : algorithme de classification supervis\u00e9. Il s'agit d'un algorithme qui construit un grand nombre d'arbres de d\u00e9cision \u00e0 partir des donn\u00e9es d'entra\u00eenement. Chaque arbre est ensuite utilis\u00e9 pour pr\u00e9dire la classe d'un nouvel objet. La classe majoritaire parmi les pr\u00e9dictions des diff\u00e9rents arbres est alors attribu\u00e9e \u00e0 l'objet.</li> </ul>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/knn/Classification/#processus-en-2-etapes","title":"Processus en 2 \u00e9tapes","text":"<ul> <li>Construction d'un mod\u00e8le \u00e0 partir des donn\u00e9es d'entra\u00eenement training set<ul> <li>Attribut de classe (la plupart du temps)</li> </ul> </li> <li>Utilisation du mod\u00e8le pour pr\u00e9dire la classe d'un nouvel objet test set</li> <li>(\u00e9valuation de la qualit\u00e9 du mod\u00e8le) validation set</li> </ul>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/reseau/reseauNeuronne/","title":"R\u00e9seau de neuronnes","text":""},{"location":"Premiere/Algorithmique/PlusProchesVoisins/reseau/reseauNeuronne/#introduction","title":"Introduction","text":"<p>Le r\u00e9seau de neurones est un algorithme de classification supervis\u00e9. Il s'agit d'un algorithme qui cherche \u00e0 trouver les poids des diff\u00e9rentes connexions entre les neurones \u00e0 partir des donn\u00e9es d'entra\u00eenement. Ces poids sont ensuite utilis\u00e9s pour pr\u00e9dire la classe d'un nouvel objet.</p> <p>Le r\u00e9seau de neurones est un algorithme de classification tr\u00e8s utilis\u00e9 car il est tr\u00e8s efficace dans les cas o\u00f9 les fronti\u00e8res de d\u00e9cision sont tr\u00e8s irr\u00e9guli\u00e8res.</p> <p>On peut l'utiliser par exemple pour la reconnaissance de caract\u00e8res manuscrits, la reconnaissance de visages, la d\u00e9tection de spams, la d\u00e9tection de fraude, la d\u00e9tection de maladies, etc.</p>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/reseau/reseauNeuronne/#principe","title":"Principe","text":"<p>Le principe du r\u00e9seau de neurones est le suivant :</p> <ul> <li>On consid\u00e8re un ensemble de points de donn\u00e9es et des classes associ\u00e9es \u00e0 ces points. On cherche \u00e0 classer un nouveau point de donn\u00e9es en fonction de ses caract\u00e9ristiques.</li> <li>On cherche \u00e0 trouver les poids des diff\u00e9rentes connexions entre les neurones de mani\u00e8re \u00e0 minimiser l'erreur de classification.</li> <li>On utilise une fonction d'activation pour calculer la sortie du r\u00e9seau de neurones en fonction des entr\u00e9es. (Exemple : fonction sigmo\u00efde, fonction tangente hyperbolique, fonction ReLU, etc.)</li> <li>On attribue au point de donn\u00e9es la classe ayant la plus grande sortie.</li> <li>En pseudo-code, l'algorithme du r\u00e9seau de neurones s'\u00e9crit :</li> </ul> <pre><code>Initialiser les poids des diff\u00e9rentes connexions entre les neurones\nPour chaque point \u00e0 classer :\n    Calculer la sortie du r\u00e9seau de neurones en fonction des entr\u00e9es\n    Attribuer au point \u00e0 classer la classe ayant la plus grande sortie\n</code></pre>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/reseau/reseauNeuronne/#avantages","title":"Avantages","text":"<ul> <li>Efficace dans les cas o\u00f9 les fronti\u00e8res de d\u00e9cision sont tr\u00e8s irr\u00e9guli\u00e8res</li> <li>Peu de param\u00e8tres \u00e0 r\u00e9gler</li> <li>Peu de temps d'entra\u00eenement</li> <li>Peu de temps de pr\u00e9diction</li> </ul>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/reseau/reseauNeuronne/#inconvenients","title":"Inconv\u00e9nients","text":"<ul> <li>Peu efficace dans les cas o\u00f9 les fronti\u00e8res de d\u00e9cision sont tr\u00e8s r\u00e9guli\u00e8res</li> <li>Peu efficace dans les cas o\u00f9 les donn\u00e9es sont tr\u00e8s nombreuses</li> <li>Peu efficace dans les cas o\u00f9 les donn\u00e9es sont tr\u00e8s dimensionnelles</li> <li>Peu efficace dans les cas o\u00f9 les donn\u00e9es sont tr\u00e8s d\u00e9s\u00e9quilibr\u00e9es</li> </ul>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/reseau/reseauNeuronne/#metriques","title":"M\u00e9triques","text":""},{"location":"Premiere/Algorithmique/PlusProchesVoisins/reseau/reseauNeuronne/#exactitude","title":"Exactitude","text":"<p>L'exactitude est le rapport entre le nombre de pr\u00e9dictions correctes et le nombre total de pr\u00e9dictions.</p> <p>Accuracy = $\\frac{TP + TN}{TP + TN + FP + FN}$</p>"},{"location":"Premiere/Algorithmique/PlusProchesVoisins/reseau/reseauNeuronne/#exemple","title":"Exemple","text":"<pre><code>\n# Importation des librairies pour le r\u00e9seau de neurones\nfrom sklearn.neural_network import MLPClassifier\n\n# Cr\u00e9ation du r\u00e9seau de neurones\n# On utilise un r\u00e9seau de neurones \u00e0 2 couches cach\u00e9es de 100 neurones chacune\nclf = MLPClassifier(hidden_layer_sizes=(100, 100), max_iter=500)\n\n# Entra\u00eenement du r\u00e9seau de neurones\nclf.fit(X_train, y_train)\n\n# Pr\u00e9diction avec le r\u00e9seau de neurones\ny_pred = clf.predict(X_test)\n\n</code></pre>"},{"location":"Premiere/Algorithmique/Tris/Cours/","title":"Les algorithmes de tri","text":""},{"location":"Premiere/Algorithmique/Tris/Cours/#1-introduction","title":"1. Introduction","text":""},{"location":"Premiere/Algorithmique/Tris/Cours/#quest-ce-quun-algorithme-de-tri","title":"Qu'est-ce qu'un algorithme de tri ?","text":"<p>Un algorithme de tri est un algorithme qui permet de trier une liste d'\u00e9l\u00e9ments. Par exemple, on peut trier une liste de nombres, une liste de mots, une liste de personnes, etc.</p>"},{"location":"Premiere/Algorithmique/Tris/Cours/#pourquoi-trier","title":"Pourquoi trier ?","text":"<p>Le tri permet de retrouver plus facilement un \u00e9l\u00e9ment dans la liste et de gagner \u00e9norm\u00e9ment de temps de recherche.</p>"},{"location":"Premiere/Algorithmique/Tris/Cours/#comment-trier","title":"Comment trier ?","text":"<p>Il existe de nombreux algorithmes de tri. Chaque algorithme a ses avantages et ses inconv\u00e9nients. Certains algorithmes sont plus adapt\u00e9s pour trier des listes de nombres, d'autres pour trier des listes de mots, etc.</p>"},{"location":"Premiere/Algorithmique/Tris/Cours/#2-activite","title":"2. Activit\u00e9","text":"<ol> <li> <p>Prenez un jeu de cartes et triez-le en utilisant la m\u00e9thode de votre choix.</p> </li> <li> <p>Comparez votre m\u00e9thode avec celle des autres groupes.</p> </li> <li> <p>Rem\u00e9langez le paquet et triez le selon l'algorithme suivant (du tri par selection):</p> <ul> <li>On recherche le plus petit \u00e9l\u00e9ment de la liste</li> <li>On inverse sa place avec l'\u00e9lement juste \u00e0 la suite du dernier \u00e9l\u00e9ment tri\u00e9 de la liste</li> <li>On recommence jusqu'\u00e0 ce que la fin de la liste soit atteinte</li> </ul> </li> </ol>"},{"location":"Premiere/Algorithmique/Tris/Cours/#3-le-tri-par-selection","title":"3. Le tri par s\u00e9lection","text":"<p>Le tri par s\u00e9lection est un algorithme de tri qui consiste \u00e0 parcourir la liste \u00e0 trier et \u00e0 placer les \u00e9l\u00e9ments dans l'ordre croissant (ou d\u00e9croissant).</p> <ul> <li>On recherche le premier \u00e9l\u00e9ment de le liste (ici le plus petit)</li> <li>On inverse sa place avec le premier \u00e9l\u00e9ment non-tri\u00e9 de la liste</li> <li>On recommence jusqu'\u00e0 ce que la fin de la liste</li> </ul> <p>Exemple : On souhaite trier la liste suivante : ['e', 'b', 'd', 'c', 'a'] On recherche le plus petit \u00e9l\u00e9ment de la liste : 'a' On le place en position 0 en l'inversant avec 'e' On recommence avec la liste ['a', 'b', 'd', 'c', 'e']</p> Etape Liste \u00e0 trier Partie tri\u00e9e 0 ['e', 'b', 'd', 'c', 'a'] [-, -, -, -, -] 1 ['a', 'b', 'd', 'c', 'e'] ['a', -, -, -, -] 2 ['a', 'b', 'd', 'c', 'e'] ['a', 'b', -, -, -] 3 ['a', 'b', 'c', 'd', 'e'] ['a', 'b', 'c', -, -] 4 ['a', 'b', 'c', 'd', 'e'] ['a', 'b', 'c', 'd', -] 5 ['a', 'b', 'c', 'd', 'e'] ['a', 'b', 'c', 'd', 'e'] <p>Cet algorithme est simple \u00e0 comprendre et \u00e0 mettre en oeuvre. Cependant, il est tr\u00e8s lent. En effet, pour trier une liste de 10000 \u00e9l\u00e9ments, il faut effectuer 10000 recherches qui chacune demande de parcourir toute la liste. C'est beaucoup trop long !</p>"},{"location":"Premiere/Algorithmique/Tris/Cours/#question-1","title":"Question 1","text":"<pre><code>Quelle est la complexit\u00e9 de cet algorithme ?\n</code></pre>"},{"location":"Premiere/Algorithmique/Tris/Cours/#question-2","title":"Question 2","text":"<pre><code>On va chercher \u00e0 impl\u00e9menter cette algorithme en Python. Pour cela on va utiliser une fonction echanger qui permet d'\u00e9changer deux \u00e9l\u00e9ments d'une liste.\n</code></pre> ### Lancer assert triParInsertion([1, 5, 2, 4, 3]) == [1, 2, 3, 4, 5], \"\\n\\n Le tri par insertion ne fonctionne pas sur [1, 5, 2, 4, 3]\"bksl-nlassert triParInsertion([1, 2, 3, 4, 5]) == [1, 2, 3, 4, 5], 'Le tri par insertion ne fonctionne pas sur [1, 2, 3, 4, 5]'bksl-nlassert triParInsertion([5, 4, 3, 2, 1]) == [1, 2, 3, 4, 5], 'Le tri par insertion ne fonctionne pas sur [5, 4, 3, 2, 1]'bksl-nlbksl-nlprint(\"\\n Bravo ! Tous les tests passent.\")bksl-nl Valider 5/5 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>#--- HDR ---#bksl-nl# Code Python \u00c3\u00a9x\u00c3\u00a9cut\u00c3\u00a9 sans \u00c3\u00aatre montr\u00c3\u00a9 \u00c3\u00a0 l'\u00c3\u00a9l\u00c3\u00a8vebksl-nl#--- HDR ---#bksl-nlbksl-nlbksl-nldef triParInsertion(tab):bksl-nl    \"\"\" Trie le tableau tab par insertion \"\"\"bksl-nl    ...bksl-nlbksl-nltableau = [1, 5, 2, 4, 3]bksl-nltriParInsertion(tableau)bksl-nlprint(tableau)  # On veut [1, 2, 3, 4, 5]bksl-nldef triParInsertion(tab):bksl-nl    \"\"\" Trie le tableau tab par insertion \"\"\"bksl-nl    for i in range(1, len(tab)):bksl-nl        x = tab[i]bksl-nl        j = ibksl-nl        while j &gt; 0 and tab[j - 1] &gt; x:bksl-nl            tab[j] = tab[j - 1]bksl-nl            j -= 1bksl-nl        tab[j] = xbksl-nlbksl-nltableau = [1, 5, 2, 4, 3]bksl-nltriParInsertion(tableau)bksl-nlprint(tableau)  # On veut [1, 2, 3, 4, 5]bksl-nl</p>"},{"location":"Premiere/Algorithmique/Tris/Cours/#question-3","title":"Question 3","text":"<pre><code>Impl\u00e9mentez une fonction qui permette de trouver l'indice du plus petit \u00e9l\u00e9ment d'une liste \u00e0 partir d'un indice donn\u00e9.\n</code></pre>"},{"location":"Premiere/Algorithmique/Tris/Cours/#question-4","title":"Question 4","text":"<pre><code>En utilisant les fonctions pr\u00e9c\u00e9dentes, impl\u00e9mentez l'algorithme de tri par s\u00e9lection. Vous pouvez vous appuyer sur l'algorithme \u00e9crit pr\u00e9c\u00e9demment\n\net sur le code suivant :\n</code></pre> <pre><code>def tri_selection(liste):\n    for i in range(len(liste)):\n        # On cherche le plus petit \u00e9l\u00e9ment de la liste\n        # On l'\u00e9change avec le premier \u00e9l\u00e9ment non-tri\u00e9\n</code></pre>"},{"location":"Premiere/Algorithmique/Tris/Cours/#question-5","title":"Question 5","text":"<pre><code>Testez votre algorithme sur une liste de 10000 \u00e9l\u00e9ments. Combien de temps met-il pour trier la liste ?\n</code></pre>"},{"location":"Premiere/Algorithmique/Tris/Cours/#4-le-tri-par-insertion","title":"4. Le tri par insertion","text":"<p>Le tri par insertion est un algorithme de tri qui consiste \u00e0 parcourir la liste et \u00e0 ins\u00e9rer chaque \u00e9l\u00e9ment \u00e0 sa place dans une nouvelle liste. Pour ins\u00e9rer un \u00e9l\u00e9ment \u00e0 sa place dans la nouvelle liste, on le compare avec les \u00e9l\u00e9ments d\u00e9j\u00e0 pr\u00e9sents dans la nouvelle liste. On ins\u00e8re l'\u00e9l\u00e9ment \u00e0 sa place d\u00e8s qu'on trouve un \u00e9l\u00e9ment plus grand que lui.</p> <ul> <li>On parcourt la liste de ce qui n'est pas encore tri\u00e9 jusqu'\u00e0 trouver un \u00e9l\u00e9ment mal plac\u00e9 par rapport au pr\u00e9c\u00e9dent (ici un \u00e9l\u00e9ment plus petit)</li> <li>Tant que l'\u00e9l\u00e9ment est mal plac\u00e9 (plus petit que le pr\u00e9c\u00e9dent), on l'inverse avec le pr\u00e9c\u00e9dent</li> <li>On recommence jusqu'\u00e0 la fin de la liste</li> </ul> <p>Exemple : On souhaite trier la liste suivante : [5, 2, 4, 3, 1]</p> Etape Liste \u00e0 trier Liste tri\u00e9e 0 [5, 2, 4, 3, 1] [5] 1 [5, 2, 4, 3, 1] [2, 5] 2 [2, 5, 4, 3, 1] [2, 4, 5] 3 [2, 4, 5, 3, 1] [2, 3, 4, 5] 4 [2, 3, 4, 5, 1] [1, 2, 3, 4, 5]"},{"location":"Premiere/Algorithmique/Tris/Cours/#question-6","title":"Question 6","text":"<pre><code>Quelle est la complexit\u00e9 de cet algorithme ?\n</code></pre>"},{"location":"Premiere/Algorithmique/Tris/Cours/#question-7","title":"Question 7","text":"<pre><code>Impl\u00e9mentez cet algorithme en Python.\n</code></pre>"},{"location":"Premiere/Algorithmique/Tris/Cours/#5-autres-algorithmes-de-tri","title":"5. Autres algorithmes de tri","text":"<p>Il existe de nombreux autres algorithmes de tri, le tri-fusion et le tri-rapide sont les plus connus. Ces algorithmes sont plus complexes \u00e0 comprendre et \u00e0 mettre en oeuvre. Cependant, ils sont beaucoup plus rapides que les algorithmes pr\u00e9c\u00e9dents. Vous les verrez plus en d\u00e9tail l'ann\u00e9e prochaine.</p>"},{"location":"Premiere/Algorithmique/Tris/Cours/#6-pour-aller-plus-loin","title":"6. Pour aller plus loin","text":"<p>Ces algorithmes fonctionnent pour trier des listes de nombres ou de mot car on sais comment les comparer. Mais comment trier une liste d'objets ? Par exemple, comment trier une liste de personnes ? Pour cela, il faut d\u00e9finir une fonction de comparaison qui permet de comparer deux personnes. On peut alors utiliser cette fonction de comparaison pour trier la liste de personnes.</p>"},{"location":"Premiere/Algorithmique/Tris/Cours/#question-bonus","title":"Question bonus","text":"<pre><code>Cr\u00e9ez une classe Personne avec un attribut age et cr\u00e9ez une liste de personnes que vous remplissez avec des personnes de diff\u00e9rents ages.\n\nImpl\u00e9mentez une fonction de comparaison pour trier une liste de personnes par age. Et adaptez un de vos algorithmes de tri pour trier cette liste de personnes.\n</code></pre>"},{"location":"Premiere/IhmWeb/Cours/","title":"Interaction homme machine sur le web","text":""},{"location":"Premiere/IhmWeb/Cours/#introduction","title":"Introduction","text":""},{"location":"Premiere/IhmWeb/Cours/#quest-ce-que-lihm","title":"Qu'est ce que l'IHM ?","text":"<p>L'IHM est l'interface entre l'homme et la machine. Elle permet \u00e0 l'utilisateur d'interagir avec la machine. Elle est compos\u00e9e de deux parties : l'interface et l'interaction. C'est donc autant l'interface graphique (comme les boutons, les menus, les fen\u00eatres, etc.) que les interactions avec l'utilisateur (comme le clic sur un bouton, le d\u00e9placement de la souris, etc.).</p>"},{"location":"Premiere/IhmWeb/Cours/#quest-ce-que-lihm-sur-le-web","title":"Qu'est ce que l'IHM sur le web ?","text":"<p>Le web est un ensemble de pages web reli\u00e9es entre elles par des liens hypertextes. Il est accessible via un navigateur web. L'IHM sur le web est donc l'interface entre l'utilisateur et le site web. On va par exemple retrouver des boutons, des menus, des formulaires, etc. L'interaction avec l'utilisateur se fait via la souris, le clavier, etc.</p>"},{"location":"Premiere/IhmWeb/Cours/#rappels-sur-les-pages-web","title":"Rappels sur les pages web","text":"<p>Une page web est compos\u00e9e de deux parties : - le code HTML qui permet de structurer la page web - le code CSS qui permet de mettre en forme la page web</p> <p>Mais il est aussi possible d'ajouter du code JavaScript pour rendre la page web dynamique.</p>"},{"location":"Premiere/IhmWeb/Cours/#javascript","title":"JavaScript","text":"<p>Le JavaScript est un langage de programmation qui permet d'ajouter des fonctionnalit\u00e9s \u00e0 une page web. Il est ex\u00e9cut\u00e9 par le navigateur web. Il permet par exemple de modifier le contenu d'une page web, de modifier le style d'une page web, de modifier la structure d'une page web, etc.</p> <p>Remarque : le JavaScript est un langage de programmation \u00e0 part enti\u00e8re. Il est donc possible de cr\u00e9er des applications web uniquement avec du JavaScript. On parle alors d'application web monopage.</p>"},{"location":"Premiere/IhmWeb/Cours/#integrer-du-javascript-dans-une-page-web","title":"Int\u00e9grer du JavaScript dans une page web","text":"<p>On peut int\u00e9grer du JavaScript dans une page web de deux mani\u00e8res : * en utilisant la balise \"\\\" dans le code HTML :</p> <pre><code>&lt;p&gt; Un paragraphe &lt;/p&gt; \n\n&lt;script&gt; \n    // Code JavaScript\n&lt;/script&gt;\n</code></pre> <ul> <li>en utilisant un fichier JavaScript externe :</li> </ul> <pre><code>&lt;p&gt; Un paragraphe &lt;/p&gt; \n\n&lt;script src=\"script.js\"&gt;&lt;/script&gt;\n</code></pre> <pre><code>// script.js\n// Code JavaScript\n</code></pre> <p>Remarque : On privil\u00e9gie l'utilisation d'un fichier JavaScript externe pour s\u00e9parer le code HTML du code JavaScript.</p>"},{"location":"Premiere/IhmWeb/Cours/#exercice-1","title":"Exercice 1","text":"<p>index.html</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;head&gt; \n    ... \n&lt;/head&gt;\n&lt;body&gt; \n    &lt;h1&gt;Titre&lt;/h1&gt; \n    &lt;p&gt;Paragraphe&lt;/p&gt; \n    &lt;button onclick=\"fonctionMagique()\"&gt; Cliquez ici &lt;/button&gt;\n&lt;/body&gt;\n</code></pre> <p>script.js</p> <pre><code>function fonctionMagique() { \n    alert(\"Ca marche !\"); \n} \n</code></pre> <p>Ajouter le lien vers le fichier script.js dans le fichier index.html pour que le bouton affiche une alerte avec le texte \"Ca marche !\".</p>"},{"location":"Premiere/IhmWeb/Cours/#boutons","title":"Boutons","text":""},{"location":"Premiere/IhmWeb/Cours/#recuperer-un-element","title":"R\u00e9cup\u00e9rer un \u00e9l\u00e9ment","text":"<p>On identifie un \u00e9l\u00e9ment dans la page html par un identifiant unique. Cet identifiant est appel\u00e9 id. Il est possible de r\u00e9cup\u00e9rer un \u00e9l\u00e9ment HTML dans le code JavaScript en utilisant la m\u00e9thode getElementById().</p> <pre><code>&lt;button id=\"boutonMagique\"&gt; Cliquez ici &lt;/button&gt;\n</code></pre> <pre><code>// R\u00e9cup\u00e9ration du bouton\nconst bouton = document.getElementById(\"boutonMagique\"); \n</code></pre> <p>On peut aussi directement ajouter une action sur un \u00e9l\u00e9ment HTML en utilisant certain mot cl\u00e9. Pour faire une action au clic, on peut utiliser l'attribut onclick par exemple :</p> <p>Avec le code dans le html :</p> <pre><code>&lt;button onclick=\"alert('Cliquez ici')\"&gt; Cliquez ici &lt;/button&gt;\n</code></pre> <p>Ou pour appeler une fonction du code JavaScript :</p> <pre><code>&lt;button onclick=\"maFonction()\"&gt; Cliquez ici &lt;/button&gt;\nfunction maFonction() { \n    alert(\"Cliquez ici\"); \n} \n</code></pre>"},{"location":"Premiere/IhmWeb/Cours/#les-evenements","title":"Les \u00e9v\u00e9nements","text":"<p>Les \u00e9v\u00e9nements sont des actions qui se produisent dans une page web. On va pouvoir r\u00e9agir \u00e0 ces \u00e9v\u00e9nements en ex\u00e9cutant du code JavaScript.</p> <p>Il existe de nombreux \u00e9v\u00e9nements sur une page web. On peut par exemple citer :</p> <ul> <li>click : lorsqu'on clique sur un \u00e9l\u00e9ment</li> <li>mouseover : lorsqu'on passe la souris sur un \u00e9l\u00e9ment</li> <li>mouseout : lorsqu'on retire la souris d'un \u00e9l\u00e9ment</li> <li>keydown : lorsqu'on appuie sur une touche du clavier</li> <li>submit : lorsqu'on valide un formulaire</li> </ul> <p>C'est ce qu'on a vu pr\u00e9c\u00e9demment avec l'attribut onclick par exemple.</p>"},{"location":"Premiere/IhmWeb/Cours/#ajouter-un-evenement","title":"Ajouter un \u00e9v\u00e9nement","text":"<p>Pour ajouter un \u00e9v\u00e9nement sur un \u00e9l\u00e9ment HTML, on va utiliser la m\u00e9thode addEventListener().</p> <pre><code>// Dans le code JavaScript\n// R\u00e9cup\u00e9ration du bouton\nconst bouton = document.getElementById(\"boutonMagique\");\n</code></pre> <p>Maintenant, on va pouvoir ajouter un \u00e9v\u00e9nement sur ce bouton. On va par exemple ajouter un \u00e9v\u00e9nement au clic sur ce bouton.</p> <pre><code>// Dans le code JavaScript\n// R\u00e9cup\u00e9ration du bouton\nconst bouton = document.getElementById(\"boutonMagique\"); \n\n// On cr\u00e9\u00e9 une fonction\nfunction clicBouton() { \n    alert(\"Cliquez ici\"); \n} \n\n// Ajout d'un \u00e9v\u00e9nement au clic sur le bouton avec le nom de la fonction \nbouton.addEventListener(\"click\", clicBouton); \n</code></pre> <p>Remarque : Cela correspond \u00e0 la m\u00e9thode onclick qu'on a vu pr\u00e9c\u00e9demment. Mais on va privil\u00e9gier l'utilisation de addEventListener() pour s\u00e9parer le code HTML du code JavaScript.</p>"},{"location":"Premiere/IhmWeb/Cours/#exercice-2","title":"Exercice 2","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;head&gt; \n    &lt;script src=\"script.js\"&gt;&lt;/script&gt;\n&lt;/head&gt; \n\n&lt;body&gt; \n    &lt;h1&gt; Les Dragons &lt;/h1&gt; \n\n    &lt;p&gt; Les dragons sont des cr\u00e9atures l\u00e9gendaires repr\u00e9sent\u00e9es comme des sortes de gigantesques reptiles \u00e9cailleux, g\u00e9n\u00e9ralement ail\u00e9s, munis de griffes et parfois de crocs, poss\u00e9dant des pouvoirs magiques ou cracheurs de feu. &lt;/p&gt; \n\n    &lt;button id=\"boutonMagique\"&gt; Cliquez ici &lt;/button&gt;\n&lt;/body&gt;\n</code></pre> <p>A partir de cette page html, ajouter un \u00e9v\u00e9nement au clic sur le bouton pour afficher une alerte avec le texte \"Les dragons existent !\".</p> <p>Remarque : On peut utiliser la m\u00e9thode alert(\"contenu\") pour afficher une alerte.</p>"},{"location":"Premiere/IhmWeb/Cours/#modifier-le-contenu-dun-element","title":"Modifier le contenu d'un \u00e9l\u00e9ment","text":"<p>On peut modifier directement le contenu d'un \u00e9l\u00e9ment HTML en utilisant la propri\u00e9t\u00e9 innerHTML.</p> <pre><code>&lt;p id=\"paragraphe\"&gt; Un paragraphe &lt;/p&gt; \n\n&lt;button onclick=\"modifierParagraphe()\"&gt; Cliquez ici &lt;/button&gt;\n</code></pre> <pre><code>// R\u00e9cup\u00e9ration du paragraphe\nconst paragraphe = document.getElementById(\"paragraphe\"); \n\n// Fonction pour modifier le contenu du paragraphe\nfunction modifierParagraphe() { \n    // On change le contenu du paragraphe \n    paragraphe.innerHTML = \"Un autre paragraphe\"; \n} \n</code></pre>"},{"location":"Premiere/IhmWeb/Cours/#exercice-3","title":"Exercice 3","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;head&gt; \n    &lt;script src=\"script.js\"&gt;&lt;/script&gt;\n&lt;/head&gt; \n\n&lt;body&gt; \n    &lt;h1&gt; Les Dragons &lt;/h1&gt; \n\n    &lt;p id=\"paragraphe\"&gt; Les dragons sont de petits l\u00e9zards &lt;/p&gt; \n\n    &lt;button onclick=\"modifierParagraphe()\"&gt; Mettre \u00e0 jour  &lt;/button&gt;\n&lt;/body&gt;\n</code></pre> <p>A partir de cette page html, ajouter un \u00e9v\u00e9nement au clic sur le bouton pour modifier le contenu du paragraphe avec le texte \"Les dragons sont de gentils animaux tr\u00e8s sympathiques\".</p>"},{"location":"Premiere/IhmWeb/Cours/#modifier-le-style-dun-element","title":"Modifier le style d'un \u00e9l\u00e9ment","text":"<p>On peut modifier directement le style d'un \u00e9l\u00e9ment HTML en utilisant la propri\u00e9t\u00e9 style.</p> <pre><code>&lt;p id=\"paragraphe\"&gt; Un paragraphe &lt;/p&gt; \n</code></pre> <pre><code>&lt;button onclick=\"modifierStyle()\"&gt; Cliquez ici &lt;/button&gt;\n// R\u00e9cup\u00e9ration du paragraphe\nconst paragraphe = document.getElementById(\"paragraphe\"); \n\n// Fonction pour modifier le style du paragraphe\nfunction modifierStyle() { \n    // On change le style du paragraphe \n    paragraphe.style.color = \"red\"; \n    paragraphe.style.fontSize = \"20px\"; \n} \n</code></pre>"},{"location":"Premiere/IhmWeb/Cours/#formulaires","title":"Formulaires","text":"<p>Les formulaires permettent de r\u00e9cup\u00e9rer des informations de l'utilisateur. On va par exemple pouvoir r\u00e9cup\u00e9rer son nom, son pr\u00e9nom, son adresse, etc. On va ensuite pouvoir utiliser ces informations pour les enregistrer dans une base de donn\u00e9es, pour les afficher, etc.</p>"},{"location":"Premiere/IhmWeb/Cours/#structure-dun-formulaire","title":"Structure d'un formulaire","text":"<p>Un formulaire est compos\u00e9 de plusieurs \u00e9l\u00e9ments HTML :</p> <ul> <li>form : le formulaire</li> <li>input : un champ de saisie</li> <li>label : un label pour un champ de saisie</li> <li>button : un bouton pour valider le formulaire</li> </ul> <pre><code>&lt;form&gt; \n    &lt;label for=\"nom\"&gt; Nom : &lt;/label&gt; \n    &lt;input type=\"text\" id=\"nom\" name=\"nom\"&gt; \n\n    &lt;label for=\"prenom\"&gt; Pr\u00e9nom : &lt;/label&gt; \n    &lt;input type=\"text\" id=\"prenom\" name=\"prenom\"&gt; \n\n    &lt;button type=\"submit\"&gt; Valider &lt;/button&gt;\n&lt;/form&gt;\n</code></pre> <p>Remarque : On peut utiliser l'attribut for sur un label pour lier le label \u00e0 un champ de saisie. On peut aussi utiliser l'attribut name sur un champ de saisie pour identifier le champ de saisie. R\u00e9cup\u00e9rer les informations d'un formulaire Pour r\u00e9cup\u00e9rer les informations d'un formulaire, on va utiliser la propri\u00e9t\u00e9 value sur un champ de saisie.</p> <pre><code>&lt;form&gt; \n    &lt;label for=\"nom\"&gt; Nom : &lt;/label&gt; \n    &lt;input type=\"text\" id=\"nom\" name=\"nom\"&gt; \n\n    &lt;label for=\"prenom\"&gt; Pr\u00e9nom : &lt;/label&gt; \n    &lt;input type=\"text\" id=\"prenom\" name=\"prenom\"&gt; \n\n    &lt;button type=\"submit\"&gt; Valider &lt;/button&gt;\n&lt;/form&gt; \n</code></pre> <pre><code>// R\u00e9cup\u00e9ration du champ de saisie du nom\nconst nom = document.getElementById(\"nom\"); \n\n// R\u00e9cup\u00e9ration du champ de saisie du pr\u00e9nom\nconst prenom = document.getElementById(\"prenom\"); \n\n// Fonction pour r\u00e9cup\u00e9rer les informations du formulaire\nfunction recupererInformations() { \n    // On r\u00e9cup\u00e8re le nom \n    const nomUtilisateur = nom.value; \n\n    // On r\u00e9cup\u00e8re le pr\u00e9nom \n    const prenomUtilisateur = prenom.value; \n\n    // On affiche les informations \n    alert(\"Nom : \" + nomUtilisateur + \"\\nPr\u00e9nom : \" + prenomUtilisateur); \n} \n</code></pre> <p>Pour que cette fonction soit appel\u00e9e lorsqu'on valide le formulaire, on va ajouter un \u00e9v\u00e9nement sur le formulaire.</p> <pre><code>&lt;form onsubmit=\"recupererInformations()\"&gt; \n    ... \n&lt;/form&gt;\n</code></pre> <p>Remarque : On utilise l'\u00e9v\u00e9nement onsubmit pour r\u00e9agir \u00e0 la validation du formulaire. On pourrait aussi utiliser l'\u00e9v\u00e9nement onclick sur le bouton pour r\u00e9agir au clic sur le bouton.</p>"},{"location":"Premiere/IhmWeb/Cours/#exercice-4","title":"Exercice 4","text":"<p>Cr\u00e9ez un formulaire (uniquement la partie HTML) pour demander \"Quel Dragon \u00eates-vous ?\". Le formulaire doit contenir les champs suivants : - Nom - Pr\u00e9nom - Age</p> <p>Ajoutez un bouton pour valider le formulaire.</p>"},{"location":"Premiere/IhmWeb/Cours/#exercice-5","title":"Exercice 5","text":"<p>A partir du formulaire de l'exercice pr\u00e9c\u00e9dent, ajoutez un \u00e9v\u00e9nement sur le formulaire pour r\u00e9cup\u00e9rer l'age et afficher une alerte avec le texte \"Vous \u00eates un dragon de [age] ans\".</p>"},{"location":"Premiere/IhmWeb/Cours/#client-serveur","title":"Client / Serveur","text":"<p>Quand vous lancer un programme sur votre machine, celui qui demande quelque chose est appel\u00e9 le client. Si tout se passe sur sa propre machine, alors il n'y a que le client. Mais si le client demande quelque chose \u00e0 une autre machine, alors cette autre machine est appel\u00e9e le serveur. C'est lui qui va r\u00e9pondre \u00e0 la demande du client.</p> <p>Le JavaScript est ex\u00e9cut\u00e9 par votre navigateur web. C'est donc votre navigateur web qui est le client. Tout se passe chez vous !</p> <p>Quand vous allez sur un site sur le web, celui-ci est h\u00e9berg\u00e9 sur un serveur. Votre navigateur web va donc demander des informations \u00e0 ce serveur. C'est le serveur qui va r\u00e9pondre \u00e0 votre demande. Le javascript de la page ne sera ex\u00e9cut\u00e9 qu'apr\u00e8s, sur votre navigateur web.</p> <p>Il faut bien faire la distinction entre ce qui se passe de fa\u00e7on \"locale\" (chez le client) et ce qui se passe sur le web (chez le serveur).</p>"},{"location":"Premiere/IhmWeb/Cours/#exemple-recuperer-une-page-web","title":"Exemple : r\u00e9cup\u00e9rer une page web","text":"<pre><code>+-----------------+                                  +-----------------+ \n|  Client         |                                  |  Serveur        | \n|                 | Demande une page web             |                 | \n|                 |------------------------------&gt;   |                 | \n|                 |                                  |                 | \n|                 |                                  |                 | \n|                 | Renvoi la page web               |                 | \n|                 |&lt;------------------------------   |                 | \n|                 |                                  |                 | \n|                 | Ex\u00e9cute le JavaScript localement |                 | \n|                 |------|                           |                 | \n|                 |      |                           |                 | \n|                 |&lt;-----|                           |                 | \n+-----------------+                                  +-----------------+ \n</code></pre>"},{"location":"Premiere/IhmWeb/Cours/#les-requetes-http","title":"Les requ\u00eates HTTP","text":"<p>Pour communiquer entre le client et le serveur, on utilise le protocole HTTP. C'est un protocole de communication qui permet d'\u00e9changer des informations entre le client et le serveur.</p> <p>Ce protocole est bas\u00e9 sur des requ\u00eates de diff\u00e9rents types standards : - GET : pour r\u00e9cup\u00e9rer des informations - POST : pour envoyer des informations - PUT : pour modifier des informations - DELETE : pour supprimer des informations - ... (et bien d'autres)</p>"},{"location":"Premiere/IhmWeb/Cours/#exemple-recuperer-une-page-web_1","title":"Exemple : r\u00e9cup\u00e9rer une page web","text":"<pre><code>+-----------------+                                  +-----------------+ \n|  Client         |                                  |  Serveur        | \n|                 | Demande une page web             |                 | \n|                 |-GET--------------------------&gt;   |                 | \n|                 |                                  |                 | \n|                 |                                  |                 | \n|                 | Renvoi la page web               |                 | \n|                 |&lt;-------------------------POST-   |                 | \n|                 |                                  |                 | \n+-----------------+                                  +-----------------+ \n</code></pre> <p>Les formulaires utilisent la m\u00e9thode POST pour envoyer les informations du formulaire au serveur. Ensuite, le serveur va pouvoir utiliser ces informations pour les enregistrer dans une base de donn\u00e9es par exemple. Quand tout se passe localement, on utilise la m\u00e9thode GET ensuite pour r\u00e9cup\u00e9rer des informations. Les formulaires envoient d\u00e9j\u00e0 des requ\u00eates HTTP. Mais on peut aussi envoyer des requ\u00eates HTTP manuellement en JavaScript. Pour cela, on va utiliser la m\u00e9thode fetch(). Cela permet par exemple de r\u00e9cup\u00e9rer des informations sur un autre site web.</p> <pre><code>// On envoie une requ\u00eate GET \u00e0 l'adresse https://monsite.com \nfetch(\"https://monsite.com\") \n    .then(function(response) { \n        // On r\u00e9cup\u00e8re la r\u00e9ponse \n        return response.text(); \n    }) \n    .then(function(text) { \n        // On affiche la r\u00e9ponse \n        console.log(text); \n    }); \n\n    // Ce script va afficher le code HTML de la page https://monsite.com\n</code></pre> <p>Remarque : On utilise la m\u00e9thode then() pour r\u00e9cup\u00e9rer la r\u00e9ponse de la requ\u00eate. C'est une m\u00e9thode asynchrone. Cela signifie que le code ne sera pas ex\u00e9cut\u00e9 dans l'ordre. On va d'abord envoyer la requ\u00eate, puis on va r\u00e9cup\u00e9rer la r\u00e9ponse. C'est pour cela qu'on utilise la m\u00e9thode then() pour r\u00e9cup\u00e9rer la r\u00e9ponse.</p>"},{"location":"Premiere/IhmWeb/Cours/#conclusion","title":"Conclusion","text":"<p>L'IHM sur le web est le coeur de l'int\u00e9ractivit\u00e9 des pages web. C'est ce qui permet \u00e0 l'utilisateur d'interagir avec le site web. On a vu comment ajouter des \u00e9v\u00e9nements sur des \u00e9l\u00e9ments HTML pour r\u00e9agir \u00e0 des actions de l'utilisateur ou des formulaires. Vous pouvez bien s\u00fbr aller plus loin en regardant les (tr\u00e8s) nombreuses autres possibilit\u00e9s du JavaScript. Surtout, n'h\u00e9sitez pas \u00e0 vous renseigner sur internet pour aller plus loin et amusez-vous !</p>"},{"location":"Premiere/Langage/Cours/","title":"Langages et programmation - Les constructions \u00e9l\u00e9mentaires","text":"<p>On va faire quelques rappels de seconde sur les langages de programmation et les constructions \u00e9l\u00e9mentaires.</p>"},{"location":"Premiere/Langage/Cours/#variables","title":"Variables","text":"<p>Une variable est un espace de m\u00e9moire qui permet de stocker une valeur. En Python, on peut d\u00e9clarer une variable en lui affectant une valeur. Par exemple, pour d\u00e9clarer une variable <code>a</code> qui contient la valeur <code>5</code>, on \u00e9crit :</p> <pre><code>unNombre = 5\nduTexte = \"Coucou\"\ninterrupteur = True\n</code></pre>"},{"location":"Premiere/Langage/Cours/#types-de-variables","title":"Types de variables","text":"<p>Il existe plusieurs types de variables en Python. Les plus courants sont :</p> <ul> <li><code>int</code> : pour les entiers</li> <li><code>float</code> : pour les nombres \u00e0 virgule</li> <li><code>str</code> : pour les cha\u00eenes de caract\u00e8res. Une cha\u00eene de caract\u00e8res est d\u00e9clar\u00e9e avec des guillemets, par exemple <code>\"Bonjour\"</code></li> <li><code>bool</code> : pour les bool\u00e9ens (vrai ou faux). En Python, on utilise <code>True</code> et <code>False</code> pour les bool\u00e9ens.</li> <li><code>list</code> : pour les listes. Une liste est d\u00e9clar\u00e9e avec des crochets, par exemple <code>[1, 2, 3]</code></li> <li><code>tuple</code> : pour les tuples. Un tuple est d\u00e9clar\u00e9 avec des parenth\u00e8ses, par exemple <code>(1, 2, 3)</code></li> </ul>"},{"location":"Premiere/Langage/Cours/#fonctions","title":"Fonctions","text":"<p>Une fonction est un bloc de code qui permet d'effectuer une t\u00e2che pr\u00e9cise.</p>"},{"location":"Premiere/Langage/Cours/#format-dune-fonction","title":"Format d'une fonction","text":"<pre><code>def nom_de_la_fonction(parametre1 : type1, parametre2 : type2, ...) -&gt; type_de_retour:\n    # Instructions\n    return valeur\n</code></pre> <p>En Python, on d\u00e9finit une fonction avec le mot-cl\u00e9 <code>def</code> suivis du nom de notre fonction, des param\u00e8tre entre parenth\u00e8ses et enfin, de \":\". Toutes les lignes par la suite au sein de la fonction devront \u00eatre indent\u00e9es, c'est \u00e0 dire d\u00e9cal\u00e9 d'une tabulation. Le mot cl\u00e9 <code>return</code> permet de renvoyer une valeur. Par exemple, pour d\u00e9finir une fonction <code>carre</code> qui renvoie le carr\u00e9 d'un nombre, on \u00e9crit :</p> <p>le fait de pr\u00e9ciser le type des param\u00e8tres et du retour est facultatif mais on va le faire pour mieux lire notre code. L'oublier n'est pas une erreur en soit mais c'est une bonne pratique tr\u00e8s recommand\u00e9e.</p>"},{"location":"Premiere/Langage/Cours/#exemple","title":"Exemple","text":"<pre><code>def carre(x : int) -&gt; int:\n    return x * x\n</code></pre>"},{"location":"Premiere/Langage/Cours/#exercice-1","title":"Exercice 1","text":"<p>Pour s'entrainer \u00e0 bien d\u00e9clarer des fonction, on va \u00e9crire des lignes de d\u00e9clarations de fonction avec leurs param\u00e8tres et leur type de retour mais sans pour l'instant \u00e9crire le code de la fonction.</p> <p>A partir du nom de la fonction, vous allez deviner ce que fait la fonction et donc les param\u00e8tres qu'elle doit prendre et le type de retour qu'elle doit renvoyer.</p> <p>Vous devez donc compl\u00e9ter le tableau avec :</p> <ul> <li>Les types des param\u00e8tres s\u00e9par\u00e9s par des virgules</li> <li>Le type de retour</li> <li>La ligne compl\u00e8te de d\u00e9claration de la fonction gr\u00e2ce \u00e0 ces informations</li> </ul> <p>Un premier exemple avec la fonction <code>somme</code> est fourni.</p> Nom de la fonction Type des param\u00e8tres Type de retour Declaration de la fonction <code>somme</code> <code>int</code>, <code>int</code> <code>int</code> <code>def somme(a : int, b : int) -&gt; int:</code> <code>carre</code> ................... .............. ............................. <code>moyenne</code> ................... .............. ............................. <code>est_pair</code> ................... .............. ............................. <code>ecrit_n_fois_un_mot</code> ................... .............. ............................. <code>passe_en_majuscule</code> ................... .............. ............................. <code>enleve_les_espaces</code> ................... .............. ............................. <code>additionne_n_elements</code> ................... .............. ............................. <code>moyenne_liste</code> ................... .............. ............................."},{"location":"Premiere/Langage/Cours/#exercice-2","title":"Exercice 2","text":"<p>Maintenant qu'on sait d\u00e9clarer une fonction, on va \u00e9crire le code de la fonction. Pour chacune des fonctions suivantes, compl\u00e9tez le code de la fonction pour qu'elle fasse ce qui est demand\u00e9. Vous pouvez vous aider de l'annexe d'aide Python pour trouver comment \u00e9crire certaines instructions.</p> <p>A partir d'ici, vous pouvez compl\u00e9ter les fonctions directement dans le fichier ex.py fourni. Pensez \u00e0 d\u00e9-commenter (enlever les <code>\"\"\"</code>) des exercices pour les tester.</p> <pre><code>def change_les_z_en_s(...\n\n\n\n</code></pre> <pre><code>def donne_une_liste_de_1_a_100(...\n\n\n\n</code></pre> <pre><code>def verifie_si_le_nombre_est_dans_la_liste(...\n\n\n\n</code></pre>"},{"location":"Premiere/Langage/Cours/#documentation-dune-fonction","title":"Documentation d'une fonction","text":"<p>Une fonction bien faite se doit d'\u00eatre bien document\u00e9e. Cela va permettre de comprendre ce que fait la fonction, quels param\u00e8tres elle prend en entr\u00e9e et ce qu'elle renvoie. En Python, la documentation compl\u00e8te d'une fonction doit int\u00e9grer 4 \u00e9l\u00e9ments obligatoirement (et un cinqui\u00e8me facultatif) :</p> <ul> <li>Une description de la fonction</li> <li>Les param\u00e8tres d'entr\u00e9e avec leur type et leur signification</li> <li>La valeur de retour avec son type et sa signification</li> <li>Des exemples d'utilisation</li> <li>Les pr\u00e9conditions s'il y en a, c'est \u00e0 dire les conditions que les param\u00e8tres doivent respecter pour que la fonction se comporte correctement. (facultatif)</li> </ul> <p>Pour notre fonction <code>carre</code>, la documentation ressemblera \u00e0 ceci :</p> <pre><code>\ndef carre(x : int) -&gt; int:\n    \"\"\"\n    Renvoie le carr\u00e9 d'un nombre.\n\n    Param\u00e8tres :\n        x (int) : Le nombre dont on veut calculer le carr\u00e9.\n\n    Retour :\n        int : Le carr\u00e9 de x.\n\n    Exemple :\n        &gt;&gt;&gt; carre(5)\n        25\n\n        &gt;&gt;&gt; carre(-3)\n        9\n    \"\"\"\n    return x * x\n</code></pre> <p>Comme vous pouvez le voir, la documentation peut prendre une place importante dans le code et elle peut paraitre fastidieuse \u00e0 \u00e9crire. Mais bien documenter votre code va vous permettre de gagner \u00e9norm\u00e9ment de temps quand vous allez vouloir relire du code ou le modifier. Ca vous permet aussi de vous assurer que vous comprenez bien ce que vous avez \u00e9crit.</p>"},{"location":"Premiere/Langage/Cours/#exercice-3","title":"Exercice 3","text":"<p>Documentez la fonction suivante pour que la fonction soit bien lisible et ne laisse aucune ambig\u00fcit\u00e9 sur son fonctionnement.</p> <pre><code>\ndef est_pair(x : int) -&gt; bool:\n    \"\"\"\n        ...\n\n\n\n\n\n\n\n    \"\"\"\n    return x % 2 == 0\n</code></pre>"},{"location":"Premiere/Langage/Cours/#exercice-4","title":"Exercice 4","text":"<p>Ecrivez une fonction <code>est_majeur</code> qui prend en param\u00e8tre un \u00e2ge et qui renvoie <code>True</code> si la personne est majeure et <code>False</code> sinon. (N'oubliez pas de documenter votre fonction).</p> <pre><code>\ndef est_majeur(...\n\n</code></pre>"},{"location":"Premiere/Langage/Cours/#exercice-5","title":"Exercice 5","text":"<p>Pour appeler une fonction, on utilise son nom suivi de parenth\u00e8ses contenant les arguments. Par exemple, pour appeler la fonction <code>carre</code> d\u00e9finie plus haut, on \u00e9crit :</p> <pre><code>\nnombre = 5\nnombre_carre = carre(nombre)\nprint(nombre_carre) # Affiche 25\n</code></pre> <p>Utilisez vos fonctions pour compl\u00e9ter l'exemple suivant :</p> <pre><code>\nliste = [12, 14, 28, 47, 56]\n\n# Est ce que 16 est dans la liste ?\n\nif(...) :\n    print(\"16 est dans la liste\")\nelse :\n    print(\"16 n'est pas dans la liste\")\n\n# Zut, j'ai oubli\u00e9 des nombres dans la liste visiblement, refaisons la liste avec les nombres de 1 \u00e0 100\n\nnouvelle_liste = ...\n\n# Est ce que 16 est dans la nouvelle liste ?\n\nif(...) :\n    print(\"16 est dans la nouvelle liste\")\nelse :\n    print(\"16 n'est pas dans la nouvelle liste\")\n\ntexteFinal = \"C'ezt zuper za marche !\"\nprint(change_les_s_en_z(texteFinal))\n\n# Il semble que j'ai fait quelques erreurs dans le texte, corrigeons le\n\ntexteFinal = ...\n\nprint(\"Le texte corrig\u00e9 est : \", texteFinal)\n\n</code></pre>"},{"location":"Premiere/Langage/Cours/#exercice-6","title":"Exercice 6","text":"<p>Avec tout ce qu'on a vu pr\u00e9c\u00e9demment, ecrivez une fonction <code>additionne</code>, une fonction <code>divise</code> et utilisez-les pour \u00e9crire une fonction <code>moyenne</code> qui prend en param\u00e8tre une liste de nombres et qui renvoie la moyenne de ces nombres. (N'oubliez pas de documenter vos fonctions).</p> <pre><code>\n</code></pre>"},{"location":"Premiere/RepresentationDonnes/Activite/","title":"Activit\u00e9 sur les types et valeurs de base","text":""},{"location":"Premiere/RepresentationDonnes/Activite/#introduction","title":"Introduction","text":"<p>En informatique, on ne peut pas \u00e9crire directement du texte ou m\u00eame des nombres sur un disque dur. La raison \u00e0 cela c'est que les disques durs stockent la pr\u00e9sence ou l'absence de courant \u00e9lectrique, donc soit 0 soit 1. On appelle ces 0 et 1 des bits. Un bit est l'unit\u00e9 de base de l'information en informatique.</p>"},{"location":"Premiere/RepresentationDonnes/Activite/#base-10","title":"Base 10","text":"<p>Pour comprendre comment fonctionne une base de num\u00e9ration, on va commencer par la base 10. C'est la base que l'on utilise tous les jours. Elle est compos\u00e9e de 10 chiffres et on les utilise pour repr\u00e9senter les nombres. Par exemple, le nombre 1234 en base 10 correspond \u00e0 :</p> <p>$$ 1 \\times 10^3 + 2 \\times 10^2 + 3 \\times 10^1 + 4 \\times 10^0 = 1234 $$</p> <p>Pour une autre base ca va \u00eatre exactement la m\u00eame chose, chaque position va repr\u00e9senter une puissance de la base.</p>"},{"location":"Premiere/RepresentationDonnes/Activite/#base-2","title":"Base 2","text":"<p>Gr\u00e2ce \u00e0 ces simples 0 et 1, on peut repr\u00e9senter des nombres. Pour cela, on utilise le syst\u00e8me binaire, un syst\u00e8me de num\u00e9ration de base 2. Cela signifie que l'on ne peut utiliser que deux chiffres pour repr\u00e9senter les nombres : 0 et 1.</p> <p>Par exemple, le nombre 1101 en binaire correspond au nombre 13 en d\u00e9cimal. Pour le convertir, on utilise la formule suivante :</p> <p>$$ 1 \\times 2^3 + 1 \\times 2^2 + 0 \\times 2^1 + 1 \\times 2^0 = 13 $$</p>"},{"location":"Premiere/RepresentationDonnes/Activite/#rappels","title":"Rappels","text":"$2^8$ $2^7$ $2^6$ $2^5$ $2^4$ $2^3$ $2^2$ $2^1$ $2^0$ 256 128 64 32 16 8 4 2 1"},{"location":"Premiere/RepresentationDonnes/Activite/#exercice-1","title":"Exercice 1","text":"<p>A quoi correspondent les nombres suivants \u00e9crits en binaire ?</p> Binaire D\u00e9cimal 11 110 111 1000"},{"location":"Premiere/RepresentationDonnes/Activite/#methode-de-conversion","title":"M\u00e9thode de conversion","text":"<p>Pour convertir un nombre en binaire, on peut utiliser 2 m\u00e9thodes :</p> <ul> <li>La premi\u00e8re consiste \u00e0 diviser le nombre par 2 et \u00e0 noter le reste. On recommence l'op\u00e9ration avec le quotient obtenu jusqu'\u00e0 obtenir 0. On lit ensuite les restes de bas en haut pour obtenir le nombre en binaire.</li> </ul> <pre><code>Exemple : Convertir 13 en binaire\n\n13 / 2 = 6 reste 1\n6 / 2 = 3 reste 0\n3 / 2 = 1 reste 1\n1 / 2 = 0 reste 1\n\n\u00e0 l'envers : 1101_2\n</code></pre> <ul> <li>La seconde m\u00e9thode consiste \u00e0 utiliser les puissances de 2. On commence par la plus grande puissance de 2 inf\u00e9rieure au nombre \u00e0 convertir. Si le nombre est sup\u00e9rieur \u00e0 la puissance de 2, on note un 1 et on soustrait la puissance de 2 au nombre. Sinon, on note un 0. On recommence ensuite avec la puissance de 2 inf\u00e9rieure jusqu'\u00e0 obtenir 0.</li> </ul> <pre><code>Exemple : Convertir 13 en binaire\n\n13 - 8 (2^3) = 5\n5 - 4 (2^2) = 1\n1 - 1 (2^0) = 0\n\nSoit 1 * 2^3 + 1 * 2^2 + 0 * 2^1 + 1 * 2^0 = 1101_2\n</code></pre>"},{"location":"Premiere/RepresentationDonnes/Activite/#exercice-2","title":"Exercice 2","text":"<p>Maintenant qu'on sait comment convertir un nombre en binaire, convertissez les nombres suivants :</p> D\u00e9cimal Binaire 10 42 15 255"},{"location":"Premiere/RepresentationDonnes/Activite/#base-16","title":"Base 16","text":"<p>Une autre base de num\u00e9ration tr\u00e8s utilis\u00e9e en informatique est la base 16. Elle est compos\u00e9e de 16 chiffres : 0 \u00e0 9 puis A \u00e0 F. Les chiffres A \u00e0 F correspondent aux nombres 10 \u00e0 15 en base 10. Elle est aussi appel\u00e9e base hexad\u00e9cimale.</p> Valeur 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Base 16 0 1 2 3 4 5 6 7 8 9 A B C D E F <p>Donc le nombre 1A en base 16 correspond au nombre 26 en base 10. Pour le convertir, on utilise la formule suivante :</p> <p>$$ 1 \\times 16^1 + 10 \\times 16^0 = 26 $$</p> <p>Comme pour la base 2, on peut utiliser la m\u00e9thode des puissances de 16 pour convertir un nombre en base 16. Mais comme 16 est une puissance de 2, on peut aussi convertir un nombre en base 16 en le convertissant d'abord en base 2 puis en base 16.</p> <p>On regroupe les bits par groupe de 4 en partant de la droite. On compl\u00e8te avec des 0 \u00e0 gauche si besoin. On convertit ensuite chaque groupe de 4 bits en un chiffre hexad\u00e9cimal.</p> <p>Exemple : 42 en base 10 correspond \u00e0 00101010 en base 2. On regroupe par 4 bits : 0010 1010. On convertit chaque groupe en hexad\u00e9cimal : 2A.</p>"},{"location":"Premiere/RepresentationDonnes/Activite/#exercice-3","title":"Exercice 3","text":"<p>Completer le tableau suivant :</p> D\u00e9cimal Binaire Hexad\u00e9cimal 10 110010 FF 100 111 42 <p>Cette base est tr\u00e8s utilis\u00e9e en informatique car elle permet de repr\u00e9senter des nombres binaires de mani\u00e8re plus compacte. Par exemple, un octet (8 bits) peut \u00eatre repr\u00e9sent\u00e9 par 2 chiffres hexad\u00e9cimaux. Mais vous comprenez bien que pour un ordinateur, un nombre reste toujours une suite de 0 et de 1, c'est simplement une \u00e9criture pour \u00eatre plus lisible pour nous.</p>"},{"location":"Premiere/RepresentationDonnes/Activite/#pour-aller-plus-loin-les-autres-bases","title":"Pour aller plus loin : les autres bases","text":"<p>Il est possible de repr\u00e9senter des nombres dans n'importe quelle autre base avec n'importe quel nombre sup\u00e9rieur \u00e0 1. </p> <p>Par exemple en base 3, 212_3 correspond \u00e0 23^2 + 13^1 + 2*3^0 = 23 en base 10.</p> <p>En base 8, 123_8 correspond \u00e0 18^2 + 28^1 + 3*8^0 = 83 en base 10.</p>"},{"location":"Premiere/RepresentationDonnes/Activite/#exercice-4","title":"Exercice 4","text":"<p>Convertir les nombres suivants :</p> D\u00e9cimal Base Valeur 10 Base 3 42 Base 8 25 Base 4 Base 5 123 Base 6 100 Base 7 515 20 18 100 64 255 111"},{"location":"Premiere/RepresentationDonnes/Cours/","title":"Codage et repr\u00e9sentation des donn\u00e9es","text":""},{"location":"Premiere/RepresentationDonnes/Cours/#introduction","title":"Introduction","text":"<p>Nous avons vu que les ordinateurs ne peuvent manipuler que des 0 et des 1. Pour repr\u00e9senter des nombres, des lettres ou des images, il faut donc trouver un moyen de les coder en binaire. C'est ce que nous allons voir dans ce chapitre.</p>"},{"location":"Premiere/RepresentationDonnes/Cours/#codage-des-caracteres","title":"Codage des caract\u00e8res","text":""},{"location":"Premiere/RepresentationDonnes/Cours/#ascii","title":"ASCII","text":"<p>Le code ASCII (American Standard Code for Information Interchange) est un code de caract\u00e8res informatiques standardis\u00e9. Il permet de repr\u00e9senter les lettres de l'alphabet, les chiffres, les signes de ponctuation et les caract\u00e8res sp\u00e9ciaux. Chaque caract\u00e8re est cod\u00e9 sur 7 bits, ce qui permet de repr\u00e9senter 128 caract\u00e8res diff\u00e9rents.</p> <p>Par exemple, le code ASCII de la lettre 'A' est 65, celui de 'B' est 66, etc.</p> <p>Exemple : Voyons comment coder le mot \"NSI\" en ASCII.  N  S  I 78 83 73 01001110 01010011 01001001</p> <p>Et voil\u00e0 comment on peut le stocker en m\u00e9moire.</p>"},{"location":"Premiere/RepresentationDonnes/Cours/#unicode","title":"Unicode","text":"<p>Pour repr\u00e9senter des caract\u00e8res de toutes les langues du monde, il faut plus de 128 caract\u00e8res. C'est pourquoi on utilise de nouveaux standards comme Unicode. Unicode utilise 16 bits pour coder chaque caract\u00e8re, ce qui permet de repr\u00e9senter 2^16 = 65536 caract\u00e8res diff\u00e9rents. On a tellment de caract\u00e8res disponibles que m\u00eames les \u00e9mojis sont cod\u00e9s en Unicode.</p> <p>Par exemple :</p> Caract\u00e8re Code Unicode A U+0041 \u00e9 U+00E9 \u263a U+263A :dragon: U+1F409 <p>Pour des raisons pratiques, les 128 premiers caract\u00e8res Unicode sont les m\u00eames que les 128 premiers caract\u00e8res ASCII. Comme \u00e7a, on peut lire un texte ASCII avec un \u00e9diteur Unicode.</p>"},{"location":"Premiere/RepresentationDonnes/Cours/#utf-8","title":"UTF-8","text":"<p>Mais on ne peut pas stocker un caract\u00e8re Unicode directement en m\u00e9moire, il faut le coder en binaire. C'est l\u00e0 qu'intervient le format UTF-8.</p> <p>UTF-8 (Unicode Transformation Format) est un format de codage de caract\u00e8res Unicode. Il est compatible avec le code ASCII, c'est-\u00e0-dire que les caract\u00e8res ASCII sont cod\u00e9s sur un octet (8 bits) et les caract\u00e8res Unicode sont cod\u00e9s sur plusieurs octets.</p>"},{"location":"Premiere/RepresentationDonnes/Cours/#principe-de-codage","title":"Principe de codage","text":"<ul> <li>Les caract\u00e8res ASCII sont cod\u00e9s sur un octet, c'est-\u00e0-dire que le bit de poids fort (celui le plus \u00e0 gauche) est toujours \u00e0 0.</li> <li>Les caract\u00e8res Unicode sont cod\u00e9s sur plusieurs octets. Le premier octet commence par autant de \"1\" qu'il y a d'octets utilis\u00e9s pour \u00e9crire le nombre. A leur suite, on place un \"0\" pour indiquer la s\u00e9paration entre ces \"1\" et l'encodage du caract\u00e8re. Les octets suivants commencent par 10... pour indiquer qu'il s'agit d'un octet suivant. On rempli ensuite les bits restants avec les bits du caract\u00e8re. Et les vides avec des 0.</li> <li>Les caract\u00e8res Unicode sont cod\u00e9s sur 1 \u00e0 4 octets.</li> </ul> <pre><code>Exemple : Codons le mot \"NSI\" en UTF-8.\nN  S  I =&gt; 01001110 01010011 01001001\n</code></pre> <pre><code>Exemple : Codons le caract\u00e8re '\u00e9' en UTF-8.\n\u00e9 correspond \u00e0 U+00E9\n00E9 = 0000.0000 1110.1001\nOn compl\u00e8te avec des 0 \u00e0 gauche pour avoir 16 bits : 0000 0000.0000 1110.1001\nOn a besoin de 2 octets pour coder ce caract\u00e8re.\n\nDonc on \u00e9crira sous la forme 110xxxxx 10xxxxxx\nOn remplace les x par les bits de notre caract\u00e8re : 11000011 10111001\nCe qui nous donne : 110__00011__ 10__111001__\n</code></pre>"},{"location":"Premiere/RepresentationDonnes/Cours/#pratique","title":"Pratique","text":"<p>On veut inscrire le mot \"Ga\u00efa\" sur un support num\u00e9rique. Pour cela on va le coder en UTF-8.</p>"},{"location":"Premiere/RepresentationDonnes/Cours/#exercice-1","title":"Exercice 1","text":"<p>Compl\u00e9tez les correspondances en binaires pour les caract\u00e8res suivants :</p> Caract\u00e8re Code Unicode Binaire G U+0047 a U+0061 \u00ef U+00EF a U+0061"},{"location":"Premiere/RepresentationDonnes/Cours/#exercice-2","title":"Exercice 2","text":"<p>Combien d'octets sont n\u00e9cessaires pour coder chacun des caract\u00e8res de l'exercice 1 ?</p> G a \u00ef a ........ ........ ........ ........"},{"location":"Premiere/RepresentationDonnes/Cours/#exercice-3","title":"Exercice 3","text":"<p>On peut donc maintenant coder le mot \"Ga\u00efa \" en UTF-8.</p> Caract\u00e8re G a \u00ef a Binaire .................. .................. .................. .................. Nombre d'octets .................. .................. .................. .................. UTF-8 .................. .................. .................. .................."},{"location":"Premiere/RepresentationDonnes/Cours/#exercice-bonus","title":"Exercice bonus","text":"<p>Dans l'autre sens, maintenant qu'on sait comment coder un caract\u00e8re en UTF-8, on peut utiliser les m\u00eames r\u00e8gles pour d\u00e9coder un texte secret.</p> <p><code>01110100 01110010 01101111 01110101 01110110 11000011 10101000 00100001</code> est un texte cod\u00e9 en UTF-8. D\u00e9codons-le pour d\u00e9couvrir le message secret.</p> <p>Pour cet exercice, cette table de correspondance peut vous \u00eatre utile :</p> C Code C Code C Code C Code C Code C Code C Code C Code C Code C Code A 65 B 66 C 67 D 68 E 69 F 70 G 71 H 72 I 73 J 74 K 75 L 76 M 77 N 78 O 79 P 80 Q 81 R 82 S 83 T 84 U 85 V 86 W 87 X 88 Y 89 Z 90 a 97 b 98 c 99 d 100 e 101 f 102 g 103 h 104 i 105 j 106 k 107 l 108 m 109 n 110 o 111 p 112 q 113 r 114 s 115 t 116 u 117 v 118 w 119 x 120 y 121 z 122 0 48 1 49 2 50 3 51 4 52 5 53 6 54 7 55 8 56 9 57 ! 33 \" 34 # 35 $ 36 % 37 &amp; 38 ' 39 ( 40"},{"location":"Premiere/RepresentationDonnes/Cours/#un-dernier-probleme","title":"Un dernier probl\u00e8me","text":"<p>Nous savons maintenant coder des nombres, des lettres et des caract\u00e8res sp\u00e9ciaux en binaire. Mais nous avons un probl\u00e8me pour les nombres \u00e0 virgule. Ils nous posent beaucoup plus de probl\u00e8mes que les nombres entiers.</p>"},{"location":"Premiere/RepresentationDonnes/Cours/#exercice-4","title":"Exercice 4","text":"<p>En suivant une des deux m\u00e9thodes que nous avons appris pour coder un nombre en binaire, tentez de convertir 3.14 en binaire.</p> <p>Quel probl\u00e8me rencontrez-vous ?</p> <p>....................................................................................................</p>"},{"location":"Premiere/RepresentationDonnes/Cours/#solution","title":"Solution","text":"<p>Pour pallier \u00e0 ce probl\u00e8me, on va faire 2 choses : - Utiliser une valeur approch\u00e9e du nombre \u00e0 virgule que l'on veut coder. - Et utiliser la notation scientifique. On code le signe, l'exposant et la mantisse.</p> <p>Le signe : 0 pour un nombre positif, 1 pour un nombre n\u00e9gatif. L'exposant : On code l'exposant en binaire. Pour un nombre en simple pr\u00e9cision, on utilise 8 bits pour coder l'exposant. Pour un nombre en double pr\u00e9cision, on utilise 11 bits. La mantisse : On code la mantisse en binaire. Pour un nombre en simple pr\u00e9cision, on utilise 23 bits pour coder la mantisse. Pour un nombre en double pr\u00e9cision, on utilise 52 bits.</p> <p>Au total on va noter le nombre en binaire sur 32 ou 64 bits.</p> Signe Exposant Mantisse 1 bit 8 bits 23 bits <p>Exemple : Codons le nombre 3.14 en simple pr\u00e9cision.</p> <p>Le signe : 0 car le nombre est positif. L'exposant : On d\u00e9cale la virgule jusqu'au premier bit (le plus \u00e0 gauche) valant 1. D\u00e9placer la virgule \u00e0 gauche revient \u00e0 diviser le nombre par 2. D\u00e9placer la virgule \u00e0 droite revient \u00e0 multiplier le nombre par 2. Ici, on d\u00e9cale la virgule de 1 bit vers la droite. Donc l'exposant est 1. La mantisse : On code la partie d\u00e9cimale du nombre en binaire. Ici, 0.14 = 0.00100110011001100110011... On a donc : 0.00100110011001100110011 = 1.00100110011001100110011 * 2^-1 Donc on a : | Signe | Exposant | Mantisse | |:-----:|:--------:|:--------:| |  1 bit|  8 bits  | 23 bits  | |   0   | 00000001 | 00100110011001100110011 |</p>"},{"location":"Premiere/RepresentationDonnes/Cours/#exercice-5","title":"Exercice 5","text":"<p>A vous de jouer, codez le nombre 5.25 en simple pr\u00e9cision.</p>"},{"location":"Premiere/RepresentationDonnes/Exercices/","title":"Types de base en informatique","text":""},{"location":"Premiere/RepresentationDonnes/Exercices/#introduction","title":"Introduction","text":"<p>On a vu qu'on pouvait repr\u00e9senter nombres et caract\u00e8res mais il y a d'autres types de base en informatique. On va voir ici les types de base en Python, le langage de programmation qu'on utilise en NSI.</p>"},{"location":"Premiere/RepresentationDonnes/Exercices/#les-types-de-base-en-python","title":"Les types de base en Python","text":"<p>On a d\u00e9j\u00e0 vu trois types de base en Python :</p> <ul> <li>Entiers : Les entiers sont des nombres entiers positifs ou n\u00e9gatifs. En Python, on peut les \u00e9crire sans limite de taille. Par exemple, <code>42</code> est un entier.</li> <li>Flottants : Les flottants sont des nombres \u00e0 virgule. En Python, on utilise le point pour s\u00e9parer la partie enti\u00e8re de la partie d\u00e9cimale. Par exemple, <code>3.14</code> est un flottant.</li> <li>Chaines de caract\u00e8res : Les chaines de caract\u00e8res sont des suites de caract\u00e8res. En Python, on les \u00e9crit entre guillemets simples ou doubles. Par exemple, <code>\"Hello, World!\"</code> est une chaine de caract\u00e8res.</li> </ul> <p>En plus de ces types qu'on a d\u00e9j\u00e0 vus, il y a d'autres types de base en Python :</p>"},{"location":"Premiere/RepresentationDonnes/Exercices/#booleens","title":"Bool\u00e9ens","text":"<p>Les bool\u00e9ens sont des valeurs qui peuvent \u00eatre soit <code>True</code> (vrai) soit <code>False</code> (faux). En Python, on utilise les mots-cl\u00e9s <code>True</code> et <code>False</code> pour repr\u00e9senter ces valeurs. Par exemple, <code>True</code> est un bool\u00e9en.</p> <p>On peut faire des op\u00e9rations logiques sur les bool\u00e9ens.</p>"},{"location":"Premiere/RepresentationDonnes/Exercices/#operations-logiques","title":"Op\u00e9rations logiques","text":"<ul> <li><code>and</code> : L'op\u00e9ration <code>and</code> est un ET logique. Elle renvoie <code>True</code> si les deux op\u00e9randes sont <code>True</code>, sinon elle renvoie <code>False</code>.</li> <li><code>or</code> : L'op\u00e9ration <code>or</code> est un OU logique. Elle renvoie <code>True</code> si au moins un des op\u00e9randes est <code>True</code>, sinon elle renvoie <code>False</code>.</li> <li><code>not</code> : L'op\u00e9ration <code>not</code> est un NON logique. Elle renvoie <code>True</code> si l'op\u00e9rande est <code>False</code>, et <code>False</code> si l'op\u00e9rande est <code>True</code>.- xor : L'op\u00e9ration <code>xor</code> est un OU exclusif. Elle renvoie <code>True</code> si exactement un des op\u00e9randes est <code>True</code>, sinon elle renvoie <code>False</code>.</li> </ul> <p>Pour r\u00e9sumer les op\u00e9rations logiques on va utiliser cette table de v\u00e9rit\u00e9 :</p> <code>a</code> <code>b</code> <code>a and b</code> <code>a or b</code> <code>not a</code> <code>a xor b</code> <code>True</code> <code>True</code> <code>True</code> <code>True</code> <code>False</code> <code>False</code> <code>True</code> <code>False</code> <code>False</code> <code>True</code> <code>False</code> <code>True</code> <code>False</code> <code>True</code> <code>False</code> <code>True</code> <code>True</code> <code>True</code> <code>False</code> <code>False</code> <code>False</code> <code>False</code> <code>True</code> <code>False</code> <p>On peut aussi utiliser des parenth\u00e8ses pour changer l'ordre d'\u00e9valuation des op\u00e9rations logiques. Exemple : <code>(a and b) or c</code>, avec <code>a = True</code>, <code>b = False</code> et <code>c = True</code> <code>(True and False) or True</code> est \u00e9quivalent \u00e0 <code>False or True</code> qui est \u00e9quivalent \u00e0 <code>True</code>.</p> <p>On peut aussi faire des comparaisons entre des valeurs pour obtenir des bool\u00e9ens.</p>"},{"location":"Premiere/RepresentationDonnes/Exercices/#exercice-1","title":"Exercice 1","text":"<p>Evaluer les expressions suivantes avec a = True, b = False et c = True.</p> <ol> <li><code>a and b</code></li> <li><code>a or b</code></li> <li><code>not a or c</code></li> <li><code>(a and b) xor (c or a)</code></li> </ol>"},{"location":"Premiere/RepresentationDonnes/Exercices/#comparaisons","title":"Comparaisons","text":"<p>On peut aussi comparer des valeurs pour obtenir des bool\u00e9ens. Pour cela on peut utiliser les op\u00e9rateurs de comparaison suivants :</p> <ul> <li><code>==</code> : L'op\u00e9rateur <code>==</code> permet de tester l'\u00e9galit\u00e9 entre deux valeurs. Il renvoie <code>True</code> si les deux valeurs sont \u00e9gales, sinon il renvoie <code>False</code>.</li> <li><code>!=</code> : L'op\u00e9rateur <code>!=</code> permet de tester la diff\u00e9rence entre deux valeurs. Il renvoie <code>True</code> si les deux valeurs sont diff\u00e9rentes, sinon il renvoie <code>False</code>.</li> <li><code>&lt;</code> : L'op\u00e9rateur <code>&lt;</code> permet de tester si une valeur est inf\u00e9rieure \u00e0 une autre. Il renvoie <code>True</code> si la premi\u00e8re valeur est inf\u00e9rieure \u00e0 la deuxi\u00e8me, sinon il renvoie <code>False</code>.</li> <li><code>&lt;=</code> : L'op\u00e9rateur <code>&lt;=</code> permet de tester si une valeur est inf\u00e9rieure ou \u00e9gale \u00e0 une autre. Il renvoie <code>True</code> si la premi\u00e8re valeur est inf\u00e9rieure ou \u00e9gale \u00e0 la deuxi\u00e8me, sinon il renvoie <code>False</code>.</li> <li><code>&gt;</code> : L'op\u00e9rateur <code>&gt;</code> permet de tester si une valeur est sup\u00e9rieure \u00e0 une autre. Il renvoie <code>True</code> si la premi\u00e8re valeur est sup\u00e9rieure \u00e0 la deuxi\u00e8me, sinon il renvoie <code>False</code>.</li> <li><code>&gt;=</code> : L'op\u00e9rateur <code>&gt;=</code> permet de tester si une valeur est sup\u00e9rieure ou \u00e9gale \u00e0 une autre. Il renvoie <code>True</code> si la premi\u00e8re valeur est sup\u00e9rieure ou \u00e9gale \u00e0 la deuxi\u00e8me, sinon il renvoie <code>False</code>.</li> </ul>"},{"location":"Premiere/RepresentationDonnes/Exercices/#exercice-2","title":"Exercice 2","text":"<p>Evaluer les expressions suivantes avec a = 42, b = 3.14 et c = 40.</p> <ol> <li><code>a == b</code></li> <li><code>a != c</code></li> <li><code>(a &lt; c) and (b &gt; c)</code></li> <li><code>(a - b) &gt;= c</code></li> <li><code>(a &lt; 50) xor (c &gt; 20)</code></li> </ol>"},{"location":"Premiere/RepresentationDonnes/Exercices/#none","title":"None","text":"<p><code>None</code> est une valeur sp\u00e9ciale en Python qui repr\u00e9sente l'absence de valeur. On l'utilise pour initialiser des variables qui n'ont pas encore de valeur. Par exemple, <code>None</code> est une valeur.</p>"},{"location":"Premiere/TypesConstruits/Cours/","title":"Types construits en Python","text":""},{"location":"Premiere/TypesConstruits/Cours/#1-les-tuples","title":"1. Les tuples","text":""},{"location":"Premiere/TypesConstruits/Cours/#quest-ce-quun-tuple","title":"Qu'est-ce qu'un tuple ?","text":"<p>Un tuple est une structure de donn\u00e9es qui permet de stocker plusieurs \u00e9l\u00e9ments. C'est une liste immuable, c'est \u00e0 dire qu'on ne peut pas modifier les \u00e9l\u00e9ments du tuple une fois qu'il est cr\u00e9\u00e9.</p> <p>Les tuples sont d\u00e9clar\u00e9s avec des parenth\u00e8ses <code>()</code> et les \u00e9l\u00e9ments sont s\u00e9par\u00e9s par des virgules <code>,</code>.</p> <pre><code>\ntuple = (1, 2, 3, 4, 5)\n</code></pre>"},{"location":"Premiere/TypesConstruits/Cours/#comment-acceder-a-un-element-du-tuple","title":"Comment acc\u00e9der \u00e0 un \u00e9l\u00e9ment du tuple ?","text":"<p>Pour acc\u00e9der \u00e0 un \u00e9l\u00e9ment du tuple, on utilise son indice entre crochets <code>[]</code>.</p> <pre><code>\ntuple = (1, 2, 3, 4, 5)\n\nprint(tuple[0]) # Affiche 1\nprint(tuple[2]) # Affiche 3\n</code></pre> <p>Comme on ne peut pas modifier les \u00e9l\u00e9ments du tuple, on pr\u00e9f\u00e8rera souvent utiliser des listes :</p> <p>La plupart des m\u00e9thodes des listes sont aussi utilisables sur les tuples.</p>"},{"location":"Premiere/TypesConstruits/Cours/#2-les-listes","title":"2. Les listes","text":""},{"location":"Premiere/TypesConstruits/Cours/#quest-ce-quune-liste","title":"Qu'est-ce qu'une liste ?","text":"<p>Une liste est une structure de donn\u00e9es index\u00e9e qui permet de stocker plusieurs \u00e9l\u00e9ments. On peut stocker n'importe quel type d'\u00e9l\u00e9ment comme des nombres, des chaines de caract\u00e8res, des bool\u00e9ens, etc...</p> <p>Les listes peuvent aussi \u00eatre appel\u00e9es tableaux.</p> <p>Elle est index\u00e9e, c'est \u00e0 dire que chaque \u00e9l\u00e9ment de la liste poss\u00e8de un indice qui permet de le retrouver. Par exemple, dans la liste <code>['a', 'b', 'c']</code>, l'\u00e9l\u00e9ment <code>'a'</code> poss\u00e8de l'indice <code>0</code>, l'\u00e9l\u00e9ment <code>'b'</code> poss\u00e8de l'indice <code>1</code> et l'\u00e9l\u00e9ment <code>'c'</code> poss\u00e8de l'indice <code>2</code>.</p> <p>On peut modifier les \u00e9l\u00e9ments de la liste.</p> <p>Les chaines de caract\u00e8res sont aussi des listes compos\u00e9es de caract\u00e8res. Par exemple, la chaine <code>'nsi'</code> est une liste compos\u00e9e des caract\u00e8res <code>'n'</code>, <code>'s'</code> et <code>'i'</code>.</p>"},{"location":"Premiere/TypesConstruits/Cours/#comment-creer-une-liste","title":"Comment cr\u00e9er une liste ?","text":"<p>Pour cr\u00e9er une liste, on utilise des crochets <code>[]</code> et on s\u00e9pare les \u00e9l\u00e9ments par des virgules <code>,</code>.</p> <pre><code>liste = [1, 2, 3, 4, 5]\n</code></pre>"},{"location":"Premiere/TypesConstruits/Cours/#comment-acceder-a-un-element-de-la-liste","title":"Comment acc\u00e9der \u00e0 un \u00e9l\u00e9ment de la liste ?","text":"<p>Pour acc\u00e9der \u00e0 un \u00e9l\u00e9ment de la liste, on utilise son indice entre crochets <code>[]</code>.</p> <pre><code>liste = [1, 2, 3, 4, 5]\n\nprint(liste[0]) # Affiche 1\nprint(liste[2]) # Affiche 3\nprint(liste[4]) # Affiche 5\n</code></pre> <p>Attention ! Les indices commencent \u00e0 0. L'indice <code>0</code> correspond au premier \u00e9l\u00e9ment de la liste, l'indice <code>1</code> correspond au deuxi\u00e8me \u00e9l\u00e9ment de la liste, etc...</p> <p>On peut aussi utiliser des indices n\u00e9gatifs. Dans ce cas, on commence \u00e0 compter \u00e0 partir de la fin de la liste. L'indice <code>-1</code> correspond au dernier \u00e9l\u00e9ment de la liste, l'indice <code>-2</code> correspond \u00e0 l'avant dernier \u00e9l\u00e9ment de la liste, etc...</p> <p>Acc\u00e9der aux \u00e9l\u00e9ments permet aussi de les modifier.</p>"},{"location":"Premiere/TypesConstruits/Cours/#comment-parcourir-une-liste","title":"Comment parcourir une liste ?","text":"<p>Pour parcourir une liste, on peut utiliser une boucle <code>for</code> avec une variable qui prendra successivement les valeurs de chaque \u00e9l\u00e9ment de la liste.</p> <pre><code>liste = [1, 2, 3, 4, 5]\n\nfor element in liste:\n    print(element)\n</code></pre> <p>On peut aussi la parcourir par indice en utilisant une boucle <code>for</code> et la fonction <code>range</code>. La fonction <code>len</code> permet de connaitre la taille de la liste.</p> <pre><code>liste = [1, 2, 3, 4, 5]\n\nfor i in range(len(liste)):\n    print(liste[i])\n</code></pre>"},{"location":"Premiere/TypesConstruits/Cours/#comment-ajouter-un-element-a-une-liste","title":"Comment ajouter un \u00e9l\u00e9ment \u00e0 une liste ?","text":"<p>Pour ajouter un \u00e9l\u00e9ment \u00e0 une liste, on utilise la m\u00e9thode <code>append</code>.</p> <pre><code>\nliste = [1, 2, 3, 4, 5]\n\nliste.append(6)\n\nprint(liste) # Affiche [1, 2, 3, 4, 5, 6]\n</code></pre>"},{"location":"Premiere/TypesConstruits/Cours/#methodes-utiles-aux-listes","title":"M\u00e9thodes utiles aux listes","text":"<ul> <li><code>append(element)</code> : Ajoute un \u00e9l\u00e9ment \u00e0 la fin de la liste</li> <li><code>insert(indice, element)</code> : Ajoute un \u00e9l\u00e9ment \u00e0 un indice donn\u00e9</li> <li><code>remove(element)</code> : Supprime un \u00e9l\u00e9ment de la liste</li> <li><code>pop(indice)</code> : Supprime un \u00e9l\u00e9ment de la liste \u00e0 un indice donn\u00e9 et le renvoie</li> <li><code>index(element)</code> : Retourne l'indice d'un \u00e9l\u00e9ment</li> <li><code>len(liste)</code> : Retourne la taille de la liste</li> </ul>"},{"location":"Premiere/TypesConstruits/Cours/#3-listes-a-plusieurs-dimensions","title":"3. Listes \u00e0 plusieurs dimensions","text":"<p>On peut cr\u00e9er des listes \u00e0 plusieurs dimensions. Comme des matrices par exemple. Cela correspond \u00e0 des listes de listes.</p> <p>Pour d\u00e9clarer une liste \u00e0 plusieurs dimensions, on utilise des crochets <code>[]</code> imbriqu\u00e9s.</p> <pre><code>matrice = [[1, 2, 3],\n           [4, 5, 6],\n           [7, 8, 9]]\n\nmots = [\"nsi\", \"premiere\", \"terminale\"]\n# Cela correspond \u00e0\nmots = [[\"n\", \"s\", \"i\"],\n        [\"p\", \"r\", \"e\", \"m\", \"i\", \"e\", \"r\", \"e\"],\n        [\"t\", \"e\", \"r\", \"m\", \"i\", \"n\", \"a\", \"l\", \"e\"]]\n</code></pre> <p>Pour acc\u00e9der \u00e0 un \u00e9l\u00e9ment de la liste, on utilise plusieurs indices.</p> <pre><code>\nmatrice = [[1, 2, 3],\n           [4, 5, 6],\n           [7, 8, 9]]\n\nprint(matrice[0][0]) # Affiche 1\nprint(matrice[1][2]) # Affiche 6\nprint(matrice[2][1]) # Affiche 8\n</code></pre> <p>On peut aussi parcourir une liste \u00e0 plusieurs dimensions avec plusieurs boucles <code>for</code>.</p> <pre><code>matrice = [[1, 2, 3],\n           [4, 5, 6],\n           [7, 8, 9]]\n\nfor ligne in matrice:\n    for element in ligne:\n        print(element)\n\n# Cela correspond \u00e0 \n\nfor i in range(len(matrice)):\n    for j in range(len(matrice[i])):\n        print(matrice[i][j])\n</code></pre> <p>Il faut bien penser qu'on parcourt d'abord les lignes puis les \u00e9l\u00e9ments de chaque ligne. C'est la m\u00eame chose pour les indices, on indique d'abord l'indice de la ligne puis l'indice de l'\u00e9l\u00e9ment dans la ligne.</p> <p>On peut utiliser toutes les m\u00e9thodes des listes sur les listes \u00e0 plusieurs dimensions.</p>"},{"location":"Premiere/TypesConstruits/Cours/#4-listes-en-comprehension","title":"4. Listes en compr\u00e9hension","text":"<p>On peut cr\u00e9er des listes en compr\u00e9hension. Cela permet de cr\u00e9er une liste en une seule ligne.</p> <pre><code>\nliste = [i for i in range(10)]\n# Cela cr\u00e9\u00e9 une liste avec les nombres de 0 \u00e0 9\n\nprint(liste) # Affiche [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n</code></pre> <p>On peut aussi ajouter une condition pour filtrer les \u00e9l\u00e9ments de la liste.</p> <pre><code>\nliste = [i for i in range(10) if i % 2 == 0]\n\nprint(liste) # Affiche [0, 2, 4, 6, 8]\n</code></pre> <p>On peut aussi cr\u00e9er des listes \u00e0 plusieurs dimensions.</p> <pre><code>\nmatrice = [[i + j for i in range(4)] for j in range(4)]\n\nprint(matrice) # Affiche : \n# [[0, 1, 2, 3],\n#  [1, 2, 3, 4],\n#  [2, 3, 4, 5],\n#  [3, 4, 5, 6]]\n</code></pre>"},{"location":"Premiere/TypesConstruits/Cours/#5-exercices","title":"5. Exercices","text":""},{"location":"Premiere/TypesConstruits/Exercices/","title":"Exercices","text":"<p><code>Fluffou</code> le petit monstre viens retrouver ses amis <code>Wabadou</code>, <code>Gobu</code> et <code>Monstouchou</code> pour jouer avec eux. Mais il ne sait pas o\u00f9 ils sont. Aidez le \u00e0 les retrouver en utilisant les listes.</p>"},{"location":"Premiere/TypesConstruits/Exercices/#exercice-1","title":"Exercice 1","text":"<p><code>Fluffou</code> cherche l'adresse de ses amis. Il sais que leurs adresses sont dans cette liste : \u00e0 la premi\u00e8re, quatri\u00e8me et derni\u00e8re position. Compl\u00e9tez les m\u00e9thodes suivantes pour trouver les adresses.</p> <ol> <li>Compl\u00e9tez <code>premierElement</code> pour afficher le premier \u00e9l\u00e9ment de la liste.</li> <li>Compl\u00e9tez <code>quatriemeElement</code> pour afficher le quatri\u00e8me \u00e9l\u00e9ment de la liste.</li> <li>Compl\u00e9tez <code>dernierElement</code> pour afficher le dernier \u00e9l\u00e9ment de la liste.</li> </ol> <p>(Exercice testable)</p> ### Lancer assert(premierElement([1, 2, 3]) == 1, \"Tu as trouv\u00c3\u00a9 l'adresse de Wabadou \u00c3\u00a0 la premi\u00c3\u00a8re position !\")bksl-nlassert(quatriemeElement([1, 2, 3, 4, 5]) == 4, \"Tu as trouv\u00c3\u00a9 l'adresse de Gobu \u00c3\u00a0 la quatri\u00c3\u00a8me position !\")bksl-nlassert(dernierElement([1, 2, 3]) == 3, \"Tu as trouv\u00c3\u00a9 l'adresse de Monstouchou \u00c3\u00a0 la derni\u00c3\u00a8re position !\")bksl-nlprint(\"Bravo, tu as trouv\u00c3\u00a9 toutes les adresses !\")bksl-nl Valider \u221e/\u221e T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>rue = [24, 5, 2, 4, 3, 1, 8, 9, 7, 6, 10, 78, 45, 12, 34, 56, 23]bksl-nlbksl-nldef premierElement(tab):bksl-nl    ...bksl-nlbksl-nldef quatriemeElement(tab):bksl-nl    ...bksl-nlbksl-nldef dernierElement(tab):bksl-nl    ...bksl-nlbksl-nl</p>"},{"location":"Premiere/TypesConstruits/Exercices/#exercice-2","title":"Exercice 2","text":"<p>Maintenant qu'il a toutes les adresses, <code>Fluffou</code> veut \u00e9crire une liste avec toutes les adresses et les afficher.</p> <ol> <li>Cr\u00e9ez une liste contenant les nombres <code>24</code>, <code>3</code>, <code>23</code> et <code>14</code>.</li> <li>Affichez tous les \u00e9l\u00e9ments de la liste en utilisant une boucle.</li> </ol> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>#--- HDR ---#bksl-nl#--- HDR ---#bksl-nlbksl-nladresses = ...bksl-nl            bksl-nldef afficher(liste):bksl-nl    \"\"\" Affiche les \u00c3\u00a9l\u00c3\u00a9ments de la liste \"\"\"bksl-nlbksl-nl    ...bksl-nlbksl-nlafficher(adresses)bksl-nl</p>"},{"location":"Premiere/TypesConstruits/Exercices/#exercice-3","title":"Exercice 3","text":"<p>Oh ! Une erreur s'est gliss\u00e9e dans le tableau. Le nombre <code>14</code> n'est pas une bonne adresse. Retirez le du tableau.</p> <ol> <li>Retirez le nombre <code>14</code> de la liste nomm\u00e9e <code>adresses</code>.</li> </ol> ### Lancer if(len(adresses) == 0):bksl-nl    print(\"Attention, tu as retir\u00c3\u00a9 toutes les adresses !\")bksl-nlbksl-nlassert(adresses == [24, 3, 23], \"Tu as retir\u00c3\u00a9 la mauvaise adresse !\")bksl-nlassert(len(adresses) == 3, \"Tu as retir\u00c3\u00a9 la mauvaise adresse !\")bksl-nlassert(adresses.count(14) == 0, \"Tu as retir\u00c3\u00a9 la mauvaise adresse !\")bksl-nl Valider \u221e/\u221e T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>#--- HDR ---#bksl-nladresses = [14, 24, 3, 23]bksl-nl#--- HDR ---#bksl-nlbksl-nlbksl-nl</p>"},{"location":"Premiere/TypesConstruits/Exercices/#exercice-4","title":"Exercice 4","text":"<p>On veut maintenant ajouter l'adresse de <code>Boumi</code> dans le tableau. On sait que son adresse est <code>12</code>.</p> <ol> <li>Ajoutez 12 \u00e0 la liste <code>adresses</code>.</li> </ol> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p></p>"},{"location":"Premiere/TypesConstruits/Exercices/#exercice-5","title":"Exercice 5","text":"<p>Mince, on s'est tromp\u00e9 d'adresse pour <code>Boumi</code> et on ne connais pas son adresse. On d\u00e9cide de frapper \u00e0 toutes les portes pour trouver <code>Boumi</code>. Pour cela, on va parcourir la liste <code>portes</code> \u00e9l\u00e9ments par \u00e9l\u00e9ments jusqu'\u00e0 trouver <code>Boumi</code>. On pourra alors renvoyer le num\u00e9ro de l'indice dans la liste \u00e0 laquelle on l'a trouv\u00e9.</p> <ol> <li>Compl\u00e9tez la fonction <code>trouverBoumi</code> pour qu'elle renvoie l'indice de la porte \u00e0 laquelle on trouve <code>Boumi</code>.</li> </ol> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>#--- HDR ---#bksl-nlbksl-nl#--- HDR ---#bksl-nlbksl-nlportes = [\"George\", \"Aldo\", \"Bobby\", \"Joe\", \"Boomie\", \"Karl\", \"Moe\", \"Ringo\", \"Paul\", \"John\"]bksl-nlbksl-nl</p>"},{"location":"Seconde/","title":"Cours de SNT","text":""},{"location":"Seconde/#cours","title":"Cours","text":""},{"location":"Seconde/#1-rentree","title":"1. Rentr\u00e9e","text":"<p>Cours : Web Pdf</p>"},{"location":"Seconde/#2-histoire-de-linformatique","title":"2. Histoire de l'informatique","text":"<p>Cours : Web Pdf</p>"},{"location":"Seconde/#3-internet","title":"3. Internet","text":"<p>Activit\u00e9 : Web</p> <p>Cours : Web Pdf</p> <p>Exercices : Web Pdf</p>"},{"location":"Seconde/#4-langage-python","title":"4. Langage Python","text":"<p>Cours : Web Pdf</p>"},{"location":"Seconde/#5-donnees-structurees","title":"5. Donn\u00e9es structur\u00e9es","text":"<p>Cours : Web Pdf</p>"},{"location":"Seconde/#6-photographie-numerique","title":"6. Photographie num\u00e9rique","text":"<p>Cours : Web Pdf</p> <p>Exercice : Web Pdf</p>"},{"location":"Seconde/#7-projet-1","title":"7. Projet 1","text":"<p>// TODO</p>"},{"location":"Seconde/#8-le-web","title":"8. Le Web","text":"<p>Cours : Web Pdf</p> <p>Exercice : Web Pdf</p>"},{"location":"Seconde/#9-informatique-embarquee-et-objets-connectes","title":"9. Informatique embarqu\u00e9e et objets connect\u00e9s","text":"<p>Cours : Web Pdf</p> <p>Activit\u00e9 : Web Pdf</p>"},{"location":"Seconde/#10-projet-2","title":"10. Projet 2","text":"<p>// TODO</p>"},{"location":"Seconde/#11-localisation-cartographie-et-mobilite","title":"11. Localisation, cartographie et mobilit\u00e9","text":"<p>Activit\u00e9 : Web Pdf</p> <p>Cours : Web Pdf</p>"},{"location":"Seconde/#12-les-reseaux-sociaux","title":"12. Les r\u00e9seaux sociaux","text":"<p>// TODO Cours : Web Pdf</p>"},{"location":"Seconde/DonneesStructurees/Cours/","title":"Donn\u00e9es structur\u00e9es","text":""},{"location":"Seconde/DonneesStructurees/Cours/#historique","title":"Historique","text":""},{"location":"Seconde/DonneesStructurees/Cours/#cartes-perforees","title":"Cartes perfor\u00e9es","text":"<p>Un des premiers exemple de donn\u00e9es structur\u00e9es \u00e9tait les cartes perfor\u00e9es. D\u00e9j\u00e0 au 18\u00e8me si\u00e8cle, des cartes perfor\u00e9es \u00e9taient utilis\u00e9es pour contr\u00f4ler des m\u00e9tiers \u00e0 tisser. Les trous dans les cartes permettaient de d\u00e9terminer le motif \u00e0 tisser.</p> <p></p>"},{"location":"Seconde/DonneesStructurees/Cours/#bases-de-donnees","title":"Bases de donn\u00e9es","text":"<p>Dans les ann\u00e9es 60, les bases de donn\u00e9es ont commenc\u00e9 \u00e0 \u00eatre utilis\u00e9es. Les donn\u00e9es \u00e9taient structur\u00e9es en tables, avec des lignes et des colonnes. Les bases de donn\u00e9es relationnelles ont \u00e9t\u00e9 invent\u00e9es par Edgar Codd en 1970.</p> <p></p>"},{"location":"Seconde/DonneesStructurees/Cours/#xml","title":"XML","text":"<p>Dans les ann\u00e9es 90, le XML a \u00e9t\u00e9 invent\u00e9. C'est un format de donn\u00e9es structur\u00e9es qui permet de stocker des donn\u00e9es de mani\u00e8re hi\u00e9rarchique.</p> <p>Les donn\u00e9es sont stock\u00e9es sous forme de balises, qui peuvent contenir des attributs et des valeurs.</p> <pre><code>&lt;person&gt;\n    &lt;name&gt;John Doe&lt;/name&gt;\n    &lt;age&gt;42&lt;/age&gt;\n&lt;/person&gt;\n</code></pre>"},{"location":"Seconde/DonneesStructurees/Cours/#json","title":"JSON","text":"<p>Le JSON est un autre format de donn\u00e9es structur\u00e9es, invent\u00e9 en 2001. Il est plus l\u00e9ger que le XML et plus facile \u00e0 lire pour les humains.</p> <pre><code>{\n    \"name\": \"John Doe\",\n    \"age\": 42\n}\n</code></pre>"},{"location":"Seconde/DonneesStructurees/Cours/#un-exemple-de-donnees-structurees-le-csv","title":"Un exemple de donn\u00e9es structur\u00e9es : Le CSV","text":"<p>Le CSV (Comma-Separated Values) est un format de donn\u00e9es structur\u00e9es tr\u00e8s simple. Les donn\u00e9es sont stock\u00e9es sous forme de lignes, avec des valeurs s\u00e9par\u00e9es par des virgules.</p> <pre><code>name,age\nJohn Doe,42\nJane Smith,35\n</code></pre> <p>On peut aussi utiliser d'autres s\u00e9parateurs, comme le point-virgule ou la tabulation.</p>"},{"location":"Seconde/DonneesStructurees/Cours/#question-1","title":"Question 1","text":"<p>Pourquoi en fran\u00e7ais, on peut pr\u00e9f\u00e9rer utiliser le point-virgule comme s\u00e9parateur plut\u00f4t que la virgule ?</p> <p>.......................................................</p>"},{"location":"Seconde/DonneesStructurees/Cours/#manipuler-un-dataset","title":"Manipuler un dataset","text":"<p>Le site <code>https://www.data.gouv.fr/fr/datasets/</code> propose de nombreux datasets en open data. On peut les t\u00e9l\u00e9charger et les manipuler avec un tableur ou un logiciel de programmation.</p>"},{"location":"Seconde/DonneesStructurees/Cours/#exercice-1-manipuler-un-dataset-avec-un-tableur","title":"Exercice 1 : Manipuler un dataset avec un tableur","text":"<p>On va aller sur le site data.gouv.fr pour t\u00e9l\u00e9charger un fichier CSV contenant les pr\u00e9noms donn\u00e9s en France depuis 1900.</p> <ol> <li>T\u00e9l\u00e9chargez le fichier <code>nat2022.csv</code> et ouvrez-le avec un tableur. (LibreOffice Calc est install\u00e9 sur les ordinateurs du lyc\u00e9e).</li> <li>Combien de pr\u00e9noms diff\u00e9rents sont pr\u00e9sents dans ce fichier ?</li> <li>Quel est le pr\u00e9nom le plus donn\u00e9 en 2019 ?</li> </ol> <p>En informatique, on commence \u00e0 compter \u00e0 partir de 0. Donc les colonnes sont num\u00e9rot\u00e9es de 0 \u00e0 3 ici.</p> <ol> <li>Compl\u00e9tez le tableau suivant :</li> </ol> Indice de la colonne 0 1 2 3 Nom de la colonne ................ ................ ................ ................"},{"location":"Seconde/DonneesStructurees/Cours/#exercice-2-manipuler-un-dataset-avec-python","title":"Exercice 2 : Manipuler un dataset avec Python","text":"<p>On va utiliser le langage de programmation Python pour manipuler le m\u00eame dataset.</p> <ol> <li>T\u00e9l\u00e9chargez le fichier nat2022.csv et placez-le dans le m\u00eame dossier que votre script Python.</li> <li>R\u00e9cup\u00e9rer le fichier Exercice2.py et ex\u00e9cutez-le avec Python. (Attention l'option 4 ne fonctionne pas pour l'instant, on va la corriger ensemble).</li> <li>Ligne <code>11</code> et <code>34</code>, supprimez les <code>\"\"\"</code> pour d\u00e9-commenter les lignes.</li> <li>Compl\u00e9tez le contenu de la fonction \"plus donne\" qui affichera le pr\u00e9nom le plus port\u00e9 en France en 2022 (l'ann\u00e9e du fichier).</li> </ol> <p>Aides : Il faut compl\u00e9ter les lignes 17, 20, 23, 26 et 28. Aidez vous du tableau que vous avez rempli \u00e0 l'exercice 1. Pour acc\u00e9der \u00e0 un \u00e9l\u00e9ment d'une liste, on utilise la syntaxe <code>liste[indice]</code>. Donc pour acc\u00e9der au 2\u00e8me \u00e9l\u00e9ment de la liste <code>liste</code>, on \u00e9crit <code>liste[1]</code>.</p>"},{"location":"Seconde/Internet/Activite/","title":"Activite de d\u00e9couverte : Internet","text":""},{"location":"Seconde/Internet/Activite/#objectif","title":"Objectif","text":"<p>D\u00e9couvrir le fonctionnement d'Internet et les principaux concepts associ\u00e9s.</p>"},{"location":"Seconde/Internet/Activite/#1-etat-de-votre-connaissance","title":"1. Etat de votre connaissance","text":"<p>Avant de commencer on va voir ce que vous savez d\u00e9j\u00e0 sur le sujet. Rassemblez vous par groupe de 4 et prenez une feuilles, ensemble, concertez vous pour rassemblez tout ce que vous connaissez du fonctionnement d'Internet et en faire un sch\u00e9ma. On se laisse 40 minutes avant de faire une mise en commun.</p>"},{"location":"Seconde/Internet/Activite/#2-mise-en-commun","title":"2. Mise en commun","text":"<p>On va mettre en commun et expliquer les notions que vous avez rassembl\u00e9. On va essayer de les regrouper par th\u00e8me et de les expliquer \u00e0 l'ensemble de la classe.</p>"},{"location":"Seconde/Internet/Activite/#3-frise-chronologique","title":"3. Frise chronologique","text":"<p>On va maintenant voir en classe les diff\u00e9rentes \u00e9tapes du d\u00e9veloppement et de l'\u00e9volution d'internet. On va essayer de les placer sur une frise chronologique.</p> <p></p>"},{"location":"Seconde/Internet/Activite/#4-cours","title":"4. Cours","text":"<p>Avec tout ce qu'on a vu, on peut maintenant poser les bases du fonctionnement d'Internet et quelques d\u00e9finitions.</p> <p>Cours</p>"},{"location":"Seconde/Internet/Cours/","title":"Internet et r\u00e9seaux","text":""},{"location":"Seconde/Internet/Cours/#1-point-historique","title":"1. Point historique","text":"<p>L'histoire d'Internet remonte aux ann\u00e9es 1960 avec le projet ARPANET. Initi\u00e9 par le d\u00e9partement am\u00e9ricain de la D\u00e9fense, ARPANET avait pour objectif de cr\u00e9er un r\u00e9seau de communication r\u00e9silient, capable de survivre \u00e0 une attaque nucl\u00e9aire. Il s'agissait d'une \u00e9tape fondamentale dans le d\u00e9veloppement d'Internet tel que nous le connaissons aujourd'hui.</p> <p>Au fil du temps, Internet s'est \u00e9tendu et est devenu un r\u00e9seau mondial interconnect\u00e9. Les ann\u00e9es 1990 ont marqu\u00e9 une \u00e9tape d\u00e9cisive avec l'av\u00e8nement de l'Internet grand public, permettant \u00e0 un nombre croissant de personnes d'acc\u00e9der \u00e0 des services en ligne, \u00e0 des informations et de communiquer par le biais de courriers \u00e9lectroniques.</p>"},{"location":"Seconde/Internet/Cours/#2-principes-de-base","title":"2. Principes de base","text":"<p>Mais comment fonctionne Internet ?</p> <p>Internet est un vaste r\u00e9seau compos\u00e9 de nombreux ordinateurs, serveurs et autres dispositifs connect\u00e9s. Son fonctionnement repose sur des protocoles et des normes qui facilitent l'\u00e9change d'informations et la transmission de donn\u00e9es.</p> <p>Le protocole TCP/IP (Transmission Control Protocol/Internet Protocol) est le fondement d'Internet. Il d\u00e9finit les r\u00e8gles pour la transmission des donn\u00e9es entre les ordinateurs connect\u00e9s au r\u00e9seau. Le protocole TCP garantit la livraison fiable des donn\u00e9es, tandis que le protocole IP s'occupe du routage des paquets de donn\u00e9es \u00e0 travers les diff\u00e9rents r\u00e9seaux.</p>"},{"location":"Seconde/Internet/Cours/#3-machines","title":"3. Machines","text":"<p>Sur un r\u00e9seau, on trouve diff\u00e9rents types de machines :</p> <ul> <li>Les Ordinateurs</li> <li>Les Switch (commutateurs en fran\u00e7ais), qui sont des dispositifs qui permettent de connecter plusieurs ordinateurs ensemble.</li> <li>Les Routeurs, qui sont des dispositifs qui permettent de connecter plusieurs r\u00e9seaux entre eux et de diriger les paquets de donn\u00e9es vers leur destination.</li> </ul>"},{"location":"Seconde/Internet/Cours/#4-adresse-ip","title":"4. Adresse IP","text":"<p>Pour identifier les ordinateurs et les dispositifs connect\u00e9s \u00e0 Internet, on utilise des adresses IP (Internet Protocol). Une adresse IP est un num\u00e9ro unique attribu\u00e9 \u00e0 chaque appareil connect\u00e9 au r\u00e9seau. Ces adresses sont de la forme <code>xxx.xxx.xxx.xxx</code>.</p> <p>Elle est \u00e9crite sur 4 groupes de 8 bits, c'est pourquoi chaque groupe est compris entre 0 et 255.</p> <p>Une adresse peut donc ressembler \u00e0 <code>192.168.64.1</code></p>"},{"location":"Seconde/Internet/Cours/#classe-dadresse-ip","title":"Classe d'adresse IP","text":"<p>Ces adresses sont compos\u00e9es de deux parties : l'adresse r\u00e9seau et l'adresse de la machine elle-m\u00eame. Selon le premier groupe de bits, on peut savoir combien de bits sont utilis\u00e9s pour l'adresse r\u00e9seau et combien pour l'adresse de la machine.</p> Classe Premiers nombre Bits pour l'adresse r\u00e9seau Bits pour l'adresse de la machine Nombre d'adresses possibles A &lt; 128 8 24 2^24 = 16 777 216 B 128-191 16 16 2^16 = 65 536 C 192-223 24 8 2^8 = 256 <p>Donc sur une adresse d'exemple <code>172.120.0.1</code>, le <code>172.168</code> est l'adresse r\u00e9seau et le <code>0.1</code> est l'adresse de la machine.</p> <p>Cela permet d'avoir des r\u00e9seaux de diff\u00e9rentes tailles, adapt\u00e9s \u00e0 diff\u00e9rents besoins.</p> <p>Sans routeur, les machines ne peuvent pas communiquer entre elles si elles ne sont pas sur le m\u00eame r\u00e9seau.</p>"},{"location":"Seconde/Internet/Cours/#probleme-des-adresses-ip","title":"Probl\u00e8me des adresses IP","text":"<p>Le nombre d'adresses IP disponibles est limit\u00e9, et avec l'explosion du nombre d'appareils connect\u00e9s \u00e0 Internet, il est devenu n\u00e9cessaire de trouver une solution pour g\u00e9rer la p\u00e9nurie d'adresses IP. Pour r\u00e9soudre ce probl\u00e8me, on a cr\u00e9\u00e9 un nouveau protocole appel\u00e9 IPv6, qui utilise des adresses plus longues (128 bits au lieu de 32 bits) pour augmenter le nombre d'adresses disponibles. Les anciennes adresses sont appel\u00e9es IPv4, et les nouvelles adresses sont appel\u00e9es IPv6. Elle sont de la forme <code>xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx:xxxx</code>. Ces deux protocoles coexistent actuellement sur Internet mais avec le temps, IPv6 devrait remplacer IPv4.</p>"},{"location":"Seconde/Internet/Cours/#5-routage","title":"5. Routage","text":"<p>Le routage est le processus qui permet de diriger les paquets de donn\u00e9es d'une machine \u00e0 une autre \u00e0 travers un r\u00e9seau. Les routeurs sont des dispositifs qui assurent cette fonction en d\u00e9terminant le chemin optimal pour acheminer les donn\u00e9es vers leur destination.</p> <p>Les routeurs utilisent des tables de routage pour prendre des d\u00e9cisions sur la mani\u00e8re de transmettre les paquets de donn\u00e9es. Ces tables contiennent des informations sur les r\u00e9seaux connect\u00e9s et les chemins possibles pour atteindre les diff\u00e9rentes destinations.</p> <p>C'est en quelque sorte une carte du r\u00e9seau, qui permet de savoir par o\u00f9 passer pour atteindre une destination donn\u00e9e.</p> <p>Exemple de table de routage :</p> Destination Passerelle Interface 192.168.1.0/24 192.168.1.1 eth0 10.0.0.0/8 10.0.0.1 eth1 172.16.0.0/12 172.16.0.1 eth2 0.0.0.0/0 192.168.1.254 eth0 <p>Ici, les destinations sont les adresses des machines ou r\u00e9seaux \u00e0 atteindre, la passerelle est l'adresse du routeur \u00e0 utiliser pour atteindre la destination, l'interface est le nom d'un port du routeur</p> <p>Chaque machine a besoin de connaitre l'adresse du routeur pour pouvoir communiquer avec des machines situ\u00e9es sur d'autres r\u00e9seaux. C'est l'adresse de passerelle.</p>"},{"location":"Seconde/Internet/Cours/#6-dns","title":"6. DNS","text":"<p>Les adresses IP sont pratiques pour les machines, mais pas pour les humains. Pour faciliter l'acc\u00e8s aux sites web et aux services en ligne, on utilise des noms de domaine. Un nom de domaine est une adresse textuelle facile \u00e0 retenir qui correspond \u00e0 une adresse IP.</p> <p>Par exemple, on voudrait associer le nom <code>www.google.com</code> \u00e0 l'adresse IP <code>1.2.3.4</code> pour ne pas avoir besoin de se souvenir de l'adresse IP. Pour cela, on utilise un serveur DNS (Domain Name System) qui fait la correspondance entre les noms de domaine et les adresses IP.</p> <p>Dans le monde, il y a des serveurs DNS qui se partagent la t\u00e2che de traduire les noms de domaine en adresses IP. Lorsque vous tapez une adresse dans votre navigateur, celui-ci interroge un serveur DNS pour obtenir l'adresse IP correspondante.</p>"},{"location":"Seconde/Internet/Cours/#7-http-et-https","title":"7. HTTP et HTTPS","text":"<p>HTTP (Hypertext Transfer Protocol) est un protocole de communication utilis\u00e9 pour transf\u00e9rer des donn\u00e9es sur le web. Il permet de r\u00e9cup\u00e9rer des pages web, des images, des vid\u00e9os et d'autres contenus \u00e0 partir de serveurs web.</p> <p>HTTPS (Hypertext Transfer Protocol Secure) est une version s\u00e9curis\u00e9e de HTTP qui utilise le chiffrement pour prot\u00e9ger les donn\u00e9es \u00e9chang\u00e9es entre le navigateur et le serveur web. Il est largement utilis\u00e9 pour les transactions en ligne, les services bancaires et les sites web sensibles.</p>"},{"location":"Seconde/Internet/Exercices/","title":"Exercice Mise en pratique","text":"Cours <p>Comme vous \u00eates de grands informaticiens, les services de la Dragon-Security vous appellent \u00e0 la rescousse pour les aider \u00e0 r\u00e9parer leur r\u00e9seau informatique qui marche tr\u00e8s mal. Vous allez devoir r\u00e9parer chacun des r\u00e9seaux \u00e9tapes par \u00e9tapes.</p> <p>On va ici se servir du logiciel Filius pour simuler des r\u00e9seaux de machines.</p> <p>Tout au long de votre intervention au sein de la Dragon-Security, vous r\u00e9f\u00e9rez-vous au cours accessible ici. Il vous servira de manuel pour r\u00e9gler les diff\u00e9rents soucis que vous rencontrerez. </p>"},{"location":"Seconde/Internet/Exercices/#objectif","title":"Objectif","text":"<ul> <li>Mettre en pratique les notions vues en cours sur les r\u00e9seaux. (Routeurs, Switchs, Adresses IP)</li> <li>D\u00e9couvrir les adresses IP et les protocoles TCP/IP.</li> <li>D\u00e9couvrir les principes du routage des paquets de donn\u00e9es.</li> </ul>"},{"location":"Seconde/Internet/Exercices/#0-installation","title":"0. Installation","text":"<p>Le logiciel Filius est d\u00e9j\u00e0 install\u00e9 sur les ordinateurs du lyc\u00e9e. Si vous souhaitez l'installer chez vous, vous pouvez le t\u00e9l\u00e9charger \u00e0 l'adresse suivante : https://www.lernsoftware-filius.de/Herunterladen</p>"},{"location":"Seconde/Internet/Exercices/#1-prise-en-main","title":"1. Prise en main","text":"<p>Lorsque vous lancez le logiciel, vous arrivez sur une fen\u00eatre qui ressemble \u00e0 ceci :</p> <p></p> <p>Votre tableau de bord est compos\u00e9 de trois zones :</p> <ul> <li>Une zone de travail au centre, o\u00f9 vous allez construire votre r\u00e9seau.</li> <li>Une liste d'appareils \u00e0 gauche, que vous pouvez faire glisser sur la zone de travail pour les ajouter au r\u00e9seau.</li> <li>Une barre d'outils en haut, qui vous permet de cr\u00e9er des c\u00e2bles r\u00e9seau, de d\u00e9marrer/arr\u00eater la simulation, etc.</li> </ul> <p>La simulation se lance en cliquant sur le bouton \"Play\" en haut \u00e0 droite.</p>"},{"location":"Seconde/Internet/Exercices/#11-ouvrir-le-premier-reseau","title":"1.1. Ouvrir le premier r\u00e9seau","text":"<p>Utilisez le bouton Ouvrir pour charger le r\u00e9seau reseau1 qui est t\u00e9l\u00e9chargeable en cliquant sur le lien.</p>"},{"location":"Seconde/Internet/Exercices/#12-lancer-la-simulation","title":"1.2. Lancer la simulation","text":"<p>Une fois que vous voyez ce premier r\u00e9seau, cliquez sur le bouton \"Play\" repr\u00e9sent\u00e9 par une fl\u00e8che verte dans la barre d'outils en haut, pour lancer la simulation</p> <p></p>"},{"location":"Seconde/Internet/Exercices/#13-premieres-observations","title":"1.3. Premi\u00e8res observations","text":"<ul> <li>Combien d'ordinateurs sont pr\u00e9sents dans ce r\u00e9seau ?</li> </ul> <ul> <li>Combien de switchs sont pr\u00e9sents dans ce r\u00e9seau ?</li> </ul> <ul> <li>Quel probl\u00e8me observez-vous ?</li> </ul> <ul> <li>En Cliquant sur les ordinateurs du r\u00e9seau vous pouvez voir comment ils sont configur\u00e9s. Quelle est l'adresse IP de l'ordinateur de Mush ?</li> </ul> <ul> <li>Quelle est l'adresse IP de l'ordinateur de Wyverne ?</li> </ul>"},{"location":"Seconde/Internet/Exercices/#14-test-de-connexion","title":"1.4. Test de connexion","text":"<p>Vous pouvez allumer les ordinateurs du r\u00e9seau en double-cliquant dessus. Allumez l'ordinateur de Mush.</p> <p>Depuis son poste de travail, vous avez acc\u00e8s \u00e0 diff\u00e9rents logiciels. On va ici utiliser le logiciel Ligne de Commande pour tester la connexion entre les ordinateurs. Cela nous ouvre une fen\u00eatre o\u00f9 on peut taper des commandes. On va ici utiliser la commande <code>ping</code> qui permet de tester la connexion entre deux machines.</p> <p>La commande <code>ping</code> s'utilise de la mani\u00e8re suivante :</p> <pre><code>ping cible_du_ping\n</code></pre> <p>Donc pour envoyer un ping \u00e0 l'ordinateur de Wyverne, on va taper la commande suivante :</p> <pre><code>ping 192.168.0.9\n</code></pre> <p></p> <p>Et faire <code>Entr\u00e9e</code> pour lancer la commande.</p> <ul> <li>Quel est le r\u00e9sultat de la commande ? Et que signifie-t-il ?</li> </ul>"},{"location":"Seconde/Internet/Exercices/#15-reparation-du-reseau","title":"1.5. R\u00e9paration du r\u00e9seau","text":"<p>Pour r\u00e9parer le r\u00e9seau, on va devoir rajouter des cables pour connecter les machines. Pour cela on va passer en mode conception. Avant tout, on arr\u00eate la simulation en cours en cliquant sur le bouton \"Stop\" repr\u00e9sent\u00e9 par un carr\u00e9 rouge si elle est en cours.</p> <p>Ensuite, on peut commencer l'\u00e9dition en cliquant sur le bouton repr\u00e9sent\u00e9 par un marteau dans la barre d'outils en haut de l'\u00e9cran.</p> <p>On peut maintenant cliquer sur le bouton cable dans la barre de gauche pour commencer \u00e0 placer des cables. Il faut ensuite cliquer sur les deux machines qu'on veut relier.</p> <p></p> <p>Une fois que c'est fait, on peut relancer la simulation pour voir si la connexion est fonctionnelle.</p>"},{"location":"Seconde/Internet/Exercices/#16-test-de-connexion","title":"1.6. Test de connexion","text":"<p>Testez la connexion entre les deux ordinateurs en utilisant la commande <code>ping</code> comme vu pr\u00e9c\u00e9demment pour voir si vous avez r\u00e9ussi \u00e0 r\u00e9gler le probl\u00e8me entre Mush et Wyverne.</p>"},{"location":"Seconde/Internet/Exercices/#17-interet-des-switchs","title":"1.7. Interet des switchs","text":"<p>A quoi servent les switchs dans un r\u00e9seau ?</p>"},{"location":"Seconde/Internet/Exercices/#2-deuxieme-reseau","title":"2. Deuxi\u00e8me r\u00e9seau","text":"<p>Le deuxi\u00e8me r\u00e9seau est t\u00e9l\u00e9chargeable en cliquant sur le lien suivant : reseau2</p> <p>Dans ce grand r\u00e9seau, il parait que monsieur Nidhogg n'arrive \u00e0 rien envoyer \u00e0 monsieur Jormungand. A vous de trouver et de r\u00e9soudre le soucis !</p>"},{"location":"Seconde/Internet/Exercices/#21-ouvrir-le-deuxieme-reseau","title":"2.1. Ouvrir le deuxi\u00e8me r\u00e9seau","text":"<p>Utilisez le bouton Ouvrir pour charger le r\u00e9seau reseau2 qui est t\u00e9l\u00e9chargeable en cliquant sur le lien.</p>"},{"location":"Seconde/Internet/Exercices/#22-lancer-la-simulation-et-tester-la-connexion-entre-nidhogg-et-jormungand","title":"2.2. Lancer la simulation et tester la connexion entre Nidhogg et Jormungand","text":"<p>Qu'est ce que vous observez ? O\u00f9 semble \u00eatre le probl\u00e8me ?</p> <p>Indice : Cours partie 4</p>"},{"location":"Seconde/Internet/Exercices/#23-reparation-du-reseau","title":"2.3. R\u00e9paration du r\u00e9seau","text":"<p>Fermez la simulation et allez en mode conception pour r\u00e9parer le r\u00e9seau. On va devoir corriger l'adresse IP qui est incorrecte. Pour cela, double-cliquez sur l'ordinateur pour le configurer.</p>"},{"location":"Seconde/Internet/Exercices/#24-test-de-connexion","title":"2.4. Test de connexion","text":"<p>Relancez la simulation et testez la connexion entre Nidhogg et Jormungand en utilisant la commande <code>ping</code> comme vu pr\u00e9c\u00e9demment.</p>"},{"location":"Seconde/Internet/Exercices/#3-troisieme-reseau","title":"3. Troisi\u00e8me r\u00e9seau","text":"<p>Le troisi\u00e8me r\u00e9seau est t\u00e9l\u00e9chargeable en cliquant sur le lien suivant : reseau3</p> <p>Dans ce troisi\u00e8me r\u00e9seau, notre petit groupe qu'on a vu pr\u00e9c\u00e9demment essaye de communiquer avec un autre groupe. Pour cela, les switchs des deux cot\u00e9s ont \u00e9t\u00e9s reli\u00e9s par un routeur qui doit permettre la communication entre les deux groupes. Tout le monde arrive \u00e0 communiquer sauf Nidhogg qui ne parvient \u00e0 rien envoyer aux machines de l'autre r\u00e9seau. A vous de trouver et de r\u00e9soudre le soucis !</p>"},{"location":"Seconde/Internet/Exercices/#31-ouvrir-le-troisieme-reseau","title":"3.1. Ouvrir le troisi\u00e8me r\u00e9seau","text":"<p>Utilisez le bouton Ouvrir pour charger le r\u00e9seau reseau3 qui est t\u00e9l\u00e9chargeable en cliquant sur le lien.</p>"},{"location":"Seconde/Internet/Exercices/#32-verifier-que-le-routeur-est-bien-configure","title":"3.2. Verifier que le routeur est bien configur\u00e9","text":"<p>Ouvrez le routeur en double-cliquant dessus pour voir sa configuration.</p> <p>Observez la table de routage \u00e0 l'int\u00e9rieur du routeur pour tenter de comprendre comment les paquets de donn\u00e9es sont dirig\u00e9s dans ce r\u00e9seau.</p> <p>A quoi correspondent les deux adresse IP configur\u00e9es dans le routeur ?</p>"},{"location":"Seconde/Internet/Exercices/#33-test-de-connexion","title":"3.3. Test de connexion","text":"<p>Pour v\u00e9rifier que le routeur permet bien de faire passer les paquets de donn\u00e9es entre les deux r\u00e9seaux, on va essayer d'envoyer un ping depuis la machine de Lindwurm jusqu'\u00e0 l'adresse de la machine de Wyverne.</p>"},{"location":"Seconde/Internet/Exercices/#33-problemes-du-reseau","title":"3.3. probl\u00e8mes du r\u00e9seau","text":"<p>Maintenant qu'on sait que notre routeur est bien configur\u00e9, on va essayer de comprendre pourquoi Nidhogg n'arrive pas \u00e0 communiquer avec les machines de l'autre r\u00e9seau.</p> <p>Observez les diff\u00e9rentes machines pour tenter de comprendre ce qui ne va pas. Quel est le probl\u00e8me ?</p> <p>Indice : Cours partie 5</p>"},{"location":"Seconde/Internet/Exercices/#34-reparation-du-reseau","title":"3.4. R\u00e9paration du r\u00e9seau","text":"<p>Corrigez le probl\u00e8me et permettez \u00e0 Nidhogg de communiquer avec les machines de l'autre r\u00e9seau. Puis testez la connexion en utilisant la commande <code>ping</code> comme vu pr\u00e9c\u00e9demment.</p>"},{"location":"Seconde/Internet/Exercices/#4-quatrieme-reseau","title":"4. Quatri\u00e8me r\u00e9seau","text":"<p>Le quatri\u00e8me r\u00e9seau est t\u00e9l\u00e9chargeable en cliquant sur le lien suivant : reseau4</p> <p>Maintenant que gr\u00e2ce \u00e0 vous tout fonctionne \u00e0 l'int\u00e9rieur du r\u00e9seau de la Dragon-Security, on va devoir permettre \u00e0 ce r\u00e9seau de communiquer avec le reste du monde. Pour cela, l'entreprise a rajout\u00e9 une machine appel\u00e9 <code>serveur site</code> qui sert \u00e0 h\u00e9berger le site web de l'entreprise.</p>"},{"location":"Seconde/Internet/Exercices/#41-ouvrir-le-quatrieme-reseau","title":"4.1. Ouvrir le quatri\u00e8me r\u00e9seau","text":"<p>Utilisez le bouton Ouvrir pour charger le r\u00e9seau reseau4 qui est t\u00e9l\u00e9chargeable en cliquant sur le lien.</p>"},{"location":"Seconde/Internet/Exercices/#42-acceder-au-site-web","title":"4.2. Acc\u00e9der au site web","text":"<p>Sur la machine de Mush, on a install\u00e9 un navigateur web. En mode simulation, ouvrez le navigateur web et essayez d'acc\u00e9der au site web de l'entreprise en tapant l'adresse ip de la machine <code>serveur site</code>.</p>"},{"location":"Seconde/Internet/Exercices/#43-nom-de-domaine","title":"4.3. Nom de domaine","text":"<p>Pourquoi on doit taper l'adresse IP de la machine pour acc\u00e9der au site web ? Pourquoi ne peut-on pas taper le nom de domaine du site web ? Qu'est ce qui manque dans ce r\u00e9seau pour pouvoir acc\u00e9der au site web par son nom de domaine ?</p> <p>Indice : Cours partie 6</p>"},{"location":"Seconde/Internet/Exercices/#44-ajout-du-serveur-dns","title":"4.4. Ajout du serveur DNS","text":"<p>On peut maintenant relier le serveur DNS au r\u00e9seau pour permettre aux machines de communiquer avec le serveur site par son nom de domaine. Reliez la machine <code>serveur DNS</code> au routeur.</p>"},{"location":"Seconde/Internet/Exercices/#44-ajout-dun-nom-de-domaine","title":"4.4. Ajout d'un nom de domaine","text":"<p>En mode conception, double-cliquez sur le serveur DNS pour le configurer. Ajoutez un nom de domaine pour le serveur site en lui associant l'adresse IP de la machine o\u00f9 se trouve le serveur web.</p> Nom de domaine Adresse IP www.supersite.com l'adresse IP de la machine serveur site <p>N'oubliez pas de cliquer sur le bouton <code>Ajouter</code> pour valider l'ajout du nom de domaine.</p>"},{"location":"Seconde/Internet/Exercices/#45-test-de-connexion","title":"4.5. Test de connexion","text":"<p>Relancez la simulation et testez la connexion en utilisant le nom de domaine du site web pour voir si Mush peut maintenant acc\u00e9der au site <code>www.supersite.com</code>.</p>"},{"location":"Seconde/Internet/Exercices/#46-derniere-correction","title":"4.6. Derni\u00e8re correction","text":"<p>Il reste une derni\u00e8re modification \u00e0 faire dans la configuration de l'ordinateur de Mush pour qu'il puisse acc\u00e9der au site web par son nom de domaine. Quelle modification doit-on faire ?</p> <p>R\u00e9parez le probl\u00e8me et acc\u00e9dez au site web de l'entreprise en utilisant le nom de domaine depuis l'onrdinateur de Mush.</p>"},{"location":"Seconde/Internet/Exercices/#5-conclusion","title":"5. Conclusion","text":"<p>Bravo vous avez r\u00e9ussi \u00e0 r\u00e9parer le r\u00e9seau de la Dragon-Security et \u00e0 mettre en place son site internet. Vous avez pu mettre en pratique :</p> <ul> <li>Les diff\u00e9rentes machines d'un r\u00e9seau (Routeur, Switch, Ordinateur)</li> <li>Les adresses IP</li> <li>Le routage des paquets de donn\u00e9es</li> <li>Les serveurs DNS</li> </ul>"},{"location":"Seconde/Internet/TestX/","title":"Cours","text":"Accueil Cours Exercices Manuel"},{"location":"Seconde/Internet/TestX/#oulala-je-suis-un-test","title":"Oulala je suis un test","text":"<p>avec des trucs not\u00e9s</p> <p>ouuuu c'est joli</p>"},{"location":"Seconde/LangagePython/Cours/","title":"Base de langage Python","text":""},{"location":"Seconde/LangagePython/Cours/#introduction","title":"Introduction","text":"<p>Au cours de nos cours de NSI, nous allons utiliser le langage de programmation python pour illustrer les concepts abord\u00e9s.</p>"},{"location":"Seconde/LangagePython/Cours/#concepts-de-base","title":"Concepts de base","text":""},{"location":"Seconde/LangagePython/Cours/#programme","title":"Programme","text":"<p>Un programme est une suite d'instructions qui permettent de r\u00e9aliser une t\u00e2che. En python, un programme est une suite d'instructions \u00e9crites dans un fichier avec l'extension <code>.py</code>.</p> <p>Pour travailler sur nos programmes, nous allons utiliser un \u00e9diteur de texte appel\u00e9 <code>Thonny</code>.</p> <p>Dans Thonny on peut ouvrir un programme avec le menu <code>Fichier</code> puis <code>Ouvrir</code> ou en cliquant sur l'ic\u00f4ne <code>Ouvrir</code> dans la barre d'outils.</p> <p>Pour ex\u00e9cuter un programme, on peut cliquer sur le bouton <code>Ex\u00e9cuter</code> dans la barre d'outils ou utiliser le raccourci clavier <code>F5</code>.</p>"},{"location":"Seconde/LangagePython/Cours/#exercice-1","title":"Exercice 1","text":"<p>Dans Thonny, ouvrez le fichier \"ex1.py\" et ex\u00e9cutez le programme avec la fl\u00e8che verte.</p> <p>Que fait ce programme ?</p> <p>................................................................</p>"},{"location":"Seconde/LangagePython/Cours/#variables","title":"Variables","text":"<p>Une variable est un espace de stockage en m\u00e9moire qui contient une valeur et qui est d\u00e9finie par un nom. En python, on peut d\u00e9clarer une variable en lui affectant une valeur.</p> <p>Les variables peuvent contenir diff\u00e9rents types de donn\u00e9es comme on les a vus pr\u00e9c\u00e9demment. (Entier, flottant, cha\u00eene de caract\u00e8res, bool\u00e9en et d'autres types de donn\u00e9es que nous verrons plus tard).</p> <pre><code>unNombre = 5\nunTexte = \"Bonjour\"\nunFlottant = 3.14\nunBooleen = True\n</code></pre> <p>Les Variables, comme leur nom l'indique, peuvent varier. On peut donc modifier la valeur d'une variable en lui affectant une nouvelle valeur.</p> <pre><code># Ici on d\u00e9clare une variable unNombre et on lui affecte la valeur 5\nunNombre = 5\n\n# Ici on modifie la valeur de la variable unNombre\nunNombre = 10\n</code></pre> <p>Les commentaires en python commencent par le symbole <code>#</code>. Toute la ligne apr\u00e8s le symbole <code>#</code> est un commentaire et n'est pas ex\u00e9cut\u00e9e.</p> <p>La fonction <code>print()</code> permet d'afficher du texte ou des valeurs \u00e0 l'\u00e9cran.</p> <pre><code>print(\"Bonjour\")\n# Affiche Bonjour \u00e0 l'\u00e9cran\n</code></pre>"},{"location":"Seconde/LangagePython/Cours/#exercice-2","title":"Exercice 2","text":"<p>Dans Thonny, ouvrez le fichier \"ex2.py\" et ex\u00e9cutez le programme avec la fl\u00e8che verte.</p> <ul> <li>Modifiez la 3\u00e8me ligne pour afficher \"Ca marche\" \u00e0 l'\u00e9cran.</li> </ul>"},{"location":"Seconde/LangagePython/Cours/#exercice-3","title":"Exercice 3","text":"<p>Notre troisi\u00e8me programme permet de faire la somme entre deux nombres. Mais il manque quelque chose. Compl\u00e9tez le programme <code>ex3.py</code> pour qu'il affiche le r\u00e9sultat de la somme.</p> <p>Attention : Sans modifier le code d\u00e9j\u00e0 \u00e9crit.</p>"},{"location":"Seconde/LangagePython/Cours/#operations-arithmetiques","title":"Op\u00e9rations arithm\u00e9tiques","text":"<p>Python permet de r\u00e9aliser des op\u00e9rations arithm\u00e9tiques sur des variables num\u00e9riques.</p> <pre><code>a = 5\nb = 3\n\n# Addition\nresultat = a + b\n\n# Soustraction\nresultat = a - b\n\n# Multiplication\nresultat = a * b\n\n# Division\nresultat = a / b\n\n# Division enti\u00e8re\nresultat = a // b\n\n# Reste de la division\nresultat = a % b\n\n# Puissance\nresultat = a ** b\n</code></pre>"},{"location":"Seconde/LangagePython/Cours/#exercice-4","title":"Exercice 4","text":"<p>Dans Thonny, ouvrez le fichier \"ex4.py\" et ex\u00e9cutez le programme avec la fl\u00e8che verte.</p> <ul> <li>Modifiez le programme pour effectuer les diff\u00e9rents calculs.</li> </ul>"},{"location":"Seconde/LangagePython/Cours/#operations-sur-les-chaines-de-caracteres","title":"Op\u00e9rations sur les cha\u00eenes de caract\u00e8res","text":""},{"location":"Seconde/LangagePython/Cours/#concatenation","title":"Concat\u00e9nation","text":"<p>Python permet de r\u00e9aliser des op\u00e9rations sur les cha\u00eenes de caract\u00e8res.</p> <pre><code>\n# Concat\u00e9nation : On peut coller deux cha\u00eenes de caract\u00e8res ensemble pour en former une seule avec l'op\u00e9rateur +\n\na = \"Bonjour\"\nb = \"tout le monde\"\n\nresultat = a + \" \" + b\nprint(resultat)\n</code></pre>"},{"location":"Seconde/LangagePython/Cours/#longueur-dune-chaine","title":"Longueur d'une cha\u00eene","text":"<p>Python permet de conna\u00eetre la longueur d'une cha\u00eene de caract\u00e8res avec la fonction <code>len()</code>.</p> <pre><code>a = \"Bonjour\"\nlongueur = len(a)\nprint(\"La cha\u00eene a une longueur de\", longueur, \"caract\u00e8res\")\n</code></pre>"},{"location":"Seconde/LangagePython/Cours/#fonctions","title":"Fonctions","text":"<p>Une fonction est un bloc d'instructions qui r\u00e9alise une t\u00e2che sp\u00e9cifique. En python, on peut d\u00e9finir une fonction avec le mot-cl\u00e9 <code>def</code>.</p> <pre><code>def maFonction():\n    print(\"Bonjour\")\n</code></pre> <p>Les fonctions peuvent prendre des param\u00e8tres.</p> <pre><code>def maFonction(nom):\n    print(\"Bonjour\", nom)\n</code></pre> <p>Les fonctions sont \u00e9crite avec le format suivant :</p> <pre><code>def nomDeLaFonction(parametre1 : typeDuParam\u00e8tre, parametre2 : typeDuParam\u00e8tre2) -&gt; typeDuRetour(si la fonction retourne une valeur) :\n    # Instructions\n</code></pre>"},{"location":"Seconde/LangagePython/Cours/#types-de-parametres","title":"Types de param\u00e8tres","text":"<p>Pour savoir comment \u00e9crire les types des param\u00e8tres, on peut se r\u00e9f\u00e9rer \u00e0 la table suivante :</p> Type de donn\u00e9es Type en python Entier int Flottant float Chaine de caract\u00e8res str Bool\u00e9en bool <p>Par exemple :</p> <pre><code>def majuscule(texte : str) -&gt; str:\n    return texte.upper()\n\ndef double(nombre : int) -&gt; int:\n    return nombre * 2\n\ndef faisPouet():\n    print(\"Pouet\")\n</code></pre> <p>Pour appeler une fonction, on utilise son nom suivi de parenth\u00e8ses.</p> <pre><code>maFonction(parametre1, parametre2 ...)\n</code></pre> <p>Une fontion peut prendre entre 0 et n param\u00e8tres.</p> <p>Une fonction peut retourner une valeur avec le mot-cl\u00e9 <code>return</code>.</p> <pre><code>def donneMoi3():\n    return 3\n\nmonNombre = donneMoi3()\n# monNombre contient la valeur 3\nprint(monNombre)\n</code></pre>"},{"location":"Seconde/LangagePython/Cours/#exercice-5","title":"Exercice 5","text":"<p>Dans Thonny, ouvrez le fichier \"ex5.py\" et cr\u00e9er une fonction <code>somme</code> qui prend deux param\u00e8tres et qui retourne la somme de ces deux param\u00e8tres.</p>"},{"location":"Seconde/LangagePython/Cours/#structures-conditionnelles","title":"Structures conditionnelles","text":"<p>Les structures conditionnelles permettent d'ex\u00e9cuter des instructions en fonction d'une condition.</p> <p>on l'\u00e9crit sous la forme :</p> <pre><code>if condition:\n    # Instructions\nelif autreCondition:\n    # Instructions\nelse:\n    # Instructions\n</code></pre> <p>elif est une contraction de else if. On peut en mettre autant que l'on veut. else et elif sont optionnels, on peut ne mettre que if.</p> <p>Par exemple :</p> <pre><code>nombre = 5\n\nif nombre &gt;= 0:\n    print(\"Le nombre est positif\")\nelse :\n    print(\"Le nombre est n\u00e9gatif\")\n</code></pre>"},{"location":"Seconde/LangagePython/Cours/#exercice-6","title":"Exercice 6","text":"<p>Dans Thonny, ouvrez le fichier \"ex6.py\" et compl\u00e9tez le programme pour qu'il affiche si un nombre est pair ou impair.</p>"},{"location":"Seconde/LangagePython/Cours/#boucles-bornees","title":"Boucles born\u00e9es","text":"<p>Plut\u00f4t que de r\u00e9p\u00e9ter plusieurs fois la m\u00eame instruction, on peut utiliser une boucle pour r\u00e9p\u00e9ter une instruction ou un bloc d'instructions.</p> <p>Par exemple si on veut afficher 5 fois \"Bonjour\" :</p> <pre><code>print(\"Bonjour\")\nprint(\"Bonjour\")\nprint(\"Bonjour\")\nprint(\"Bonjour\")\nprint(\"Bonjour\")\n</code></pre> <p>C'est une \u00e9criture fastidieuse. On peut utiliser une boucle <code>for</code> pour r\u00e9p\u00e9ter l'instruction.</p> <pre><code>for i in range(5):\n    print(\"Bonjour\")\n</code></pre> <p>C'est beaucoup plus court et plus lisible.</p> <p>D\u00e9cortiquons la boucle <code>for</code> :</p> <ul> <li><code>for</code> est le mot-cl\u00e9 qui indique que l'on va faire une boucle.</li> <li><code>i</code> est une variable qui va prendre les valeurs de <code>range(5)</code>. On peut mettre n'importe quel nom de variable.</li> <li><code>in</code> est le mot-cl\u00e9 qui indique que l'on va parcourir les \u00e9l\u00e9ments d'une liste.</li> <li><code>range(5)</code> est une fonction qui g\u00e9n\u00e8re une liste de 5 \u00e9l\u00e9ments. <code>range(5)</code> g\u00e9n\u00e8re la liste <code>[0, 1, 2, 3, 4]</code>.</li> <li><code>:</code> indique que l'on va commencer un bloc d'instructions. La suite du programme doit \u00eatre indent\u00e9e. (D\u00e9cal\u00e9e de 4 espaces ou d'une tabulation).</li> <li>Tout ce qui est \u00e0 la suite et indent\u00e9 va \u00eatre r\u00e9p\u00e9t\u00e9 par la boucle.</li> </ul>"},{"location":"Seconde/LangagePython/Cours/#autre-exemple","title":"Autre exemple","text":"<p>On peut aussi parcourir une liste.</p> <pre><code># La liste est d\u00e9finie entre crochets [], c'est une serie de valeurs s\u00e9par\u00e9es par des virgules.\nliste = [2, 7, 4, 5]\n\nfor element in liste:\n    print(element)\n</code></pre>"},{"location":"Seconde/LangagePython/Cours/#exercice-7","title":"Exercice 7","text":"<p>Dans Thonny, ouvrez le fichier \"ex7.py\" et compl\u00e9tez le programme pour qu'il affiche les nombres de 1 \u00e0 10.</p>"},{"location":"Seconde/LangagePython/Cours/#exercice-8","title":"Exercice 8","text":"<p>Dans Thonny, ouvrez le fichier \"ex8.py\" et compl\u00e9tez le programme pour qu'il affiche le double des nombres de la liste.</p>"},{"location":"Seconde/LangagePython/Cours/#boucles-non-bornees","title":"Boucles non born\u00e9es","text":"<p>Il existe une autre boucle en python, la boucle <code>while</code>. Cette boucle r\u00e9p\u00e8te une instruction ou un bloc d'instructions tant qu'une condition est vraie.</p> <p>Elle est \u00e9crite au format suivant :</p> <pre><code>while CONDITION:\n    # Instructions\n</code></pre> <p>Par exemple :</p> <pre><code>i = 0\n\nwhile i &lt; 5:\n    print(\"Bonjour\")\n    i = i + 1\n</code></pre> <p>Ici, on incr\u00e9mente la variable <code>i</code> \u00e0 chaque tour de boucle pour qu'\u00e0 un moment donn\u00e9 la condition <code>i &lt; 5</code> soit fausse et que la boucle s'arr\u00eate. C'est l'\u00e9quivalent de la boucle <code>for</code> que l'on a vu pr\u00e9c\u00e9demment.</p>"},{"location":"Seconde/LangagePython/Cours/#exercice-9","title":"Exercice 9","text":"<p>Dans Thonny, ouvrez le fichier \"ex9.py\" et compl\u00e9tez le programme pour qu'il affiche les carr\u00e9 des nombres tant que le r\u00e9sultat est inf\u00e9rieur \u00e0 1000.</p> <p>Aide : Pour calculer le carr\u00e9 d'un nombre, on peut utiliser l'op\u00e9rateur <code>**</code>. Par exemple 3\u00b2 s'\u00e9crit <code>3**2</code>.</p>"},{"location":"Seconde/Localisation/Cours/","title":"Localisation, cartographie et mobilit\u00e9","text":""},{"location":"Seconde/Localisation/Cours/#cours","title":"Cours","text":""},{"location":"Seconde/Localisation/Cours/#1-localisation","title":"1. Localisation","text":"<p>La localisation est le processus qui consiste \u00e0 d\u00e9terminer la position d'un objet ou d'une personne sur la Terre. Elle est utilis\u00e9e dans de nombreux domaines comme la cartographie, la navigation, la g\u00e9olocalisation, etc.</p>"},{"location":"Seconde/Localisation/Cours/#2-gps","title":"2. GPS","text":"<p>Le GPS (Global Positioning System) est un syst\u00e8me de positionnement par satellites qui permet de d\u00e9terminer la position d'un r\u00e9cepteur GPS n'importe o\u00f9 sur Terre. Il est compos\u00e9 d'une constellation de satellites en orbite autour de la Terre.</p> <p>Fonctionnement du GPS :</p> <p>Le GPS va envoyer un signal \u00e0 plusieurs satellites qui vont renvoyer une r\u00e9ponse. En mesurant le temps de r\u00e9ponse de chaque satellite, le GPS va pouvoir d\u00e9terminer la distance entre le r\u00e9cepteur GPS et chaque satellite. En croisant ces distances, le GPS va pouvoir d\u00e9terminer la position du r\u00e9cepteur GPS.</p> <p></p> <p>Remarque : La g\u00e9olocalisation est le processus qui consiste \u00e0 associer des coordonn\u00e9es g\u00e9ographiques (latitude, longitude, altitude) \u00e0 un objet ou \u00e0 une personne.</p>"},{"location":"Seconde/Localisation/Cours/#activite","title":"Activit\u00e9","text":"<p>Pour comprendre comment rep\u00e9rer un point sur Terre, on va rechercher une position GPS sur une. </p> <p>Notre premier indice est le suivant : <code>Le tr\u00e9sor est \u00e0 250 km de Nantes</code>.</p> <p></p> <ol> <li>Peut-on le localiser avec certitude ? Pourquoi ?</li> </ol> <p>................................................................</p> <ol> <li>On sait que le tr\u00e9sor est \u00e0 350 km de Dijon. Peut-on le localiser avec certitude ? Pourquoi ?</li> </ol> <p>................................................................</p> <ol> <li>On sait que le tr\u00e9sor est aussi \u00e0 350 km de Paris. Peut-on le localiser avec certitude ? Pourquoi ?</li> </ol> <p>................................................................</p> <p></p> <p>C'est pour cela qu'on peut parler de \"triangulation\" pour d\u00e9terminer la position d'un point sur Terre. Trianguler correspond \u00e0 d\u00e9terminer la position d'un point en mesurant les distances entre ce point et de 3 autres points dont on connait la position.</p>"},{"location":"Seconde/Localisation/Cours/#en-3-dimensions","title":"En 3 dimensions","text":"<p>Comment le GPS peut-il d\u00e9terminer des distances \u00e0 partir de signaux envoy\u00e9s par des satellites en orbite autour de la Terre ?</p> <p>D\u00e9j\u00e0, une fois que le satellite a re\u00e7u le signal, il va renvoyer une r\u00e9ponse. En mesurant le temps de r\u00e9ponse, le GPS va pouvoir d\u00e9terminer combien de temps le signal a mis pour aller du satellite au r\u00e9cepteur GPS. </p> <p>Sachant que la lumi\u00e8re se d\u00e9place \u00e0 une vitesse approximative de 300 000 km/s, on peut d\u00e9terminer la distance entre le satellite et le r\u00e9cepteur GPS en multipliant la vitesse de la lumi\u00e8re par le temps de r\u00e9ponse.</p> <p></p> <p>Le calcul \u00e0 faire est le suivant :</p> <p>$$ Distance = Vitesse \\times Temps $$ $$ Distance = 300 000 \\times Temps $$</p> <p>Il ne faut pas oublier de diviser par 2 car le signal doit faire l'aller-retour entre le satellite et le r\u00e9cepteur GPS.</p>"},{"location":"Seconde/Localisation/Cours/#en-pratique","title":"En pratique","text":"<p>Admettons qu'on ai un signal dont le temps de retour est de 0,06 secondes. Quelle est la distance entre le satellite et le r\u00e9cepteur GPS ?</p> <p>................................................................</p> <p>Pour d\u00e9terminer la position en 3 dimensions, le GPS va utiliser un minimum de 4 satellites. En effet, on en rajoute un pour d\u00e9terminer l'altitude du r\u00e9cepteur GPS.</p>"},{"location":"Seconde/Localisation/Exercices/","title":"Localisation - activit\u00e9","text":"<p>Les images en informatique ont des donn\u00e9es qui repr\u00e9sentent les diff\u00e9rents pixels comme nous l'avions vu en seconde. Mais l'image contient aussi d'autres informations : les m\u00e9tadonn\u00e9es.</p> <p></p> <p>Le petit Youlou a disparu, il vous faut mener l'enqu\u00eate pour le retrouver. Heureusement, peu avant sa disparition il a envoy\u00e9 une photo de lui. On va s'en servir pour le localiser.</p>"},{"location":"Seconde/Localisation/Exercices/#exercice-1","title":"Exercice 1","text":"<p>Avec le logiciel <code>gimp</code>, ouvrez l'image exercice1.png pour retrouver le petit Youlou.</p> <p>Ouvrez les m\u00e9tadonn\u00e9es de l'image en cliquant sur <code>Fichier</code> puis <code>Propri\u00e9t\u00e9s</code>. Consultez les diff\u00e9rentes informations pour remplir le tableau suivant :</p> M\u00e9tadonn\u00e9e Valeur Nom du fichier .......... Taille de l'image .......... Date de cr\u00e9ation .......... Position GPS .........."},{"location":"Seconde/Localisation/Exercices/#exercice-2","title":"Exercice 2","text":"<p>Vous avons r\u00e9cup\u00e9r\u00e9 une position GPS dans le format suivant : <code>x.xxxx, x.xxxx</code>. Ce format correspond \u00e0 des degr\u00e9s. C'est un format utilis\u00e9 par les GPS qui indique la latitude et la longitude.</p> <p>Maintenant qu'on a cette position, on peut ouvrir une carte en ligne pour la localiser. Ouvrez Google Maps et entrez les coordonn\u00e9es pour localiser le petit Youlou.</p> <p>O\u00f9 se trouvait-il ?</p> <p>.......................................</p>"},{"location":"Seconde/Localisation/Exercices/#exercice-3","title":"Exercice 3","text":"<p>Des individus mal intentionn\u00e9s pourrait se mettre aussi sur la piste du petit Youlou. Pour \u00e9viter cela, on va laisser une fausse piste en changeant les m\u00e9tadonn\u00e9es de l'image afin que d'autres personnes ne puissent pas les suivre.</p> <p>Dans <code>gimp</code>, modifiez les coordonn\u00e9es GPS de l'image pour les remplacer par d'autres coordonn\u00e9es.</p>"},{"location":"Seconde/Localisation/Exercices/#exercice-4","title":"Exercice 4","text":"<p>Apr\u00e8s \u00eatre all\u00e9 chercher Youlou, vous n'avez rien trouv\u00e9 \u00e0 l'endroit indiqu\u00e9 par les coordonn\u00e9es GPS. Apr\u00e8s quelques recherches, vous apprenez une terrible nouvelle inspecteur, le logiciel <code>gimp</code> serait tomb\u00e9 entre les mains de vos ennemis qui vous ont laiss\u00e9 cette fausse piste. On ne peut plus lui faire confiance. Il va falloir trouver un autre moyen de consulter et modifier les m\u00e9tadonn\u00e9es des images.</p> <p></p> <p>Nous ne savons pas quel logiciel utiliser... Fort heureusement, vous savez utiliser le langage Python pour programmer vous m\u00eame une solution !</p> <p>Pour cela, nous allons utiliser la biblioth\u00e8que <code>Pillow</code> qui permet de manipuler des images en Python. Pour l'installer, ouvrez un terminal avec <code>cmd</code> et tapez la commande suivante :</p> <pre><code>pip install pillow\n</code></pre> <p>Ouvrez le fichier <code>exercice4.py</code> et compl\u00e9tez le code pour afficher les m\u00e9tadonn\u00e9es de l'image <code>exercice4.png</code>.</p> <pre><code>from PIL import Image\n\n# Ouvrir l'image\nimg = Image.open(\"exercice4.png\")\n\n# R\u00e9cup\u00e9rer les m\u00e9tadonn\u00e9es sous la forme d'un dictionnaire\nmetadata = img.info\n\nprint(metadata)\n</code></pre> <p>Ex\u00e9cutez le code pour afficher les m\u00e9tadonn\u00e9es de l'image.</p> <p>Quelle est la v\u00e9ritable position de l'image ?</p> <p>.......................................</p>"},{"location":"Seconde/Localisation/Exercices/#exercice-5","title":"Exercice 5","text":"<p>Maintenant que vous avez la v\u00e9ritable position de l'image, ouvrez Google Maps et entrez les coordonn\u00e9es pour localiser le petit Youlou.</p> <p>O\u00f9 se trouvait-il ?</p> <p>.......................................</p>"},{"location":"Seconde/Localisation/Exercices/#exercice-6","title":"Exercice 6","text":"<p>Pour \u00e9viter que les malfrats ne retrouvent le petit Youlou, vous allez modifier les m\u00e9tadonn\u00e9es de l'image pour les remplacer par d'autres coordonn\u00e9es DEPUIS notre programme Python.</p> <p>Aide : Pour sauvegarder les modifications, utilisez la m\u00e9thode <code>save</code> de l'objet <code>img</code>.</p> <pre><code># Sauvegarder les modifications\nimg.save(\"exercice6.png\")\n</code></pre>"},{"location":"Seconde/Localisation/Exercices/#exercice-7","title":"Exercice 7","text":"<p>V\u00e9rifiez que les m\u00e9tadonn\u00e9es ont bien \u00e9t\u00e9 modifi\u00e9es en affichant les m\u00e9tadonn\u00e9es de l'image.</p> <p>Bravo, vous avez sauv\u00e9 le petit Youlou !</p> <p> </p>"},{"location":"Seconde/ObjetsConnectes/Cours/","title":"Informatique embarqu\u00e9e et objets connect\u00e9s","text":""},{"location":"Seconde/ObjetsConnectes/Cours/#cours","title":"Cours","text":"<p>Un objet connect\u00e9 est un syst\u00e8me informatique muni de capteurs et d'actionneurs, capable de communiquer sur un r\u00e9seau d'information. Ce r\u00e9seau est appel\u00e9 l'Internet des objets (IoT pour Internet of Things). Il n'est pas forc\u00e9ment autonome, si c'est le cas, c'est aussi un syst\u00e8me embarqu\u00e9. Les clients se connectent \u00e0 lui \u00e0 travers le r\u00e9seau pour obtenir des services.</p>"},{"location":"Seconde/ObjetsConnectes/Cours/#1-definitions","title":"1. D\u00e9finitions","text":"<ul> <li> <p>Syst\u00e8me embarqu\u00e9 : syst\u00e8me informatique autonome, d\u00e9di\u00e9 \u00e0 une t\u00e2che sp\u00e9cifique, int\u00e9gr\u00e9 dans un objet.</p> </li> <li> <p>Objet connect\u00e9 : syst\u00e8me embarqu\u00e9 muni de capteurs et d'actionneurs, capable de communiquer sur un r\u00e9seau d'information.</p> </li> <li> <p>Internet des objets : r\u00e9seau d'objets connect\u00e9s.</p> </li> </ul>"},{"location":"Seconde/ObjetsConnectes/Cours/#2-historique","title":"2. Historique","text":"<ol> <li>Quel a \u00e9t\u00e9 le premier objet connect\u00e9 ? D\u00e9tailler la r\u00e9ponse ?</li> </ol> <p>................................................................</p> <p>Le premier objet connect\u00e9 est la machine \u00e0 caf\u00e9 de l'universit\u00e9 de Cambridge. Elle a \u00e9t\u00e9 connect\u00e9e \u00e0 l'Internet en 1991 par des \u00e9tudiants pour surveiller le niveau de caf\u00e9 dans la cafeti\u00e8re.</p> <ol> <li>En quelle ann\u00e9e a-t-on commenc\u00e9 \u00e0 parler de l'Internet des objets ?</li> </ol> <p>On a commenc\u00e9 \u00e0 parler de l'Internet des objets en 1999. Soit l'ann\u00e9e de sortie du film Matrix, du jeu Counter-Strike.</p> <ol> <li>Citer un exemple d'objet connect\u00e9. ................................................................</li> </ol> <p>Un exemple d'objet connect\u00e9 est le thermostat connect\u00e9. Il permet de r\u00e9guler la temp\u00e9rature d'une pi\u00e8ce \u00e0 distance.</p>"},{"location":"Seconde/ObjetsConnectes/Cours/#3-schema-a-completer","title":"3. Sch\u00e9ma \u00e0 compl\u00e9ter","text":"<p>Compl\u00e9ter le sch\u00e9ma suivant avec les \u00e9l\u00e9ments suivants : <code>Capteur</code>, <code>Microcontr\u00f4leur</code>, <code>Module de Communication</code>, <code>Stockage</code>, <code>Actionneur</code>.</p> <pre><code>%% Schema\ngraph TD\n    A[________________] --&gt;|Envoie des donn\u00e9es| B[________________]\n    B --&gt;|Envoie des donn\u00e9es trait\u00e9es| C[________________]\n    B --&gt;|Stocke des donn\u00e9es| D[________________]\n    B --&gt;|Envoie des commandes| E[________________]\n\n%% Style\nstyle A fill:#f9f,stroke:#333,stroke-width:4px,color:#000;\nstyle B fill:#bbf,stroke:#333,stroke-width:2px,color:#000;\nstyle C fill:#bfb,stroke:#333,stroke-width:2px,color:#000;\nstyle D fill:#ffb,stroke:#333,stroke-width:2px,color:#000;\nstyle E fill:#fbb,stroke:#333,stroke-width:2px,color:#000;\n\nlinkStyle default stroke:#333,stroke-width:1px,fill:none;\n</code></pre>"},{"location":"Seconde/ObjetsConnectes/Cours/#4-activite-pratique","title":"4. Activit\u00e9 pratique","text":"<p>On souhaite r\u00e9aliser un syst\u00e8me de surveillance de temp\u00e9rature. Pour cela, on dispose d'un capteur de temp\u00e9rature, d'une carte micro:bit et d'une petite lampe LED (Diode Electro-Luminescente). Il va aussi nous falloir une pile pour alimenter notre syst\u00e8me.</p> <ol> <li>Assemblez les diff\u00e9rents \u00e9l\u00e9ments.</li> <li>Le code suivant permet de lire la temp\u00e9rature ambiante :</li> </ol> <pre><code>from microbit import *               # &lt;---\n\nwhile True:                          # &lt;---\n\n    temperature = temperature()      # &lt;---\n\n    display.scroll(str(temperature)) # &lt;---\n\n    sleep(1000)                      # &lt;---\n</code></pre> <p>Expliquez ce code ligne par ligne.</p> <ol> <li>Executez le code sur la carte micro:bit pour afficher la temp\u00e9rature ambiante.</li> <li>Maintenant qu'on sais lire la temp\u00e9rature, on va essayer d'allumer notre LED. Pour cela, on va utiliser le code suivant :</li> </ol> <pre><code>from microbit import *               # &lt;---\n\nwhile True:                          # &lt;---\n\n    pin0.write_digital(1)            # &lt;---\n\n    sleep(1000)                      # &lt;---\n\n    pin0.write_digital(0)            # &lt;---\n\n    sleep(1000)                      # &lt;---\n</code></pre> <p>Expliquez ce code ligne par ligne. Que fait-il ? ................................................................</p> <ol> <li>Maintenant qu'on sait se servir des deux, r\u00e9alisez un programme qui allume la LED si la temp\u00e9rature d\u00e9passe 25\u00b0C.</li> </ol>"},{"location":"Seconde/ObjetsConnectes/Cours/#5-pour-aller-plus-loin","title":"5. Pour aller plus loin","text":"<p>Pour r\u00e9aliser un v\u00e9ritable objet connect\u00e9, il nous faudrait un module de communication. On peut alors ajouter une antenne wifi \u00e0 notre carte micro:bit pour envoyer les donn\u00e9es de temp\u00e9rature \u00e0 un serveur. On pourrait alors consulter ces donn\u00e9es depuis un site web.</p>"},{"location":"Seconde/ObjetsConnectes/Cours/#activite","title":"Activit\u00e9","text":"<p>Si vous voulez aller plus loin sur cette activit\u00e9, elle est tir\u00e9e du site de Stephane Ramstein qui en propose une suite : lien</p>"},{"location":"Seconde/PhotographieNumerique/Cours/","title":"Imagerie num\u00e9rique","text":""},{"location":"Seconde/PhotographieNumerique/Cours/#introduction","title":"Introduction","text":""},{"location":"Seconde/PhotographieNumerique/Cours/#un-peu-dhistoire","title":"Un peu d'histoire","text":"<p>L'imagerie num\u00e9rique est apparue dans les ann\u00e9es 70. Elle a \u00e9t\u00e9 rendue possible par l'invention du capteur CCD (Charge-Coupled Device) par Willard Boyle et George Smith. Ce capteur est capable de convertir une image en un signal \u00e9lectrique. Ce signal peut ensuite \u00eatre num\u00e9ris\u00e9 et stock\u00e9 dans un ordinateur.</p> <p>Le premier appareil photo num\u00e9rique a \u00e9t\u00e9 invent\u00e9 en 1975 par Steven Sasson. Il pesait 3,6 kg et avait une r\u00e9solution de 0,01 m\u00e9gapixels. Il fallait 23 secondes pour prendre une photo et 23 secondes pour l'afficher sur un t\u00e9l\u00e9viseur. Il fallait ensuite 23 secondes pour effacer la photo et pouvoir prendre une nouvelle photo. La photo \u00e9tait stock\u00e9e sur une cassette audio. Il fallait 50 secondes pour transf\u00e9rer la photo sur un ordinateur.</p> <p>Aujourd'hui, les appareils photo num\u00e9riques sont beaucoup plus performants. Ils sont capables de prendre des photos de plusieurs dizaines de m\u00e9gapixels en quelques millisecondes. Ils sont capables de prendre des vid\u00e9os en 4K \u00e0 60 images par seconde.</p>"},{"location":"Seconde/PhotographieNumerique/Cours/#quest-ce-quun-pixel","title":"Qu'est ce qu'un Pixel ?","text":"<p>Un pixel est un point de l'image. Il est d\u00e9fini par sa position et sa couleur. Sa valeur repr\u00e9sente la couleur du pixel. Plus la valeur est grande, plus le pixel est clair. Plus la valeur est petite, plus le pixel est fonc\u00e9. La valeur d'un pixel d\u00e9pend du mode de repr\u00e9sentation de l'image.</p>"},{"location":"Seconde/PhotographieNumerique/Cours/#noir-et-blanc","title":"Noir et blanc","text":"<p>Pour repr\u00e9senter une image uniquement en noir et blanc, on n'a pas besoin de beaucoup de valeurs diff\u00e9rentes. On peut utiliser un seul bit pour repr\u00e9senter la couleur d'un pixel.</p> <p>Comment pourrait-on repr\u00e9senter \u00e7a en m\u00e9moire ?</p> <p>...............................................................................................................................................</p>"},{"location":"Seconde/PhotographieNumerique/Cours/#niveaux-de-gris","title":"Niveaux de gris","text":"<p>On veut maintenant repr\u00e9senter une image en diff\u00e9rents niveaux de gris on a donc besoin de plus de valeurs diff\u00e9rentes. On aura besoin d'utiliser 8 bits pour repr\u00e9senter la couleur d'un pixel.</p> <p>Comment pourrait-on repr\u00e9senter \u00e7a en m\u00e9moire ?</p> <p>...............................................................................................................................................</p>"},{"location":"Seconde/PhotographieNumerique/Cours/#couleurs","title":"Couleurs","text":"<p>Enfin, pour des images en couleurs, on a besoin de beaucoup de valeurs diff\u00e9rentes. On peut utiliser 24 bits pour repr\u00e9senter la couleur d'un pixel. On utilise g\u00e9n\u00e9ralement 8 bits pour chaque couleur primaire (rouge, vert, bleu). On appelle ce mode de repr\u00e9sentation RVB (Rouge, Vert, Bleu). Dans ce cas chaque couleur est repr\u00e9sent\u00e9e par un nombre entre 0 et 255. On ne peut donc repr\u00e9senter qu'un nombre limit\u00e9 de couleurs mais c'est suffisant pour l'oeil humain.</p> <p>Exemple : \ud83d\udfe5 correspondrait \u00e0 un pixel de valeur (255, 0, 0) ; \ud83d\udfe9 correspondrait \u00e0 un pixel de valeur (0, 255, 0) ; \ud83d\udfe6 correspondrait \u00e0 un pixel de valeur (0, 0, 255) ;</p>"},{"location":"Seconde/PhotographieNumerique/Cours/#composition-dune-image","title":"Composition d'une image","text":"<p>Une image num\u00e9rique est une matrice de pixels. On peut imaginer une image comme un tableau \u00e0 deux dimensions. Chaque case du tableau correspond \u00e0 un pixel. La taille du tableau correspond \u00e0 la taille de l'image. La valeur de chaque case correspond \u00e0 la couleur du pixel.</p> <p>Exemple :</p> <pre><code>\u2b1b\u2b1b\u2b1b\u2b1b\n\u2b1b\ud83d\udfe5\ud83d\udfe5\u2b1b\n\ud83d\udfe5\ud83d\udfe8\ud83d\udfe8\ud83d\udfe5\n\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\ud83d\udfe8\n</code></pre> <p>repr\u00e9sente une petite image de 4x4 pixels. Cette image correspond en fait aux valeurs suivantes :</p> (0, 0, 0) (0, 0, 0) (0, 0, 0) (0, 0, 0) (0, 0, 0) (255, 0, 0) (255, 0, 0) (0, 0, 0) (255, 0, 0) (255, 255, 0) (255, 255, 0) (255, 0, 0) (255, 255, 0) (255, 255, 0) (255, 255, 0) (255, 255, 0) <p>Plus il y a de pixels, plus l'image est d\u00e9taill\u00e9e. La taille d'une image est exprim\u00e9e en pixels. Par exemple, une image de 1920x1080 pixels contient 1920 pixels en largeur et 1080 pixels en hauteur.</p> <p>Pour tester le fonctionnement d'une image num\u00e9rique, vous pouvez utiliser le site suivant : http://www.proftnj.com/RGB3.htm</p>"},{"location":"Seconde/PhotographieNumerique/Cours/#questions-1","title":"Questions 1","text":"<p>Combien de couleurs diff\u00e9rentes peut-on former avec un pixel RVB ?</p> <p>...............................................................................................................................................</p>"},{"location":"Seconde/PhotographieNumerique/Cours/#questions-2","title":"Questions 2","text":"<p>Comment Obtenir un pixel :</p> <ul> <li>Jaune ?</li> <li>Violet ?</li> <li>Blanc ?</li> </ul>"},{"location":"Seconde/PhotographieNumerique/Cours/#les-formats-dimage","title":"Les formats d'image","text":"<p>Il existe de nombreux formats d'image. Chaque format a ses avantages et ses inconv\u00e9nients. Certains formats sont plus adapt\u00e9s pour le stockage, d'autres pour l'affichage, d'autres pour la compression, etc.</p>"},{"location":"Seconde/PhotographieNumerique/Cours/#les-formats-dimage-sans-perte","title":"Les formats d'image sans perte","text":"<p>Les formats d'image sans perte sont des formats qui ne modifient pas les donn\u00e9es de l'image. Ils sont donc adapt\u00e9s pour le stockage et la transmission. Ils sont cependant moins efficaces que les formats avec perte pour la compression.</p> <p>Les formats d'image sans perte les plus connus sont : BMP, PNG</p>"},{"location":"Seconde/PhotographieNumerique/Cours/#les-formats-dimage-avec-perte","title":"Les formats d'image avec perte","text":"<p>Les formats d'image avec perte sont des formats qui modifient les donn\u00e9es de l'image pour les stocker plus efficacement. Mais ils perdent de l'information. Ils sont donc moins adapt\u00e9s pour le stockage et la transmission. Ils sont cependant plus efficaces que les formats sans perte pour la compression.</p> <p>Les formats d'image avec perte les plus connus sont : JPG, WEBP</p>"},{"location":"Seconde/PhotographieNumerique/Cours/#les-formats-dimage-vectoriels","title":"Les formats d'image vectoriels","text":"<p>Les formats d'image vectoriels ne stockent pas les pixels de l'image. Ils stockent des formules math\u00e9matiques qui permettent de g\u00e9n\u00e9rer l'image. On peut donc agrandir une image vectorielle sans perte de qualit\u00e9. On peut imaginer une image vectorielle comme une image compos\u00e9e de formes g\u00e9om\u00e9triques.</p> <p>Les formats d'image vectoriels les plus connus sont : SVG, EPS, PDF</p>"},{"location":"Seconde/PhotographieNumerique/Cours/#resolution-dune-image","title":"R\u00e9solution d'une image","text":"<p>La r\u00e9solution d'une image correspond au nombre de pixels par unit\u00e9 de longueur. Elle est exprim\u00e9e en pixels par pouce (ppp ou dpi en anglais). Plus la r\u00e9solution est \u00e9lev\u00e9e, plus l'image est d\u00e9taill\u00e9e.</p> <p></p> <p>(resolution en ppp) = (nombre de pixels) / (taille en pouces</p> <p>Par exemple, une image de 1920x1080 pixels avec une r\u00e9solution de 72 ppp aura une taille de 26,67x15 cm. Si on augmente la r\u00e9solution \u00e0 300 ppp, la taille de l'image sera de 16,26x9,14 cm.</p>"},{"location":"Seconde/PhotographieNumerique/Cours/#question-3","title":"Question 3","text":"<p>Quelle est la r\u00e9solution de l'image <code>Exercice1.jpg</code> si on l'imprime en 5,08 x 5,08 cm ?</p> <p>Rappel : 1 pouce = 2,54 cm</p> <p>.......................................................................................................................................................</p>"},{"location":"Seconde/PhotographieNumerique/Cours/#question-4","title":"Question 4","text":"<p>Comment obtenir une resolution de 300 ppp pour l'image <code>Exercice1.jpg</code> ?</p> <p>.......................................................................................................................................................</p>"},{"location":"Seconde/PhotographieNumerique/Cours/#pour-aller-plus-loin","title":"Pour aller plus loin","text":""},{"location":"Seconde/PhotographieNumerique/Cours/#meta-donnees","title":"Meta donn\u00e9es","text":"<p>Les m\u00e9tadonn\u00e9es sont des informations sur un fichier qui permettent de pr\u00e9ciser des informations suppl\u00e9mentaires sur le fichier. Par exemple, les m\u00e9tadonn\u00e9es d'une image peuvent contenir des informations sur l'appareil photo qui a pris la photo, la date de prise de vue, la localisation, etc.</p> <p>Les m\u00e9tadonn\u00e9es sont stock\u00e9es dans le fichier. Elles peuvent \u00eatre lues et modifi\u00e9es par des logiciels.</p>"},{"location":"Seconde/PhotographieNumerique/Cours/#question-5","title":"Question 5","text":"<p>Notez les m\u00e9tadonn\u00e9es de l'image <code>Exercice1.jpg</code></p> <p>La fa\u00e7on la plus simple de voir les m\u00e9tadonn\u00e9es d'une image c'est d'ouvrir les param\u00e8tres de l'image : <code>clic droit</code> <code>param\u00e8tres</code></p> Donn\u00e9es Valeur Dimention de l'image ... Propri\u00e9taire ... Format de fichier ... Date de cr\u00e9ation ..."},{"location":"Seconde/PhotographieNumerique/exercices/","title":"Exercices : Photographie num\u00e9rique","text":""},{"location":"Seconde/PhotographieNumerique/exercices/#exercice-1","title":"Exercice 1","text":"<p>Pour utiliser une image dans un programme python on peut utiliser la biblioth\u00e8que PIL (Python Imaging Library). Cette biblioth\u00e8que permet de lire et d'\u00e9crire des images dans de nombreux formats.</p> <p>Pour installer la biblioth\u00e8que PIL, il faut taper la commande suivante dans un terminal :</p> <pre><code>pip install pillow\n</code></pre> <p>Dans Thonny, il faut aller dans le menu <code>Outils</code> puis <code>G\u00e9rer les paquets</code> et taper <code>pillow</code> dans la zone de recherche.</p> <p>Voici un exemple d'utilisation de la biblioth\u00e8que PIL pour lire une image :</p> <pre><code>from PIL import Image\n\n# Charger l'image \u00e0 partir du fichier\nimage = Image.open('Exercice1.jpg')\n\n# Afficher les dimensions de l'image\nprint(image.size)\n\n# Afficher le premier pixel de l'image\nprint(image.getpixel((0, 0)))\n\n# Modifier le premier pixel de l'image\nimage.putpixel((0, 0), (255, 0, 0))\n\n# Sauvegarder l'image modifi\u00e9e dans un nouveau fichier\nimage.save('Exercice1_resultat.jpg')\n</code></pre> <p>Ecrire un programme pour r\u00e9cup\u00e9rer la couleur du pixel en position (2, 2) de l'image <code>Exercice1.jpg</code></p>"},{"location":"Seconde/PhotographieNumerique/exercices/#exercice-2","title":"Exercice 2","text":"<p>Pour modifier l'image on va y appliquer diff\u00e9rents filtres. Chaque filtre va modifier la couleur d'un pixel et on appliquera le filtre \u00e0 tous les pixels de l'image.</p> <p>Le code suivant est une base pour appliquer un filtre qui retire la composante rouge de l'image :</p> <pre><code>## Importation des modules\n\nfrom PIL import Image\n\n## D\u00e9claration des constantes\n\nbaseImage = Image.open('Exercice1.jpg')\n\n## D\u00e9claration des fonctions\n\ndef filtreSansRouge(pixel):\n    \"\"\"\n    Retourne un pixel avec la composante rouge \u00e0 0\n    @param pixel: le pixel \u00e0 modifier\n    @return: la valeur du pixel modifi\u00e9\n    \"\"\"\n    return (0, pixel[1], pixel[2])\n\ndef sauvegarderImage(image, nomFichier):\n    \"\"\"Sauvegarde l'image dans un fichier\"\"\"\n    image.save(nomFichier)\n\ndef appliquerFiltre(image, filtre):\n    \"\"\"Applique un filtre \u00e0 une image\"\"\"\n    for x in range(image.width):\n        for y in range(image.height):\n            image.putpixel((x,y), filtre(image.getpixel((x,y))))\n\n## Fonction principale\n\ndef main():\n    \"\"\"Fonction principale\"\"\"\n    appliquerFiltre(baseImage, filtreSansRouge)\n    baseImage.show()\n    sauvegarderImage(baseImage, 'Exercice1_rouge.jpg')\n\n## Programme principal\n\nif __name__ == '__main__':\n    main()\n</code></pre> <p>Ce programme est disponible dans le fichier BaseFiltre.py</p> <p>Testez ce programme. Vous devez obtenir une image avec la composante rouge retir\u00e9e.</p>"},{"location":"Seconde/PhotographieNumerique/exercices/#exercice-3","title":"Exercice 3","text":"<p>Cr\u00e9ez un nouveau filtre qui retire la composante verte de l'image et appliquez-le \u00e0 l'image <code>Exercice1.jpg</code>.</p>"},{"location":"Seconde/PhotographieNumerique/exercices/#exercice-4","title":"Exercice 4","text":"<p>Cr\u00e9ez un nouveau filtre qui ne conserve que la composante rouge de l'image et appliquez-le \u00e0 l'image <code>Exercice1.jpg</code>.</p>"},{"location":"Seconde/PhotographieNumerique/exercices/#exercice-5","title":"Exercice 5","text":"<p>Pour convertir une image en noir et blanc, il faut remplacer la valeur de chaque pixel par la moyenne des valeurs RVB du pixel.</p> <p>Par exemple, le pixel (255, 0, 0) devient (85, 85, 85) car (255 + 0 + 0) / 3 = 85</p> <p>Cr\u00e9ez un nouveau filtre qui convertit l'image en noir et blanc et appliquez-le \u00e0 l'image <code>Exercice1.jpg</code>.</p>"},{"location":"Seconde/PhotographieNumerique/exercices/#exercice-6","title":"Exercice 6","text":"<pre><code># Pour cr\u00e9er une nouvelle image :\nimage2 = Image.new('RGB', (100, 100), (255, 255, 255))\n\nimage2.save('Exercice3.jpg')\n</code></pre> <p>Ecrire un programme pour cr\u00e9er une image de 100x100 pixels que vous remplirez avec des pixels de couleur al\u00e9atoire.</p> <p>Vous pourrez ensuite utiliser vos filtres pr\u00e9c\u00e9dents pour modifier cette image.</p>"},{"location":"Seconde/PhotographieNumerique/exercices/#ressources","title":"Ressources","text":"<p>Exemple d'image possible pour les exercices :  </p> <p>Vous pouvez \u00e9galement utiliser une autre image de votre choix.</p>"},{"location":"Seconde/PhotographieNumerique/ImagerieNumeriqueMicrobit/ImagerieMicrobit/","title":"Imagerie num\u00e9rique et carte microbit","text":""},{"location":"Seconde/PhotographieNumerique/ImagerieNumeriqueMicrobit/ImagerieMicrobit/#1-montage-de-base","title":"1. Montage de base","text":"<p>On peut utiliser la carte microbit pour faire de l'imagerie num\u00e9rique. On va essayer d'utiliser la carte microbit pour afficher de la couleur.</p> <p>Le premier montage de base va nous permettre de tester le fonctionnement de la carte microbit. Il nous faut :</p> <ul> <li>une carte microbit</li> <li>un c\u00e2ble USB pour relier la carte microbit \u00e0 l'ordinateur</li> <li>un ordinateur o\u00f9 on va ouvrir l'\u00e9diteur en ligne de la carte microbit : https://python.microbit.org/v/3</li> <li> <p>une simple LED (diode \u00e9lectroluminescente) pour tester le montage</p> </li> <li> <p>Connecter la carte microbit \u00e0 l'ordinateur avec le c\u00e2ble USB</p> </li> <li>connecter la LED sur la broche 0 de la carte microbit \u00e0 l'aide d'un fil de connexion</li> <li>Ouvrir l'\u00e9diteur en ligne de la carte microbit : https://python.microbit.org/v/3</li> <li>Remplacer le programme par le programme suivant :</li> </ul> <pre><code>from microbit import *\n\nwhile True:\n    pin0.write_digital(1)\n    sleep(1000)\n    pin0.write_digital(0)\n    sleep(1000)\n</code></pre> <ol> <li>Cliquer sur le bouton \"Send to micro:bit\" pour envoyer le programme sur la carte microbit</li> <li>Passez les \u00e9tapes de t\u00e9l\u00e9chargement du programme sur la carte microbit</li> <li>Votre LED doit s'allumer et s'\u00e9teindre toutes les secondes</li> </ol>"},{"location":"Seconde/PhotographieNumerique/ImagerieNumeriqueMicrobit/ImagerieMicrobit/#2-montage-pour-afficher-de-la-couleur","title":"2. Montage pour afficher de la couleur","text":"<p>Pour afficher de la couleur on va utiliser une bande de LED. Il nous faut connecter la bande de LED sur la broche 0 de la carte microbit \u00e0 la place de la LED.</p> <ol> <li> <p>Connecter la bande de LED sur la broche 0 de la carte microbit \u00e0 la place de la LED</p> </li> <li> <p>On va utiliser le programme suivant pour allumer la bande de LED :</p> </li> </ol> <pre><code>from microbit import *\nfrom neopixel import *\n\n# Fonctions\ndef allumer_leds(bande_led):\n    for i in range(30):\n        # on defini la couleur de la led actuelle\n        color = ...\n        bande_led[i] = color\n        bande_led.show()\n        sleep(100)\n\n# Programme principal\nbande_led = NeoPixel(pin0, 30)\nallumer_leds(bande_led)\nsleep(2000)\nbande_led.clear()\n</code></pre> <p>Que fait ce programme ?</p> <ol> <li> <p>Compl\u00e9ter le programme pour allumer la bande de LED en rouge</p> </li> <li> <p>Tester le programme</p> </li> <li> <p>Essayez de changer la couleur de la bande de LED</p> </li> </ol>"},{"location":"Seconde/PhotographieNumerique/ImagerieNumeriqueMicrobit/ImagerieMicrobit/#3-a-vous-de-jouer","title":"3. A vous de jouer","text":"<ol> <li>On veut faire une fonction pour allumer la bande quand on appuie sur le bouton A de la carte microbit. Compl\u00e9ter le programme suivant :</li> </ol> <pre><code>from microbit import *\nfrom neopixel import *\n\n# Fonctions\ndef allumer_leds(bande_led):\n    for i in range(30):\n        # on defini la couleur de la led actuelle\n        color = ...\n        bande_led[i] = color\n        bande_led.show()\n        sleep(100)\n\n# Programme principal\nbande_led = NeoPixel(pin0, 30)\n\nwhile True:\n    if ... :\n        allumer_leds(bande_led)\n    else:\n        bande_led.clear()\n</code></pre> <ol> <li>On voudrait maintenant allumer la bande de LED en rouge quand on appuie sur le bouton A et en bleu quand on appuie sur le bouton B. Compl\u00e9ter le programme suivant :</li> </ol> <pre><code>from microbit import *\nfrom neopixel import *\n\n# Fonctions\ndef allumer_leds(bande_led, couleur):\n    for i in range(30):\n        # on defini la couleur de la led actuelle\n        color = ...\n        bande_led[i] = color\n        bande_led.show()\n        sleep(100)\n\n# Programme principal\nbande_led = NeoPixel(pin0, 30)\n\nwhile True:\n    if ... :\n        allumer_leds(bande_led, ...)\n    elif ... :\n        allumer_leds(bande_led, ...)\n    else:\n        bande_led.clear()\n</code></pre> <ol> <li>Enfin, on va essayer de faire une fonction pour allumer la bande de LED avec des couleurs al\u00e9atoires. Compl\u00e9ter le programme suivant :</li> </ol> <pre><code>from microbit import *\nfrom neopixel import *\nfrom random import randint\n\n# Fonctions\ndef allumer_leds(bande_led):\n    for i in range(30):\n        # on defini la couleur de la led actuelle\n        color = ...\n        bande_led[i] = color\n        bande_led.show()\n        sleep(100)\n\n# Programme principal\nbande_led = NeoPixel(pin0, 30)\n\nactif = False\nwhile True:\n    if button_a.is_pressed():\n        if not actif:\n            actif = True\n            allumer_leds(bande_led)\n    else:\n        bande_led.clear()\n        actif = False\n</code></pre>"},{"location":"Seconde/ReseauxSociaux/Cours/","title":"R\u00e9seaux sociaux activit\u00e9","text":""},{"location":"Seconde/ReseauxSociaux/Cours/#historique-petit-monde-de-milgram","title":"Historique : Petit monde de Milgram","text":"<p>En 1967, Stanley Milgram, un psychologue am\u00e9ricain, a men\u00e9 une exp\u00e9rience pour d\u00e9montrer que le monde est plus petit qu'on ne le pense. Il a envoy\u00e9 des lettres \u00e0 des personnes choisies au hasard dans le Nebraska en leur demandant de les transmettre \u00e0 une personne cible \u00e0 Boston. Les personnes devaient transmettre la lettre \u00e0 une personne qu'ils connaissaient et qui \u00e9tait susceptible de conna\u00eetre la personne cible.</p> <p></p> <p>Il a d\u00e9couvert que les lettres mettaient en moyenne 6 interm\u00e9diaires pour arriver \u00e0 destination. C'est de l\u00e0 que vient l'expression \"6 degr\u00e9s de s\u00e9paration\" qui signifie que toute personne sur Terre est reli\u00e9e \u00e0 une autre par une cha\u00eene de connaissances de 6 personnes au maximum.</p> <p>Aujourd'hui, les r\u00e9seaux sociaux permettent de mettre en relation des personnes qui ne se connaissent pas directement. C'est ce qu'on appelle le \"petit monde de Milgram\". Ils semblent m\u00eame r\u00e9duire le nombre de degr\u00e9s de s\u00e9paration entre deux personnes au hasard.</p>"},{"location":"Seconde/ReseauxSociaux/Cours/#activite","title":"Activit\u00e9","text":"<p>Pour comprendre comment les r\u00e9seaux sociaux peuvent rapprocher les gens, on va simuler une cha\u00eene de connaissances pour relier deux personnes. Repr\u00e9sentons une classe de 9 \u00e9l\u00e8ves qui se connaissent plus ou moins. Les traits repr\u00e9sentent les \u00e9l\u00e8ves qui sont amis.</p> <pre><code>\ngraph LR\n    A[Anthony] --- C[Charlie]\n    A --- V[Valentin]\n    A --- H[Hugo]\n\n    B[Alan] --- C[Charlie]\n    B --- H\n\n    C --- D[David]\n    C --- H\n    C --- P[Peter]\n\n    P --- F[Franck]\n    P --- E[Eve]\n    P --- D\n\n    D --- L[Lote]\n    D --- F\n    D --- E\n\n    E --- F\n\n\n</code></pre> x Anthony Alan Charlie David Eve Lote Franck Peter Hugo Valentin Anthony x 2 1 2 3 3 3 2 1 1 Alan Charlie David Eve Franck Peter Hugo Valentin"},{"location":"Seconde/Web/Cours/","title":"Principe de fonctionnement du web","text":""},{"location":"Seconde/Web/Cours/#modele-client-serveur","title":"Mod\u00e8le client serveur","text":"<p>Le web repose sur un mod\u00e8le client-serveur. Le client est un logiciel qui permet de consulter des ressources sur le web. Le serveur est un ordinateur qui h\u00e9berge des ressources web. Lorsqu'un client demande une ressource, il envoie une requ\u00eate au serveur. Le serveur r\u00e9pond \u00e0 cette requ\u00eate en envoyant la ressource demand\u00e9e.</p> <p></p>"},{"location":"Seconde/Web/Cours/#url","title":"URL","text":"<p>Une URL (Uniform Resource Locator) est une adresse qui permet de localiser une ressource sur le web. Elle est compos\u00e9e de plusieurs parties :</p> <ul> <li>Le protocole de communication (<code>http://</code>, <code>https://</code>)</li> <li>Le nom de domaine du serveur (<code>www.example.com</code>)</li> <li>Le chemin vers la ressource (<code>/path/to/resource</code>)</li> <li>Le nom de la ressource (<code>filename.html</code>)</li> <li>Les param\u00e8tres de la requ\u00eate (<code>?param1=value1&amp;param2=value2</code>)</li> </ul> <p>Exemple d'URL : <code>https://www.example.com/path/to/resource/filename.html?param1=value1&amp;param2=value2</code></p> <p><code>https://fr.wikipedia.org/wiki/Grace_Hopper</code></p> <p>Dans cet exemple, <code>https://</code> est le protocole de communication, <code>fr.wikipedia.org</code> est le nom de domaine, <code>/wiki/</code> est le chemin vers la ressource, et <code>Grace_Hopper</code> est le nom de la ressource. Il n'y a pas de param\u00e8tres de requ\u00eate dans cet exemple.</p>"},{"location":"Seconde/Web/Cours/#protocole-http","title":"Protocole HTTP","text":"<p>Dans les liens de pages web, on trouve souvent le pr\u00e9fixe <code>http://</code> ou <code>https://</code>. Ces pr\u00e9fixes indiquent le protocole de communication utilis\u00e9 pour transf\u00e9rer les donn\u00e9es.</p> <p>Le protocole HTTP (HyperText Transfer Protocol) est un protocole de communication qui permet de transf\u00e9rer des donn\u00e9es sur le web. Il repose sur le mod\u00e8le client-serveur d\u00e9crit pr\u00e9c\u00e9demment.</p> <p>Le protocole HTTPS (HyperText Transfer Protocol Secure) est une version s\u00e9curis\u00e9e du protocole HTTP. Il utilise une couche de chiffrement pour s\u00e9curiser les \u00e9changes de donn\u00e9es entre le client et le serveur.</p>"},{"location":"Seconde/Web/Cours/#methodes-http","title":"M\u00e9thodes HTTP","text":"<p>Dans le protocole HTTP, les requ\u00eates sont envoy\u00e9es par le client au serveur \u00e0 l'aide de diff\u00e9rentes m\u00e9thodes. Les principales m\u00e9thodes HTTP sont les suivantes :</p> <ul> <li><code>GET</code> : demande une ressource au serveur</li> <li><code>POST</code> : envoie des donn\u00e9es au serveur pour traitement</li> <li><code>PUT</code> : met \u00e0 jour une ressource sur le serveur</li> <li><code>DELETE</code> : supprime une ressource sur le serveur</li> <li>etc...</li> </ul>"},{"location":"Seconde/Web/Cours/#html","title":"HTML","text":"<p>Le langage HTML (HyperText Markup Language) est le langage de programmation utilis\u00e9 pour cr\u00e9er des pages web. Il permet de structurer le contenu d'une page en utilisant des balises.</p> <p>Une balise prend la forme : <code>&lt;nom_de_la_balise&gt;contenu&lt;/nom_de_la_balise&gt;</code></p> <p>Par exemple, la balise <code>&lt;h1&gt;titre&lt;/h1&gt;</code> est utilis\u00e9e pour cr\u00e9er un titre de niveau 1.</p>"},{"location":"Seconde/Web/Cours/#balises-communes-en-html","title":"Balises communes en HTML","text":"<p>Voici quelques balises HTML couramment utilis\u00e9es pour structurer le contenu d'une page web :</p> <ul> <li><code>&lt;h1&gt; titre &lt;/h1&gt;</code> : titre de niveau 1</li> <li><code>&lt;p&gt; contenu &lt;/p&gt;</code> : paragraphe</li> <li><code>&lt;a href=\"url\"&gt; texte &lt;/a&gt;</code> : lien hypertexte</li> <li><code>&lt;img src=\"url\" alt=\"texte_alternatif\"&gt;</code> : image</li> <li><code>&lt;ul&gt; &lt;li&gt; \u00e9l\u00e9ment1 &lt;/li&gt; &lt;li&gt; \u00e9l\u00e9ment2 &lt;/li&gt; &lt;/ul&gt;</code> : liste non ordonn\u00e9e</li> <li><code>&lt;ol&gt; &lt;li&gt; \u00e9l\u00e9ment1 &lt;/li&gt; &lt;li&gt; \u00e9l\u00e9ment2 &lt;/li&gt; &lt;/ol&gt;</code> : liste ordonn\u00e9e</li> <li><code>&lt;table&gt; &lt;tr&gt; &lt;td&gt; cellule1 &lt;/td&gt; &lt;td&gt; cellule2 &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;</code> : tableau</li> <li><code>&lt;div&gt; contenu &lt;/div&gt;</code> : division g\u00e9n\u00e9rique</li> </ul>"},{"location":"Seconde/Web/Cours/#liens-hypertextes","title":"Liens hypertextes","text":"<p>Les liens hypertextes sont des \u00e9l\u00e9ments interactifs qui permettent de naviguer entre les diff\u00e9rentes pages web. Ils sont g\u00e9n\u00e9ralement repr\u00e9sent\u00e9s par du texte ou une image soulign\u00e9e ou color\u00e9e.</p> <p>Un lien hypertexte est d\u00e9fini par la balise <code>&lt;a&gt;</code> avec l'attribut <code>href</code> qui contient l'URL de la page vers laquelle le lien pointe.</p> <p>Exemple de lien hypertexte : <code>&lt;a href=\"https://www.example.com\"&gt;Cliquez ici&lt;/a&gt;</code></p>"},{"location":"Seconde/Web/Cours/#format-de-fichier-html","title":"Format de fichier HTML","text":"<p>Une page HTML est structur\u00e9e en diff\u00e9rentes sections :</p> <ul> <li><code>&lt;!DOCTYPE html&gt;</code> : d\u00e9claration du type de document</li> <li><code>&lt;html&gt;</code> : balise racine du document</li> <li><code>&lt;head&gt;</code> : en-t\u00eate du document (m\u00e9tadonn\u00e9es, liens vers des fichiers CSS ou JavaScript)</li> <li><code>&lt;title&gt;</code> : titre de la page</li> <li><code>&lt;body&gt;</code> : corps du document (contenu visible par l'utilisateur)</li> <li><code>&lt;h1&gt;</code>, <code>&lt;p&gt;</code>, <code>&lt;a&gt;</code>, <code>&lt;img&gt;</code>, etc... : balises pour structurer le contenu</li> </ul> <p>Ce qui donne comme base :</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Titre de la page&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;Titre principal&lt;/h1&gt;\n        &lt;p&gt;Paragraphe de texte&lt;/p&gt;\n        &lt;a href=\"https://www.example.com\"&gt;Lien hypertexte&lt;/a&gt;\n        &lt;img src=\"image.jpg\" alt=\"Texte alternatif\"&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"Seconde/Web/Cours/#css","title":"CSS","text":"<p>Le CSS (Cascading Style Sheets) est un langage de programmation utilis\u00e9 pour styliser les pages web. Il permet de d\u00e9finir la pr\u00e9sentation visuelle des \u00e9l\u00e9ments HTML, comme la couleur, la taille, la police, etc...</p> <p>On peut inclure du CSS dans une page HTML en utilisant la balise en liant un fichier CSS externe \u00e0 l'aide de la balise <code>&lt;link&gt;</code>.</p> <p>Par exemple :</p> <pre><code>    &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"styles.css\"&gt;\n</code></pre> <p>Permet de lier le fichier <code>styles.css</code> \u00e0 la page HTML.</p>"},{"location":"Seconde/Web/Cours/#conclusion","title":"Conclusion","text":"<p>Le web est donc un ensemble de pages web reli\u00e9es entre elles par des liens hypertextes. Ces pages sont \u00e9crites en langage HTML et peuvent contenir du texte, des images, des vid\u00e9os, etc...</p>"},{"location":"Seconde/Web/Exercices/","title":"Principe du web : activit\u00e9","text":""},{"location":"Seconde/Web/Exercices/#objectif","title":"Objectif","text":"<p>On va cr\u00e9er une page web simple en HTML et CSS pour comprendre les principes de base du web.</p>"},{"location":"Seconde/Web/Exercices/#etape-1-creer-une-page-html","title":"Etape 1 : Cr\u00e9er une page HTML","text":"<p>Cr\u00e9er un fichier <code>index.html</code> et ajouter le code suivant :</p> <p>Quand on cr\u00e9\u00e9 un site web avec plusieurs pages, la page d'accueil est conventionnellement nomm\u00e9e <code>index.html</code>.</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;p&gt; Page web en construction &lt;/p&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"Seconde/Web/Exercices/#etape-2-ouvrir-la-page-dans-un-navigateur","title":"Etape 2 : Ouvrir la page dans un navigateur","text":"<p>Ouvrez le fichier <code>index.html</code> dans un navigateur web comme Firefox ou Chrome. Vous devriez voir le texte \"Page web en construction\" s'afficher dans la fen\u00eatre du navigateur.</p>"},{"location":"Seconde/Web/Exercices/#etape-3-ajouter-un-titre","title":"Etape 3 : Ajouter un titre","text":"<p>Dans la partie <code>&lt;head&gt;</code> de votre document, ajoutez un titre pour votre page :</p> <p>C'est la balise <code>&lt;title&gt;</code> qui permet de d\u00e9finir le titre de la page. Le titre s'affiche dans l'onglet du navigateur.</p>"},{"location":"Seconde/Web/Exercices/#etape-4-changer-le-texte","title":"Etape 4 : Changer le texte","text":"<p>Modifiez le texte \"Page web en construction\" pour quelque chose de plus appropri\u00e9, comme \"Bienvenue sur mon site web\".</p> <p>Ajoutez un deuxi\u00e8me paragraphe \u00e0 la suite du premier avec un contenu de votre choix.</p>"},{"location":"Seconde/Web/Exercices/#etape-5-ajouter-une-image","title":"Etape 5 : Ajouter une image","text":"<p>Pour ajouter une image \u00e0 la page, r\u00e9cup\u00e9rez une image de votre choix sur internet et enregistrez-la dans le m\u00eame dossier que votre fichier <code>index.html</code>.</p> <p>Ajoutez la balise <code>&lt;img&gt;</code> dans le corps de votre document pour afficher l'image.</p> <pre><code>&lt;img src=\"image.jpg\" alt=\"Texte alternatif\"&gt;\n</code></pre> <p>Dans cet exemple, <code>image.jpg</code> est le nom du fichier image que vous avez enregistr\u00e9, remplacez-le par le nom de votre fichier avec l'extension correspondante.</p> <p>L'attribut <code>alt</code> permet de d\u00e9finir un texte alternatif qui s'affiche si l'image ne peut pas \u00eatre charg\u00e9e.</p>"},{"location":"Seconde/Web/Exercices/#etape-6-ajouter-un-lien","title":"Etape 6 : Ajouter un lien","text":"<p>Ajoutez un lien hypertexte vers la page du cours, elle est \u00e0 l'adresse suivante : <code>https://antoinebaesen.github.io/Seconde/Web/Cours.html</code>.</p> <p>La balise de lien hypertexte est de la forme :</p> <pre><code>&lt;a href=\"url\"&gt; texte &lt;/a&gt;\n</code></pre> <p>Remplacez <code>url</code> par l'adresse de la page du cours et <code>texte</code> par le texte que vous voulez afficher pour le lien.</p>"},{"location":"Seconde/Web/Exercices/#etape-7-ajouter-une-liste","title":"Etape 7 : Ajouter une liste","text":"<p>Ajoutez une liste non ordonn\u00e9e ou ordonn\u00e9e \u00e0 votre page web.</p> <p>Pour une liste non ordonn\u00e9e, utilisez les balises <code>&lt;ul&gt;</code> et <code>&lt;li&gt;</code> :</p> <pre><code>&lt;ul&gt;\n    &lt;li&gt; \u00e9l\u00e9ment1 &lt;/li&gt;\n    &lt;li&gt; \u00e9l\u00e9ment2 &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <p>Pour une liste ordonn\u00e9e, utilisez les balises <code>&lt;ol&gt;</code> et <code>&lt;li&gt;</code> :</p> <pre><code>&lt;ol&gt;\n    &lt;li&gt; \u00e9l\u00e9ment1 &lt;/li&gt;\n    &lt;li&gt; \u00e9l\u00e9ment2 &lt;/li&gt;\n&lt;/ol&gt;\n</code></pre> <p>Essayez les deux types de listes pour voir la diff\u00e9rence.</p>"},{"location":"Seconde/Web/Exercices/#etape-8-ajouter-du-style-avec-css","title":"Etape 8 : Ajouter du style avec CSS","text":"<p>Cr\u00e9ez un fichier <code>style.css</code> dans le m\u00eame dossier que votre fichier <code>index.html</code>.</p> <p>Ajoutez le code suivant dans votre fichier <code>style.css</code> :</p> <pre><code>\nbody {\n    background-color: #f3f3f3;\n    font-family: Arial, sans-serif;\n}\n\np {\n    color: #333;\n    font-size: 18px;\n}\n\n</code></pre> <p>Pour lier votre fichier CSS \u00e0 votre page HTML, ajoutez la balise <code>&lt;link&gt;</code> dans la partie <code>&lt;head&gt;</code> de votre document :</p> <pre><code>&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\"&gt;\n</code></pre> <p>Rafraichissez votre page dans le navigateur pour voir les changements de style appliqu\u00e9s.</p>"},{"location":"Terminale/","title":"Cours NSI - Terminale","text":""},{"location":"Terminale/#cours","title":"Cours","text":""},{"location":"Terminale/#1-rentree","title":"1. Rentr\u00e9e","text":"<p>Cours : Web Pdf</p>"},{"location":"Terminale/#2-architecture-dune-machine","title":"2. Architecture d'une machine","text":"<p>// TODO</p> <p>Cours : Web Pdf</p> <p>Activit\u00e9 : Web Pdf</p>"},{"location":"Terminale/#3-rappels-sur-le-langage-python","title":"3. Rappels sur le langage Python","text":"<p>// TODO</p> <p>Cours : Web Pdf</p> <p>Exercice : Web Pdf</p>"},{"location":"Terminale/#4-programmation-orientee-objet","title":"4. Programmation orient\u00e9e objet","text":"<p>// TODO</p> <p>Cours : Web Pdf</p> <p>// TODO</p> <p>Exercice : Web Pdf</p>"},{"location":"Terminale/#5-arbres","title":"5. Arbres","text":"<p>// TODO</p> <p>Cours : Web Pdf</p> <p>// TODO</p> <p>Exercice : Web Pdf</p>"},{"location":"Terminale/#6-gestion-des-processus-et-des-ressources-par-un-systeme-dexploitation","title":"6. Gestion des processus et des ressources par un syst\u00e8me d'exploitation","text":"<p>// TODO</p> <p>Cours : Web Pdf</p> <p>// TODO</p> <p>Exercice : Web Pdf</p>"},{"location":"Terminale/#7-documentation-et-debug","title":"7. Documentation et Debug","text":"<p>// TODO</p> <p>Activit\u00e9 : Web Pdf</p>"},{"location":"Terminale/#8-recursivite","title":"8. R\u00e9cursivit\u00e9","text":"<p>// TODO</p> <p>Cours : Web Pdf</p> <p>// TODO</p> <p>Exercice : Web Pdf</p>"},{"location":"Terminale/#9-securisation-des-communications","title":"9. S\u00e9curisation des communications","text":"<p>// TODO</p> <p>Cours : Web Pdf</p> <p>// TODO</p> <p>Exercice : Web Pdf</p>"},{"location":"Terminale/#10-base-de-donnees","title":"10. Base de donn\u00e9es","text":"<p>Cours : Web Pdf</p> <p>// TODO</p> <p>Exercice : Web Pdf</p>"},{"location":"Terminale/#11-piles-et-files","title":"11. Piles et Files","text":"<p>// TODO</p> <p>Cours : Web Pdf</p> <p>// TODO</p> <p>Exercice : Web Pdf</p>"},{"location":"Terminale/#12-routage-dans-les-reseaux","title":"12. Routage dans les r\u00e9seaux","text":"<p>// TODO</p> <p>Cours : Web Pdf</p> <p>// TODO</p> <p>Exercice : Web Pdf</p>"},{"location":"Terminale/#13-diviser-pour-regner","title":"13. Diviser pour r\u00e9gner","text":"<p>// TODO</p> <p>Cours : Web Pdf</p> <p>// TODO</p> <p>Exercice : Web Pdf</p>"},{"location":"Terminale/#14-sql","title":"14. SQL","text":"<p>Cours : Web Pdf</p> <p>Exercice : Web Pdf</p>"},{"location":"Terminale/#15-programmation-dynamique","title":"15. Programmation dynamique","text":"<p>// TODO</p> <p>Cours : Web Pdf</p> <p>// TODO</p> <p>Exercice : Web Pdf</p>"},{"location":"Terminale/#16-graphes","title":"16. Graphes","text":"<p>// TODO</p> <p>Cours : Web Pdf</p> <p>// TODO</p> <p>Exercice : Web Pdf</p>"},{"location":"Terminale/#17-paradigmes-de-programmation","title":"17. Paradigmes de programmation","text":"<p>// TODO</p> <p>Cours : Web Pdf</p>"},{"location":"Terminale/#18-algorithmes-de-recherche-textuelle","title":"18. Algorithmes de recherche textuelle","text":"<p>Cours : Web Pdf</p>"},{"location":"Terminale/#projets","title":"projets","text":"<p>// TODO</p>"},{"location":"Terminale/Architecture/ArchitectureMachine/Manuel/","title":"Architecture Machine","text":""},{"location":"Terminale/Architecture/ArchitectureMachine/Manuel/#introduction","title":"Introduction","text":"<p>L'architecture machine est la structure interne d'un ordinateur. Elle est compos\u00e9e de plusieurs \u00e9l\u00e9ments qui permettent \u00e0 l'ordinateur de fonctionner. Ces \u00e9l\u00e9ments sont reli\u00e9s entre eux par des bus. Les principaux \u00e9l\u00e9ments de l'architecture machine sont le processeur, la m\u00e9moire, les p\u00e9riph\u00e9riques d'entr\u00e9e/sortie et le bus.</p>"},{"location":"Terminale/Architecture/ArchitectureMachine/Manuel/#processeur","title":"Processeur","text":"<p>Le processeur est le cerveau de l'ordinateur. Il ex\u00e9cute les instructions du programme en cours d'ex\u00e9cution. Il est compos\u00e9 de plusieurs parties : l'unit\u00e9 de contr\u00f4le, l'unit\u00e9 arithm\u00e9tique et logique, les registres et l'unit\u00e9 de gestion de la m\u00e9moire.</p>"},{"location":"Terminale/Architecture/ArchitectureMachine/Manuel/#unite-de-controle","title":"Unit\u00e9 de contr\u00f4le","text":"<p>L'unit\u00e9 de contr\u00f4le est responsable de la gestion des instructions du programme. Elle r\u00e9cup\u00e8re les instructions en m\u00e9moire, les d\u00e9code et les ex\u00e9cute.</p>"},{"location":"Terminale/Architecture/ArchitectureMachine/Manuel/#unite-arithmetique-et-logique","title":"Unit\u00e9 arithm\u00e9tique et logique","text":"<p>L'unit\u00e9 arithm\u00e9tique et logique est responsable des op\u00e9rations arithm\u00e9tiques et logiques. Elle effectue les calculs et les comparaisons n\u00e9cessaires \u00e0 l'ex\u00e9cution des instructions.</p>"},{"location":"Terminale/Architecture/ArchitectureMachine/Manuel/#registres","title":"Registres","text":"<p>Les registres sont des m\u00e9moires internes au processeur. Ils stockent les donn\u00e9es temporaires n\u00e9cessaires \u00e0 l'ex\u00e9cution des instructions.</p>"},{"location":"Terminale/Architecture/ArchitectureMachine/Manuel/#unite-de-gestion-de-la-memoire","title":"Unit\u00e9 de gestion de la m\u00e9moire","text":"<p>L'unit\u00e9 de gestion de la m\u00e9moire est responsable de l'acc\u00e8s \u00e0 la m\u00e9moire. Elle r\u00e9cup\u00e8re les donn\u00e9es en m\u00e9moire et les stocke dans les registres pour les traiter.</p>"},{"location":"Terminale/Architecture/ArchitectureMachine/Manuel/#memoire","title":"M\u00e9moire","text":"<p>La m\u00e9moire est l'espace de stockage des donn\u00e9es et des programmes. Elle est compos\u00e9e de plusieurs parties : la m\u00e9moire vive (RAM), la m\u00e9moire morte (ROM) et la m\u00e9moire de masse.</p>"},{"location":"Terminale/Architecture/ArchitectureMachine/Manuel/#memoire-vive-ram","title":"M\u00e9moire vive (RAM)","text":"<p>La m\u00e9moire vive est une m\u00e9moire volatile. Elle stocke les donn\u00e9es et les programmes en cours d'ex\u00e9cution. Elle est effac\u00e9e \u00e0 chaque extinction de l'ordinateur.</p>"},{"location":"Terminale/Architecture/ArchitectureMachine/Manuel/#memoire-morte-rom","title":"M\u00e9moire morte (ROM)","text":"<p>La m\u00e9moire morte est une m\u00e9moire non volatile. Elle stocke les instructions de d\u00e9marrage de l'ordinateur. Elle est conserv\u00e9e m\u00eame apr\u00e8s extinction de l'ordinateur.</p>"},{"location":"Terminale/Architecture/ArchitectureMachine/Manuel/#memoire-de-masse","title":"M\u00e9moire de masse","text":"<p>La m\u00e9moire de masse est un espace de stockage permanent. Elle stocke les donn\u00e9es et les programmes de mani\u00e8re permanente. Elle peut \u00eatre un disque dur, une cl\u00e9 USB ou un CD.</p>"},{"location":"Terminale/Architecture/ArchitectureMachine/Manuel/#peripheriques-dentreesortie","title":"P\u00e9riph\u00e9riques d'entr\u00e9e/sortie","text":"<p>Les p\u00e9riph\u00e9riques d'entr\u00e9e/sortie permettent \u00e0 l'ordinateur de communiquer avec l'ext\u00e9rieur. Ils sont reli\u00e9s \u00e0 l'ordinateur par des ports d'entr\u00e9e/sortie. Les principaux p\u00e9riph\u00e9riques d'entr\u00e9e/sortie sont le clavier, la souris, l'\u00e9cran, l'imprimante et le disque dur.</p>"},{"location":"Terminale/Architecture/ArchitectureMachine/Manuel/#bus","title":"Bus","text":"<p>Le bus est un ensemble de fils \u00e9lectriques qui permettent la communication entre les diff\u00e9rents \u00e9l\u00e9ments de l'ordinateur. Il transporte les donn\u00e9es, les adresses et les signaux de contr\u00f4le. Il est compos\u00e9 de plusieurs bus : le bus de donn\u00e9es, le bus d'adresse et le bus de contr\u00f4le.</p>"},{"location":"Terminale/Architecture/ArchitectureMachine/Manuel/#bus-de-donnees","title":"Bus de donn\u00e9es","text":"<p>Le bus de donn\u00e9es transporte les donn\u00e9es entre les diff\u00e9rents \u00e9l\u00e9ments de l'ordinateur. Il permet le transfert des donn\u00e9es entre la m\u00e9moire, le processeur et les p\u00e9riph\u00e9riques.</p>"},{"location":"Terminale/Architecture/ArchitectureMachine/Manuel/#bus-dadresse","title":"Bus d'adresse","text":"<p>Le bus d'adresse transporte les adresses m\u00e9moire entre les diff\u00e9rents \u00e9l\u00e9ments de l'ordinateur. Il permet d'adresser les donn\u00e9es en m\u00e9moire et les p\u00e9riph\u00e9riques.</p>"},{"location":"Terminale/Architecture/ArchitectureMachine/Manuel/#bus-de-controle","title":"Bus de contr\u00f4le","text":"<p>Le bus de contr\u00f4le transporte les signaux de contr\u00f4le entre les diff\u00e9rents \u00e9l\u00e9ments de l'ordinateur. Il permet de synchroniser les op\u00e9rations et de g\u00e9rer les interruptions.</p>"},{"location":"Terminale/Architecture/ArchitectureMachine/Manuel/#bios","title":"BIOS","text":"<p>Le BIOS (Basic Input/Output System) est un programme de d\u00e9marrage de l'ordinateur. Il est stock\u00e9 dans la m\u00e9moire morte et est ex\u00e9cut\u00e9 au d\u00e9marrage de l'ordinateur. Il initialise les composants de l'ordinateur et charge le syst\u00e8me d'exploitation en m\u00e9moire. Il permet \u00e9galement de configurer le mat\u00e9riel de l'ordinateur.</p>"},{"location":"Terminale/Architecture/ArchitectureMachine/Manuel/#elemets-de-larchitecture-machine","title":"Elemets de l'architecture machine","text":"<ul> <li>Processeur : cerveau de l'ordinateur, ex\u00e9cute les instructions du programme.</li> <li>M\u00e9moire : espace de stockage des donn\u00e9es et des programmes.</li> <li>P\u00e9riph\u00e9riques d'entr\u00e9e/sortie : permettent \u00e0 l'ordinateur de communiquer avec l'ext\u00e9rieur.</li> <li>Bus : ensemble de fils \u00e9lectriques qui permettent la communication entre les diff\u00e9rents \u00e9l\u00e9ments de l'ordinateur.</li> <li>Carte m\u00e8re : supporte les diff\u00e9rents \u00e9l\u00e9ments de l'ordinateur et assure leur connexion.</li> <li>Alimentation : fournit l'\u00e9nergie n\u00e9cessaire au fonctionnement de l'ordinateur.</li> <li>Ventilateur : refroidit les composants de l'ordinateur pour \u00e9viter la surchauffe.</li> <li>Disque dur : stocke les donn\u00e9es de mani\u00e8re permanente.</li> <li>Carte graphique : g\u00e8re l'affichage des images et des vid\u00e9os sur l'\u00e9cran.</li> <li>Carte son : g\u00e8re la sortie audio de l'ordinateur.</li> <li>Carte r\u00e9seau : permet la connexion \u00e0 un r\u00e9seau informatique.</li> <li>Lecteur optique : lit les CD, DVD et Blu-ray.</li> <li>Ports d'entr\u00e9e/sortie : permettent de brancher les p\u00e9riph\u00e9riques d'entr\u00e9e/sortie \u00e0 l'ordinateur.</li> <li>BIOS : programme de d\u00e9marrage de l'ordinateur.</li> </ul>"},{"location":"Terminale/BaseDonnees/Conception/Cours/","title":"Bases de donn\u00e9es","text":""},{"location":"Terminale/BaseDonnees/Conception/Cours/#definition","title":"D\u00e9finition","text":"<p>Une base de donn\u00e9es est un ensemble de donn\u00e9es structur\u00e9es et organis\u00e9es (c'est \u00e0 dire stock\u00e9es dans des tables) de mani\u00e8re \u00e0 pouvoir \u00eatre facilement consult\u00e9es, modifi\u00e9es et mises \u00e0 jour.</p>"},{"location":"Terminale/BaseDonnees/Conception/Cours/#vocabulaire","title":"Vocabulaire","text":"<p>On range les informations dans des tables (aussi appel\u00e9es entit\u00e9s) qui sont compos\u00e9es de champs (ce qui correspond aux colonnes dans un tableau). Chaque champ est associ\u00e9 \u00e0 un type pr\u00e9cis (entier, texte, date, etc.). Le champ age par exemple, ne pourra contenir que des nombres entiers.</p> <p>On appelle enregistrement une nouvelle entr\u00e9e dans une table (ce qui correspond \u00e0 une ligne dans un tableau).</p>"},{"location":"Terminale/BaseDonnees/Conception/Cours/#exemple","title":"Exemple","text":"<p>Dragon : | Nom    | Age | | ------ | --- | | Dragou | 10  | | Bloup  | 5   |</p> <p>Repr\u00e9sente la relation \"Dragon\" qui poss\u00e8de deux champs (Nom et Age). On a deux enregistrements (Dragou et Bloup).</p>"},{"location":"Terminale/BaseDonnees/Conception/Cours/#mcd","title":"MCD","text":"<p>Le Mod\u00e8le Conceptuel de Donn\u00e9es (MCD) est un sch\u00e9ma permettant de repr\u00e9senter les donn\u00e9es d'une base de donn\u00e9es. C'est un sch\u00e9ma repr\u00e9sentant chaque entit\u00e9 (qui est l'\u00e9quivalent dans le MCD d'une table ou d'une relation) ainsi que les relations entre les entit\u00e9s.</p> <p>Ce sch\u00e9ma permet de repr\u00e9senter les donn\u00e9es de mani\u00e8re abstraite, sans se soucier de la mani\u00e8re dont elles sont stock\u00e9es.</p> <p>L'entit\u00e9 est repr\u00e9sent\u00e9e par un nom \u00e9crit en majuscules et au singulier. Les champs de l'entit\u00e9 sont repr\u00e9sent\u00e9s par des noms \u00e9crits en minuscules.</p>"},{"location":"Terminale/BaseDonnees/Conception/Cours/#exemple_1","title":"Exemple","text":"<p>La table <code>Dragon</code> poss\u00e8de les champs <code>Nom</code> et <code>Age</code>. Son MCD est la transposition de cette phrase en sch\u00e9ma :</p> <pre><code>DRAGON : nom, age\n</code></pre>"},{"location":"Terminale/BaseDonnees/Conception/Cours/#mld","title":"MLD","text":"<p>Le Mod\u00e8le Logique de Donn\u00e9es (MLD) est un sch\u00e9ma permettant de repr\u00e9senter les donn\u00e9es d'une base de donn\u00e9es sous la forme d'un diagramme de classe. C'est un sch\u00e9ma permettant de repr\u00e9senter les donn\u00e9es d'une base de donn\u00e9es. Chaque table est repr\u00e9sent\u00e9e par un rectangle contenant les champs de la table. On repr\u00e9sente les relations entre les tables par des fl\u00e8ches.</p>"},{"location":"Terminale/BaseDonnees/Conception/Cours/#exemple_2","title":"Exemple","text":"<p>La table <code>Dragon</code> poss\u00e8de les champs <code>Nom</code> et <code>Age</code>. On peut repr\u00e9senter cette table par un diagramme de classe :</p> <pre><code>@startuml\n\nclass Dragon {\n  - Nom: string\n  - Age: int\n}\n@enduml\n</code></pre>"},{"location":"Terminale/BaseDonnees/Conception/Cours/#exercice-1","title":"Exercice 1 :","text":"<p>Dessinez le MLD pour une table <code>Maison</code> qui poss\u00e8de les champs <code>Nom</code> et <code>Taille</code>.</p>"},{"location":"Terminale/BaseDonnees/Conception/Cours/#exercice-2","title":"Exercice 2 :","text":"<p>A partir du MLD suivant, \u00e9crivez la table correspondante et ses diff\u00e9rents champs.</p> <pre><code>@startuml\n\nclass Royaume {\n  - Nom: string\n  - Taille: int\n  - Population: int\n}\n@enduml\n</code></pre>"},{"location":"Terminale/BaseDonnees/Conception/Cours/#cles-primaires","title":"cl\u00e9s primaires","text":"<p>Pour chaque table, on d\u00e9finit une cl\u00e9 primaire qui est un champ unique pour chaque enregistrement. C'est un identifiant unique permettant de distinguer chaque enregistrement. Par exemple, pour une table <code>Dragon</code>, on pourrait d\u00e9finir la cl\u00e9 primaire <code>id_dragon</code> qui serait un nombre entier unique pour chaque dragon. Cela permet de distinguer deux dragons ayant le m\u00eame nom.</p> <p>Note : Une cl\u00e9 primaire peut \u00eatre compos\u00e9e de plusieurs champs. Par exemple, pour une table <code>Eleve</code>, on pourrait d\u00e9finir la cl\u00e9 primaire <code>nom</code> et <code>prenom</code> qui s\u00e9par\u00e9ment ne sont pas uniques mais qui le sont ensemble. L'imporant est que la cl\u00e9 primaire soit unique pour chaque enregistrement.</p> <p>Par convention, on souligne la cl\u00e9 primaire.</p>"},{"location":"Terminale/BaseDonnees/Conception/Cours/#exemple_3","title":"Exemple","text":"<p>DRAGON : id_dragon, nom, age</p>"},{"location":"Terminale/BaseDonnees/Conception/Cours/#exercice-3","title":"Exercice 3","text":"<p>Quelle cl\u00e9 primaire pourrait-on d\u00e9finir pour une table <code>Maison</code> ?</p>"},{"location":"Terminale/BaseDonnees/Conception/Cours/#relations-et-cles-etrangeres","title":"Relations et cl\u00e9s \u00e9trang\u00e8res","text":"<p>Les tables peuvent \u00eatre connect\u00e9es entre elles par des relations qui sont des liens entre les tables. Ces relations sont \u00e9tablies gr\u00e2ce \u00e0 des cl\u00e9s qui sont des colonnes communes \u00e0 deux tables. On peut par exemple relier une table <code>Eleve</code> \u00e0 une table <code>Classe</code> gr\u00e2ce \u00e0 la cl\u00e9 <code>id_classe</code> qui est pr\u00e9sente dans les deux tables.</p>"},{"location":"Terminale/BaseDonnees/Conception/Cours/#exemple_4","title":"Exemple","text":"<p>Voila un exemple de relation entre deux tables : La table <code>Eleve</code> poss\u00e8de les champs <code>id_eleve</code>, <code>nom</code>, <code>age</code> et <code>classe</code>. La table <code>Classe</code> poss\u00e8de les champs <code>id_classe</code>, <code>nom</code> et <code>niveau</code>.</p> <p><code>id_classe</code> est la cl\u00e9 primaire de la table <code>Classe</code> et <code>classe</code> une cl\u00e9 \u00e9trang\u00e8re dans la table <code>Eleve</code>. Cela nous permet d'associer un \u00e9l\u00e8ve \u00e0 une classe. Claque <code>classe</code> dans la table <code>Eleve</code> est une valeur de <code>id_classe</code> dans la table <code>Classe</code>.</p> <p>Les cl\u00e9s \u00e9trang\u00e8res sont repr\u00e9sent\u00e9es par des ast\u00e9risques.</p> <p>Pour repr\u00e9senter cette relation dans un MCD, on peut \u00e9crire :</p> <p>ELEVE : id_eleve, nom, age, *classe CLASSE : id_classe, nom, niveau</p> <p>Le MLD correspondant est le suivant :</p> <pre><code>@startuml\n\nclass Eleve {\n  - id_eleve: int\n  - nom: string\n  - age: int\n  - classe: int\n}\n\nclass Classe {\n  - id_classe: int\n  - nom: string\n  - niveau: string\n}\n\nEleve \"1\" --&gt; \"0..1\" Classe\n\n@enduml\n</code></pre>"},{"location":"Terminale/BaseDonnees/Conception/Cours/#exercice-4","title":"Exercice 4","text":"<p>On a le MCD suivant : </p> <p><code>ROYAUME : &lt;u&gt;__id_royaume__&lt;/u&gt;, nom, taille, population</code> <code>DRAGON : &lt;u&gt;__id_dragon__&lt;/u&gt;, nom, age, *__id_royaume__*</code></p> <p>Pour chaque table, quelle est :  - La cl\u00e9 primaire ? - La/les cl\u00e9(s) \u00e9trang\u00e8re(s) ? (Si il y en a) - Les champs de la table - La cardinalit\u00e9 entre les tables</p>"},{"location":"Terminale/BaseDonnees/Conception/Cours/#exercice-5","title":"Exercice 5","text":"<p>On veut ajouter un lien entre chaque dragon et sa maison. Comment doit-on modifier le MCD ?</p>"},{"location":"Terminale/BaseDonnees/Conception/Cours/#exercice-6","title":"Exercice 6","text":"<p>Compl\u00e9tez alors le MLD suivant :</p> <pre><code>@startuml\n\nclass Dragon {\n  - id_dragon: int\n  - nom: string\n  - age: int\n  - ...\n}\n\nclass Maison {\n  - id_maison: int\n  - nom: string\n  - taille: int\n}\n@enduml\n</code></pre>"},{"location":"Terminale/BaseDonnees/Conception/Cours/#cardinalite","title":"Cardinalit\u00e9","text":"<p>Chaque relation entre deux tables sera associ\u00e9e \u00e0 un nombre pr\u00e9cis d'occurrences de chaque entit\u00e9. On appelle cela la cardinalit\u00e9. On peut par exemple dire qu'un \u00e9l\u00e8ve est associ\u00e9 \u00e0 une et une seule classe (cardinalit\u00e9 1) ou qu'une classe est associ\u00e9e \u00e0 plusieurs \u00e9l\u00e8ves (cardinalit\u00e9 n).</p> <p>La cardinalit\u00e9 entre Eleve et Classe est donc 1..n. (Le premier chiffre correspond \u00e0 la cardinalit\u00e9 de Eleve et le second \u00e0 celle de Classe).</p>"},{"location":"Terminale/BaseDonnees/Conception/Cours/#exercice-7","title":"Exercice 7","text":"<p>Quelle est la cardinalit\u00e9 entre Dragon et Maison ?</p>"},{"location":"Terminale/BaseDonnees/Conception/Cours/#exercice-8","title":"Exercice 8","text":"<p>Imaginons maintenant que certains Dragons aimeraient avoir plusieurs maisons. Comment doit-on modifier la cardinalit\u00e9 entre Dragon et Maison ?</p>"},{"location":"Terminale/BaseDonnees/Conception/Cours/#systeme-de-gestion-de-base-de-donnees-sgbd","title":"Syst\u00e8me de gestion de base de donn\u00e9es (SGBD)","text":"<p>Un SGBD est un logiciel permettant de stocker, de manipuler et de g\u00e9rer des bases de donn\u00e9es. Pour manipuler une base de donn\u00e9es, on utilise un langage de requ\u00eate (le langage SQL en g\u00e9n\u00e9ral).</p> <p>Suite dans le cours sur le langage SQL : Cours sur le langage SQL</p>"},{"location":"Terminale/BaseDonnees/SQL/Cours/","title":"langage SQL","text":"<p>Nous avons vu les mod\u00e8les de conception de bases de donn\u00e9es. L'objectif de ce chapitre est d'expliquer comment interroger et manipuler une base de donn\u00e9e pour par exemple mettre \u00e0 jour des donn\u00e9es et comment s\u00e9lectionner des donn\u00e9es \u00e0 partir de crit\u00e8res divers. Pour ce faire, on va utiliser le langage SQL (pour Structured Query Language).</p> <p>Pour nos exemples on va se baser sur le MCD suivant :</p> <p></p>"},{"location":"Terminale/BaseDonnees/SQL/Cours/#1-le-langage-sql","title":"1. Le langage SQL","text":"<p>SQL est un langage de programmation permettant de g\u00e9rer des bases de donn\u00e9es relationnelles. Un syst\u00e8me de gestion de base de donn\u00e9es (SGBD) est un logiciel qui permet de stocker, manipuler et interroger des bases de donn\u00e9es. Les SGBD les plus connus sont MySQL, PostgreSQL, SQLite, Oracle, SQL Server, etc.</p> <p>Par convention, tous les mots cl\u00e9s SQL sont \u00e9crits en majuscules.</p> <p>Une instruction termine par un point-virgule <code>;</code>.</p>"},{"location":"Terminale/BaseDonnees/SQL/Cours/#2-construire-des-requetes-dinterrogation","title":"2. Construire des requ\u00eates d'interrogation","text":"<p>Une requ\u00eate SQL est une instruction qui permet d'\u00e9x\u00e9cuter une action sur une base de donn\u00e9es. Il existe de nombreux types de requ\u00eates qui sont d\u00e9finit par des mots cl\u00e9s SQL.</p>"},{"location":"Terminale/BaseDonnees/SQL/Cours/#21-le-mot-cle-select","title":"2.1. le mot cl\u00e9 SELECT","text":"<p>Pour choisir quels attributs on veut r\u00e9cup\u00e9rer, on utilise le mot cl\u00e9 <code>SELECT</code> avec le nom des attributs s\u00e9par\u00e9es par des virgules. Pour s\u00e9lectionner tous les attributs, on utilise l'ast\u00e9risque <code>*</code> \u00e0 la place des noms d'attributs (mais c'est d\u00e9conseill\u00e9 car cela peut ralentir la requ\u00eate).</p> <p>Pour choisir depuis quelle table on veut r\u00e9cup\u00e9rer les donn\u00e9es, on utilise le mot cl\u00e9 <code>FROM</code> suivi du nom de la table.</p> <p>La syntaxe sera donc :</p> <pre><code>SELECT attribut1, attribut2, ...\nFROM nom_table;\n</code></pre> <p>Si on veut r\u00e9cup\u00e9rer les titres et les ann\u00e9es de sortie de tous les livres, on peut :</p> <pre><code>\n\n</code></pre> <p>Pour r\u00e9cup\u00e9rer une seule fois chaque valeur, on peut rajouter le mot cl\u00e9 <code>DISTINCT</code> apr\u00e8s <code>SELECT</code>.</p> <p>Par exemple, si on veut r\u00e9cup\u00e9rer tous les auteurs, on \u00e9crira : <code>SELECT DISTINCT nom FROM auteur;</code></p>"},{"location":"Terminale/BaseDonnees/SQL/Cours/#22-le-mot-cle-where","title":"2.2 le mot cl\u00e9 WHERE","text":"<p>Pour filtrer les donn\u00e9es, on utilise le mot cl\u00e9 <code>WHERE</code> suivie d'une condition. Les conditions peuvent \u00eatre des comparaisons, des op\u00e9rateurs logiques, des tests de pr\u00e9sence dans une liste, etc...</p> <p>La syntaxe du where est :</p> <pre><code>SELECT attribut1, attribut2, ...\nFROM nom_table\nWHERE condition;\n</code></pre> <p>Par exemple, si on veut r\u00e9cup\u00e9rer les titres et les ann\u00e9es de sortie des livres publi\u00e9s entre 2000 et 2010, on \u00e9crira :</p> <pre><code>SELECT titre, annee\nFROM livre\nWHERE annee &gt; 2000 AND annee &lt; 2010;\n</code></pre> <p>Pour r\u00e9cup\u00e9rer les informations sur le livre \"1984\", on peut faire la requ\u00eate suivante :</p> <pre><code>\n\n\n\n</code></pre>"},{"location":"Terminale/BaseDonnees/SQL/Cours/#23-le-mot-cle-order-by","title":"2.3. le mot cl\u00e9 ORDER BY","text":"<p>l'utilisation du mot cl\u00e9 <code>ORDER BY</code> permet de trier les r\u00e9sultats selon un attribut pr\u00e9cis. Pour trier dans l'ordre d\u00e9croissant, on ajoute le mot cl\u00e9 <code>DESC</code> apr\u00e8s le nom de l'attribut. Par d\u00e9faut, le tri se fait dans l'ordre croissant ce qui est \u00e9quivalent \u00e0 <code>ASC</code>.</p> <p>La syntaxe sera donc :</p> <pre><code>SELECT attribut1, attribut2, ...\nFROM nom_table\nORDER BY attribut [ASC|DESC];\n</code></pre> <p>Pour r\u00e9cup\u00e9rer tous les livres tri\u00e9s par ann\u00e9e de sortie, la requ\u00eate sera :</p> <pre><code>SELECT titre, annee\nFROM livre\nORDER BY annee ASC;\n</code></pre> <p>Pour r\u00e9cup\u00e9rer tous les auteurs tri\u00e9s par ordre alphab\u00e9tique, on \u00e9crira :</p> <pre><code>\n\n\n</code></pre>"},{"location":"Terminale/BaseDonnees/SQL/Cours/#24-les-jointures","title":"2.4. Les jointures","text":"<p>On peut r\u00e9cup\u00e9rer des donn\u00e9es depuis plusieurs tables. Essayez de r\u00e9cup\u00e9rer les titres de tous les livres et de tous les auteurs. Quel probl\u00e8me rencontrez-vous ?</p> <p>Pour r\u00e9soudre ce probl\u00e8me, on utilise les jointures. Il existe plusieurs types de jointures, mais nous allons nous concentrer sur un seul type : la jointure interne.</p> <p>Pour faire une jointure on utilise le mot cl\u00e9 <code>JOIN</code> suivie du nom de la table \u00e0 joindre et de la condition de jointure.</p> <p>Dans le MCD, la table <code>livre</code> est reli\u00e9e \u00e0 la table <code>auteur</code> par cl\u00e9 \u00e9trang\u00e8re <code>auteur</code>.</p> <p>Pour \u00e9crire cette jointure, on va faire :</p> <pre><code>SELECT titre, prenom, nom\nFROM livre\nJOIN auteur ON livre.auteur = auteur.id;\n</code></pre> <p>Le mot cl\u00e9 <code>ON</code> est suivi de la condition de jointure. Dans notre cas, on joint les tables <code>livre</code> et <code>auteur</code> sur l'attribut <code>auteur</code> de la table <code>livre</code> et l'attribut <code>id</code> de la table <code>auteur</code>.</p> <p>Essayez maintenant de r\u00e9cup\u00e9rer les titres de tous les livres avec le nom de leur auteur.</p> <pre><code>\n\n\n\n</code></pre>"},{"location":"Terminale/BaseDonnees/SQL/Cours/#3-construire-des-requetes-de-modification","title":"3. Construire des requ\u00eates de modification","text":""},{"location":"Terminale/BaseDonnees/SQL/Cours/#31-ajouter-des-donnees","title":"3.1 Ajouter des donn\u00e9es","text":"<p>Pour ajouter des enregistrement dans une table, on utilise <code>INSERT INTO</code> suivi du nom de la table et des valeurs \u00e0 ins\u00e9rer. La syntaxe est la suivante : <code>INSERT INTO nom_table (attribut1, attribut2, ...) VALUES (valeur1, valeur2, ...), (valeurA, valeurB, ...), ...;</code></p> <p>Il n'est pas n\u00e9cessaire de sp\u00e9cifier tous les attributs. On peut pr\u00e9ciser seulement les attributs pour lesquelles on veut ins\u00e9rer des valeurs. L'ordre des attributs doit correspondre \u00e0 l'ordre des valeurs mais ce n'est pas n\u00e9cessaire de conserver l'ordre d\u00e9fini dans la table.</p> <p>Par exemple, pour ajouter un livre, on \u00e9crira :</p> <pre><code>\n\n\n</code></pre> <p>A quoi doit-on faire attention lorsqu'on ajoute un livre dans la base de donn\u00e9es ?</p> <pre><code>\n\n\n\n\n</code></pre>"},{"location":"Terminale/BaseDonnees/SQL/Cours/#32-modifier-des-donnees","title":"3.2 Modifier des donn\u00e9es","text":"<p>On peut modifier des donn\u00e9es avec le mot cl\u00e9 <code>UPDATE</code>. On lui passe le nom de la table, l'attribut \u00e0 modifier et la nouvelle valeur.</p> <p><code>UPDATE nom_table SET attribut = valeur WHERE condition;</code> L'instruction va modifier toutes les lignes qui satisfont la condition.</p> <p>Si on ne met pas de condition, que va-t-il se passer ?</p> <pre><code>\n</code></pre> <p>Comment modifier l'ann\u00e9e de sortie du livre \"1984\" pour la mettre \u00e0 1984 ?</p> <pre><code>\n\n\n</code></pre>"},{"location":"Terminale/BaseDonnees/SQL/Cours/#33-supprimer-des-donnees","title":"3.3 Supprimer des donn\u00e9es","text":"<p>Pour supprimer des donn\u00e9es, on utilise le mot cl\u00e9 <code>DELETE FROM</code> suivi du nom de la table et de la condition de suppression.</p> <p>Pour supprimer tous les livres publi\u00e9s avant 2000 :</p> <pre><code>\n\n\n\n</code></pre>"},{"location":"Terminale/BaseDonnees/SQL/Cours/#4-fonctions-utiles","title":"4. Fonctions utiles","text":"<p>Il existe des fonctions pour agr\u00e9ger les donn\u00e9es. Par exemple, on peut compter le nombre de r\u00e9sultats, calculer la somme, la moyenne, le minimum, le maximum, etc.</p> <p>On peut utiliser ces fonctions avec le mot cl\u00e9 <code>SELECT</code> pour calculer des statistiques sur les donn\u00e9es.</p> <p>Voici quelques fonctions utiles : - <code>COUNT</code> : pour compter le nombre de r\u00e9sultats - <code>SUM</code> : pour calculer la somme - <code>AVG</code> : pour calculer la moyenne - <code>MIN</code> : pour trouver la valeur minimale - <code>MAX</code> : pour trouver la valeur maximale</p> <p>Par exemple, si on veut afficher total le nombre de livres, on \u00e9crira :</p> <pre><code>SELECT COUNT(*)\nFROM livre;\n</code></pre> <p>Si on veut calculer la moyenne des ann\u00e9es de sortie des livres, on \u00e9crira :</p> <pre><code>\n\n\n</code></pre>"},{"location":"Terminale/BaseDonnees/SQL/Exercices/","title":"BDD (exercices) \u2013 Les requ\u00eates SQL","text":""},{"location":"Terminale/BaseDonnees/SQL/Exercices/#partie-1","title":"PARTIE 1","text":"<p>\u00c9crire les requ\u00eates SQL permettant d'obtenir les renseignement suivants :</p> <ol> <li>Titre et ann\u00e9e de parution de tous les livres</li> <li>Titre et ann\u00e9e de parution de tous les livres publi\u00e9s avant 1900</li> <li> <p>L'\u00e9diteur du livre \"Le petit prince\"</p> </li> <li> <p>Titre des livres suivi du nom et pr\u00e9nom de l'auteur</p> </li> <li>L'auteur du livre \"Les Mis\u00e9rables\"</li> <li> <p>Les livres \u00e9crits par Tolkien</p> </li> <li> <p>Les livres tri\u00e9s du plus ancien au plus r\u00e9cent</p> </li> <li>La liste des auteurs par odre alphab\u00e9tique d\u00e9croissant</li> <li>La liste des ann\u00e9es de naissance des auteurs SANS doublons</li> </ol>"},{"location":"Terminale/BaseDonnees/SQL/Exercices/#partie-2","title":"PARTIE 2","text":"<p>\u00c9crire les requ\u00eates SQL permettant d'apporter les modifications suivantes :</p> <ol> <li>Ajouter le livre de votre choix dans la base de donn\u00e9e</li> <li>Titre des livres suivi du nom et pr\u00e9nom de l'auteur. Que se passe-t'il ? Pourquoi ?</li> <li>Remplacer les noms et pr\u00e9noms de tous les auteurs par vous-m\u00eame</li> <li>Supprimer le livre que vous avez ajouter \u00e0 la question 10</li> </ol>"},{"location":"Terminale/BaseDonnees/SQL/Exercices/#partie-3","title":"PARTIE 3","text":"<p>\u00c9crire les requ\u00eates SQL permettant d'obtenir les renseignement suivants :</p> <ol> <li>Calcul de la moyenne d'ann\u00e9es de naissance des auteurs</li> <li>Nombre total de livres dans la table LIVRE</li> <li> <p>Nombre total des auteurs n\u00e9s en 1802</p> </li> <li> <p>Titre et ann\u00e9e de parution du livre le plus r\u00e9cent</p> </li> <li>Titre et ann\u00e9e de parution du livre le plus ancien</li> <li> <p>Calcul de la somme des ann\u00e9es de publication de tous les livres</p> </li> <li> <p>Les titres des romans dont l'ann\u00e9e de sortie est ant\u00e9rieur \u00e0 l'ann\u00e9e de naissance de George Orwell</p> </li> <li>Le titre et l'ann\u00e9e de parution des romans ainsi que la nom et l'ann\u00e9e de naissance de son auteur</li> </ol>"},{"location":"Terminale/BaseDonnees/SQL/Manuel/","title":"Language SQL et manipulation de bases de donn\u00e9es","text":""},{"location":"Terminale/BaseDonnees/SQL/Manuel/#introduction","title":"Introduction","text":"<p>Le langage SQL (pour Structured Query Language) est un langage informatique permettant de manipuler des bases de donn\u00e9es relationnelles. Il est utilis\u00e9 par la plupart des syst\u00e8mes de gestion de bases de donn\u00e9es (SGBD).</p>"},{"location":"Terminale/BaseDonnees/SQL/Manuel/#principe","title":"Principe","text":"<p>Le langage SQL permet d'\u00e9crire des requ\u00eates permettant de r\u00e9cup\u00e9rer, de cr\u00e9er ou de modifier des donn\u00e9es dans une base de donn\u00e9es.</p>"},{"location":"Terminale/BaseDonnees/SQL/Manuel/#syntaxe","title":"Syntaxe","text":"<p>Une requ\u00eate SQL est de la forme :</p> <pre><code>[un mot-cl\u00e9] [une clause] [la/les condition(s)] ;\n</code></pre> <ul> <li>Le mot-cl\u00e9 indique l'action \u00e0 effectuer (par exemple <code>SELECT</code> pour r\u00e9cup\u00e9rer des donn\u00e9es, <code>INSERT</code> pour cr\u00e9er des donn\u00e9es, <code>UPDATE</code> pour modifier des donn\u00e9es, <code>DELETE</code> pour supprimer des donn\u00e9es).</li> <li>La clause indique la table dans laquelle effectuer l'action (par exemple <code>FROM</code> pour r\u00e9cup\u00e9rer des donn\u00e9es dans une table, <code>INTO</code> pour cr\u00e9er des donn\u00e9es dans une table, <code>SET</code> pour modifier des donn\u00e9es dans une table, <code>WHERE</code> pour supprimer des donn\u00e9es dans une table).</li> <li>Les conditions sont optionnelles et permettent de pr\u00e9ciser les donn\u00e9es \u00e0 r\u00e9cup\u00e9rer, cr\u00e9er, modifier ou supprimer.</li> </ul> <p>Les requ\u00eates peuvent \u00eatre imbriqu\u00e9es les unes dans les autres et contenir des parenth\u00e8ses.</p> <p>La convention veut que les mots-cl\u00e9s soient \u00e9crits en majuscules et que les noms de tables et de colonnes soient \u00e9crits en minuscules.</p> <p>Les commentaires en sql sont indiqu\u00e9 sur une ligne par le charact\u00e8re '#' ou alors sur une zone entre \"/*\" et \"*/\"</p>"},{"location":"Terminale/BaseDonnees/SQL/Manuel/#exemple","title":"Exemple","text":"<pre><code>SELECT nom, age, taille\nFROM eleves\nWHERE age &gt; 18;\n</code></pre> <p>Le mot cl\u00e9 <code>SELECT</code> permet de r\u00e9cup\u00e9rer des donn\u00e9es. Ici on r\u00e9cup\u00e8re les colonnes <code>nom</code>, <code>age</code> et <code>taille</code> de la table <code>eleves</code>.</p> <p><code>*</code> (pour \"all\") veut dire \"tout\". On peut donc \u00e9crire <code>SELECT * FROM eleves</code> pour r\u00e9cup\u00e9rer toutes les colonnes de la table <code>eleves</code>.</p> <p>La clause <code>FROM</code> indique la table dans laquelle effectuer l'action. Ici on effectue l'action dans la table <code>eleves</code>.</p> <p>Enfin, la condition <code>WHERE</code> permet de pr\u00e9ciser les donn\u00e9es \u00e0 r\u00e9cup\u00e9rer. On ne r\u00e9cup\u00e8re ici que les \u00e9l\u00e8ves dont l'\u00e2ge est sup\u00e9rieur \u00e0 18 ans.</p>"},{"location":"Terminale/BaseDonnees/SQL/Manuel/#instructions-courantes","title":"Instructions courantes","text":""},{"location":"Terminale/BaseDonnees/SQL/Manuel/#select","title":"SELECT","text":"<p>L'instruction <code>SELECT</code> permet de r\u00e9cup\u00e9rer des donn\u00e9es dans une table.</p> <pre><code>SELECT [colonnes]\nFROM [table]\nWHERE [conditions];\n</code></pre>"},{"location":"Terminale/BaseDonnees/SQL/Manuel/#exemple_1","title":"Exemple","text":"<pre><code>SELECT nom, taille\nFROM dragons\nWHERE taille &gt; 10;\n</code></pre> <p>On r\u00e9cup\u00e8re ici les colonnes <code>nom</code> et <code>taille</code> de la table <code>dragons</code> pour les dragons dont la taille est sup\u00e9rieure \u00e0 10.</p>"},{"location":"Terminale/BaseDonnees/SQL/Manuel/#insert","title":"INSERT","text":"<p>L'instruction <code>INSERT</code> permet d'ajouter des donn\u00e9es dans une table d\u00e9j\u00e0 existante.</p> <p>On peut pr\u00e9ciser les colonnes dans lesquelles ajouter les donn\u00e9es. Il n'est pas obligatoire de pr\u00e9ciser toutes les colonnes ou de les pr\u00e9ciser dans le m\u00eame ordre que dans la table.</p> <pre><code>INSERT INTO [table] ([colonnes])\nVALUES ([valeurs]);\n</code></pre>"},{"location":"Terminale/BaseDonnees/SQL/Manuel/#exemple_2","title":"Exemple","text":"<pre><code>INSERT INTO dragons (nom, taille)\nVALUES (\"Dragou\", 12);\n\n/* On peut aussi \u00e9crire : */\nINSERT INTO dragons (taille, nom)\nVALUES (12, \"Dragou\");\n</code></pre>"},{"location":"Terminale/BaseDonnees/SQL/Manuel/#update","title":"UPDATE","text":"<p>L'instruction <code>UPDATE</code> permet de modifier des donn\u00e9es d\u00e9j\u00e0 pr\u00e9sentes dans une table.</p> <pre><code>UPDATE [table]\nSET [colonnes] = [valeurs]\nWHERE [conditions];\n</code></pre>"},{"location":"Terminale/BaseDonnees/SQL/Manuel/#exemple_3","title":"Exemple","text":"<pre><code>UPDATE dragons\nSET taille = 15\nWHERE nom = \"Dragou\";\n</code></pre> <p>Ici, on modifie la taille de tous les dragons dont le nom est \"Dragou\" en la passant \u00e0 15.</p> <p>La condition est optionnelle. Si on ne la pr\u00e9cise pas, toutes les donn\u00e9es de la table seront modifi\u00e9es.</p>"},{"location":"Terminale/Language/RechercheTextuelle/Cours/","title":"Recherche textuelle","text":""},{"location":"Terminale/Language/RechercheTextuelle/Cours/#introduction","title":"Introduction","text":"<p>La recherche textuelle est un domaine de l'informatique qui consiste \u00e0 rechercher un mot ou une expression dans un texte.</p> <p>Rappel : un texte est une suite de caract\u00e8res. La chaine \"chat\" par exemple correspond au tableau de charact\u00e8res suivant : <code>['c', 'h', 'a', 't']</code></p> <p>Exemple : On souhaite rechercher le mot \"chat\" dans le texte suivant : \"Le chat est un animal domestique de la famille des f\u00e9lid\u00e9s.\"</p>"},{"location":"Terminale/Language/RechercheTextuelle/Cours/#methode-naive","title":"M\u00e9thode na\u00efve","text":"<p>La m\u00e9thode na\u00efve consiste \u00e0 parcourir le texte et \u00e0 comparer chaque caract\u00e8re avec le premier caract\u00e8re du mot recherch\u00e9. Si le caract\u00e8re est identique, on compare le caract\u00e8re suivant avec le deuxi\u00e8me caract\u00e8re du mot recherch\u00e9. On recommence jusqu'\u00e0 ce que tous les caract\u00e8res du mot recherch\u00e9 soient identiques.</p>"},{"location":"Terminale/Language/RechercheTextuelle/Cours/#question-1","title":"Question 1","text":"<pre><code>Impl\u00e9mentez cet algorithme en Python. Testez-le avec le texte et le mot \"chat\", puis avec le texte et le mot \"chien\".\n</code></pre> <pre><code>def rechercheNaive(texte, mot):\n    \"\"\"\n    Recherche le mot dans le texte\n    @param texte: str, le texte dans lequel on recherche le mot\n    @param mot: str, le mot \u00e0 rechercher\n    @return: bool\n    \"\"\"\n</code></pre> <p>Cette m\u00e9thode fonctionne mais elle est tr\u00e8s lente. Si le mot recherch\u00e9 n'est pas dans le texte on doit quand meme r\u00e9aliser toutes les comparaisons avec chacun des caract\u00e8res du texte. On va donc chercher \u00e0 am\u00e9liorer cet algorithme.</p>"},{"location":"Terminale/Language/RechercheTextuelle/Cours/#methode-de-boyer-moore-horspool","title":"M\u00e9thode de Boyer-Moore Horspool","text":"<p>La m\u00e9thode de Boyer-Moore est un algorithme de recherche textuelle se base sur 2 principes pour am\u00e9liorer la recherche :</p> <ul> <li> <p>Comparer les caract\u00e8res du mot recherch\u00e9 en commen\u00e7ant par la fin du mot.</p> </li> <li> <p>Utiliser une table de correspondance qui permet de sauter des caract\u00e8res du texte lorsqu'ils ne correspondent pas au caract\u00e8re recherch\u00e9.</p> </li> </ul>"},{"location":"Terminale/Language/RechercheTextuelle/Cours/#deroulement-de-lalgorithme","title":"D\u00e9roulement de l\u2019algorithme","text":"<p>Pour l'exemple on recherchera le mot \"chat\" dans le texte suivant : \"Le croustichat\"</p> <p>On commence la recherche \u00e0 l\u2019index 3 :</p> <pre><code>un croustichat\nchat\n   ^\n</code></pre> <p>Il n\u2019y a pas de correspondance \u00e0 la fin du mot : 't' != 'c', donc on avance, mais de combien de caract\u00e8res avance-t-on ?</p> <p>Pour le d\u00e9cider, on utilise le fait que le caract\u00e8re 'c' apparait 3 charact\u00e8res plus loin dans le mot cherch\u00e9, donc on peut avancer de 3 caract\u00e8res sans crainte de rater le mot.</p> <p>On recherche donc \u00e0 l\u2019indice 3 + 3 = 6 :</p> <pre><code>un croustichat\n   chat\n      ^\n</code></pre> <p>'u' est diff\u00e9rent de 'a', on va donc avancer. Mais cette fois, le caract\u00e8re 'u' n\u2019apparait pas dans le mot cherch\u00e9, donc on peut avancer de la taille du mot cherch\u00e9. On recherche donc \u00e0 l\u2019indice 6 + 4 = 10 :</p> <pre><code>un croustichat\n       chat\n          ^\n</code></pre> <p>Cette fois 'c' fais parti du mot recherch\u00e9, on peut donc avancer selon sa position. Ici 'a' est le 4\u00e8me caract\u00e8re du mot cherch\u00e9, donc on avance de 3 caract\u00e8res. On recherche donc \u00e0 l\u2019indice 10 + 3 = 13 :</p> <pre><code>un croustichat\n          chat\n             ^\n</code></pre> <p>Cette fois, 'c' est bien pr\u00e9sent dans le mot cherch\u00e9, on peut donc commencer \u00e0 comparer les caract\u00e8res du mot cherch\u00e9 en commen\u00e7ant par la fin.</p> <p>On compare donc 'c' et 'c', puis 'h' et 'h', puis 'a' et 'a', puis 't' et 't'. Tous les caract\u00e8res sont identiques, on a donc trouv\u00e9 le mot cherch\u00e9.</p>"},{"location":"Terminale/Language/RechercheTextuelle/Cours/#table-de-correspondance","title":"Table de correspondance","text":"<p>Pour pouvoir avancer de plusieurs caract\u00e8res, on va utiliser une table de correspondance qui permet de savoir de combien on peut avancer en fonction du caract\u00e8re du texte.</p> <p>Pour le mot \"chat\", la table de correspondance est la suivante :</p> Caract\u00e8re c h a t (autres charact\u00e8res) Index 3 2 1 0 4 <p>Si une lettre se r\u00e9p\u00e8te plusieurs fois, on veut uniquement sa derni\u00e8re position dans le mot car on compare en commen\u00e7ant par la fin. Le mot \"abcba\" aura donc la m\u00eame table de correspondance :</p> Caract\u00e8re a c b (autres charact\u00e8res) Index 3 2 1 3"},{"location":"Terminale/Language/RechercheTextuelle/Cours/#question-2","title":"Question 2","text":"<pre><code>Tracez la table de correspondance, puis appliquez l'algorithme de Boyer-Moore Horspool pour la recherche du mot \"anim\" dans le texte \"Un petit animal\"\n</code></pre>"},{"location":"Terminale/Language/RechercheTextuelle/Cours/#implementation-en-python","title":"Impl\u00e9mentation en Python","text":""},{"location":"Terminale/Language/RechercheTextuelle/Cours/#question-3","title":"Question 3","text":"<pre><code>Ecrivez une fonction tableCorrespondance qui prend en param\u00e8tre un mot et qui renvoi la table de correspondance associ\u00e9e. On utilisera un dictionnaire pour stocker la table de correspondance.\n</code></pre> <pre><code>def tableCorrespondance(mot):\n    \"\"\"Renvoi un dictionnaire repr\u00e9sentant la table de correspondance associ\u00e9e au mot.\n\n    @Args :\n        mot : le mot dont on veut la table de correspondance\n    @Return :\n        dict : la table de correspondance associ\u00e9e au mot\n    \"\"\"\n</code></pre> <p>tableCorrespondance(\"chat\") renverra le dictionnaire suivant : {'c': 3, 'h': 2, 'a': 1, 't': 0}</p>"},{"location":"Terminale/Language/RechercheTextuelle/Cours/#question-4","title":"Question 4","text":"<p>Gr\u00e2ce \u00e0 la table de correspondance, on peut maintenant \u00e9crire une fonction avancer qui prend en param\u00e8tre un texte, un mot \u00e0 chercher et un indice du dernier charact\u00e8re du mot \u00e0 partir duquel on va tester et qui renvoi l'indice \u00e0 partir duquel on doit rechercher le mot suivant.</p> <pre><code>def avancer(texte, mot, indice):\n    \"\"\"\n    Renvoi l'indice \u00e0 partir duquel on doit rechercher le mot suivant.\n    @Args\n        texte: str, le texte dans lequel on recherche le mot\n        mot: str, le mot \u00e0 rechercher\n        indice: int, l'indice du dernier charact\u00e8re du mot \u00e0 partir duquel on va tester\n    @Return:\n        int, l'indice \u00e0 partir duquel on doit rechercher le mot suivant\n    \"\"\"\n</code></pre>"},{"location":"Terminale/Language/RechercheTextuelle/Cours/#question-5","title":"Question 5","text":"<p>Impl\u00e9mentez en Python une fonction memeMot telle que :</p> <pre><code>def memeMot(texte, mot, indice):\n    \"\"\"\n    Verifie \u00e0 partir de l'indice de dernier charact\u00e8re \"indice\" si le mot \"mot\" correspond \u00e0 celui dans le texte. Renvoi l'indice du premier charact\u00e8re diff\u00e9rent ou -1 si le mot correspond.\n    \"\"\"\n</code></pre> <p>memeMot(\"un croustichat\", \"chat\", 6) comparera \"chat\" avec \"crou\" et renverra 0 car le premier charact\u00e8re diff\u00e9rent est 'u' \u00e0 l'indice 0.</p> <p>memeMot(\"un croustichat\", \"chat\", 13) comparera \"chat\" avec \"chat\" et renverra -1 car les mots sont identiques.</p> <p>Cette fonction sera utilis\u00e9e pour tester si le mot recherch\u00e9 est pr\u00e9sent \u00e0 un indice donn\u00e9 du texte.</p>"},{"location":"Terminale/Language/RechercheTextuelle/Cours/#question-6","title":"Question 6","text":"<p>Utilisez les fonctions pr\u00e9c\u00e9dentes pour compl\u00e9ter le code de la fonction rechercheBoyerMoore qui prend en param\u00e8tre un texte et un mot et qui renvoi si le mot est pr\u00e9sent dans le texte.</p> <p>Le code \u00e0 compl\u00e9ter est disponible dans le fichier rechercheBoyerMoore.py</p>"},{"location":"Terminale/StructureDonnees/Abr/activite/","title":"Activit\u00e9 sur les arbres binaires de recherche","text":"<p>On veut cr\u00e9er un dictionnaire un peu particulier qui permette de retrouver tr\u00e8s rapidement un mot. On propose un fonctionnement un peu particulier : Plut\u00f4t que de stocker les mots dans une liste, les mots sont stock\u00e9s les uns par rapport aux autres.</p> <p>Pour cela, on va definir quelques r\u00e8gles : * Les mots sont rang\u00e9s par ordre alphab\u00e9tique * Chaque mots peut avoir jusqu'\u00e0 deux mots associ\u00e9s : un mot plus petit et un mot plus grand * Le mot associ\u00e9 \u00e0 gauche est plus petit que le mot courant * Le mot associ\u00e9 \u00e0 droite est plus grand que le mot courant * Tous les mots vont partir d'un mot initial</p> <p>Voil\u00e0 un sch\u00e9ma pour placer les mots :</p> <p></p> <ol> <li> <p>Placez les mots suivants dans le dictionnaire :</p> <ul> <li>maison</li> <li>lapin</li> <li>pomme</li> <li>arbre</li> <li>chat</li> <li>abeille</li> <li>navire</li> <li>oiseau</li> </ul> </li> </ol> <p>Maintenant pour s'assurer qu'il soit utilisable, on verifier que les mots sont bien rang\u00e9s par ordre alphab\u00e9tique. En lisant les mots de gauche \u00e0 droite, on doit avoir un ordre croissant. Sinon, c'est qu'il faut verifier une derni\u00e8re r\u00e8gle : Tous les mots \u00e0 gauche d'un mot doivent \u00eatre plus petits que lui et tous les mots \u00e0 droite d'un mot doivent \u00eatre plus grands que lui. Si ce n'\u00e9tait pas d\u00e9j\u00e0 le cas, on peut r\u00e9organiser les mots pour que ce soit le cas.</p> <ol> <li> <p>Quelle r\u00e8gle faut-il suivre pour ajouter un mot dans le dictionnaire ? Ecrivez un algorithme en pseudo-code qui permette d'ajouter un mot dans le dictionnaire.</p> </li> <li> <p>On peut maintenant chercher un mot dans le dictionnaire. Ecrivez un algorithme en pseudo-code qui permette de chercher un mot dans le dictionnaire.</p> <p>Une fois que vous avez \u00e9crit l'algorithme, donnez votre algorithme \u00e0 un camarade et demandez lui de chercher un mot dans le dictionnaire. Il choisi un mot et tente de le retrouver gr\u00e2ce \u00e0 votre algorthme. A chaque \u00e9tape, il d\u00e9taille ce qu'il fait jusqu'\u00e0 ce qu'il trouve le mot ou qu'il ne le trouve pas.</p> <p>Si il n'arrive pas \u00e0 trouver le mot, vous pouvez r\u00e9fl\u00e9chir ensemble \u00e0 comment corriger l'algorithme.</p> </li> <li> <p>Un mot peut-il \u00eatre pr\u00e9sent \u00e0 plusieurs endroits dans le dictionnaire ?</p> </li> <li> <p>Peut-on utiliser ce dictionnaire avec autre chose que des mots ? Qu'est ce qui est n\u00e9cessaire pour pouvoir utiliser ce dictionnaire ?</p> </li> <li> <p>Au vu de la forme du dictionnaire, au maximum combien de mots peut-on ranger dans le dictionnaire en fonction de la hauteur du dictionnaire ? (On appelle hauteur du dictionnaire le nombre d'\u00e9tages du dictionnaire).</p> </li> <li> <p>Comparons avec un dictionnaire classique. En supposant qu'on lise les mots un par un, les uns \u00e0 la suite des autres dans un dictionnaire classique, combien d'\u00e9tapes faut-il faire pour retrouver un mot dans le dictionnaire ? (On l'exprimera en fonction du nombre de mots dans le dictionnaire).</p> </li> <li> <p>Avec ce dictionnaire, combien d'\u00e9tapes faut-il faire pour retrouver un mot dans le dictionnaire ? (On l'exprimera en fonction du nombre de mots dans le dictionnaire). Comparer avec la question pr\u00e9c\u00e9dente, que peut-on en conclure ?</p> </li> </ol>"},{"location":"Terminale/StructureDonnees/Abr/activite/#exercices","title":"Exercices","text":"<ol> <li>On veut cr\u00e9er une classe <code>abr</code> (pour arbre binaire de recherche) qui permette de stocker notre dictionnaire. Chaque abr poss\u00e9dera une valeur <code>valeur</code> et deux arbres enfants <code>gauche</code> et <code>droite</code>. On veut 2 constructeurs pour pouvoir cr\u00e9er un abr</li> </ol> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <ol> <li>Cr\u00e9ons une fonction <code>afficher</code> qui permette d'afficher une repr\u00e9sentation textuelle de l'arbre. Pour cela, on va afficher la valeur de l'arbre puis afficher l'arbre de gauche et l'arbre de droite. (Note : C'est ce qu'on appele un parcours infixe).</li> </ol> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p> Pour tester votre fonction, vous pouvez cr\u00e9er un abr et l'afficher :</p> <pre><code>arbre = Abr(\"maison\", Abr(\"lapin\", None, None), Abr(\"pomme\", Abr(\"arbre\"), Abr(\"chat\")))\narbre.afficher()\n</code></pre> <ol> <li>On veut maintenant cr\u00e9er une fonction <code>ajouter</code> qui permette d'ajouter un mot dans le dictionnaire \u00e0 son bon emplacement. <p>Il faut donc v\u00e9rifier que le mot est bien plac\u00e9 par rapport aux autres mots. Si il est plus petit, il faut l'ajouter \u00e0 gauche, sinon il faut l'ajouter \u00e0 droite.</p> </li> </ol> ### Lancer assert triParInsertion([1, 5, 2, 4, 3]) == [1, 2, 3, 4, 5], \"\\n\\n Le tri par insertion ne fonctionne pas sur [1, 5, 2, 4, 3]\"bksl-nlassert triParInsertion([1, 2, 3, 4, 5]) == [1, 2, 3, 4, 5], 'Le tri par insertion ne fonctionne pas sur [1, 2, 3, 4, 5]'bksl-nlassert triParInsertion([5, 4, 3, 2, 1]) == [1, 2, 3, 4, 5], 'Le tri par insertion ne fonctionne pas sur [5, 4, 3, 2, 1]'bksl-nlbksl-nlprint(\"\\n Bravo ! Tous les tests passent.\")bksl-nl Valider 5/5 T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p>#--- HDR ---#bksl-nl# Code Python \u00c3\u00a9x\u00c3\u00a9cut\u00c3\u00a9 sans \u00c3\u00aatre montr\u00c3\u00a9 \u00c3\u00a0 l'\u00c3\u00a9l\u00c3\u00a8vebksl-nl#--- HDR ---#bksl-nlbksl-nlclass abr():bksl-nl    bksl-nl    def ajouter(self, valeur):bksl-nl        bksl-nl        \"\"\" Ajoute la valeur dans l'arbre bksl-nl        bksl-nl        Param\u00c3\u00a8tres:bksl-nl            valeur : La valeur \u00c3\u00a0 ajouterbksl-nl            bksl-nl        CU: Aucunebksl-nlbksl-nl        Exemple:bksl-nl            &gt;&gt;&gt; arbre = abr(5)bksl-nl            &gt;&gt;&gt; arbre.ajouter(2)bksl-nl        \"\"\"bksl-nl        ...bksl-nl</p> <ol> <li>Verifiez que votre fonction <code>ajouter</code> fonctionne bien en ajoutant les mots suivants :</li> </ol> <pre><code>arbre = Abr(\"maison\")\nmots = [\"lapin\", \"pomme\", \"arbre\", \"chat\", \"abeille\", \"navire\", \"oiseau\"]\n\nfor mot in mots:\n    arbre.ajouter(mot)\n</code></pre> <ol> <li>On veut maintenant cr\u00e9er une fonction <code>chercher</code> qui permette de chercher un mot dans le dictionnaire.</li> </ol> ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder <p></p>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/","title":"Arbres","text":"<p>Les arbres sont une structure de donn\u00e9e hi\u00e9rarchique permettant de repr\u00e9senter des donn\u00e9es sous forme d'arbre.</p>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#definition","title":"D\u00e9finition","text":"<p>Un arbre est un ensemble fini de n\u0153uds, reli\u00e9s entre eux par des arcs orient\u00e9s, et poss\u00e9dant les propri\u00e9t\u00e9s suivantes :</p> <p></p> <ul> <li>Un \"n\u0153ud\" est un \u00e9l\u00e9ment de l'ensemble. Il peut poss\u00e9der des \"fils\".</li> <li>Un n\u0153ud est appel\u00e9 feuille s'il n'a pas de fils. Dans ce cas l\u00e0, il est situ\u00e9 au bout d'une branche.</li> <li>Le n\u0153ud appel\u00e9 racine de l'arbre est le seul n\u0153ud \u00e0 ne pas avoir de p\u00e8re. Tout le reste de l'arbre est accessible depuis la racine.</li> <li>la hauteur d'un arbre est le nombre maximum de n\u0153uds entre la racine et une feuille.</li> <li>la profondeur d'un n\u0153ud est le nombre de n\u0153uds entre la racine et ce n\u0153ud.</li> <li>la taille d'un arbre est le nombre de n\u0153uds qu'il contient.</li> <li>la largeur d'un arbre est le nombre maximum de n\u0153uds qu'il contient \u00e0 un niveau donn\u00e9.</li> </ul>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#proprietes","title":"Propri\u00e9t\u00e9s","text":"<ul> <li>Un arbre est un graphe orient\u00e9, connexe et sans cycle. (Un graphe est connexe si pour tout couple de sommets, il existe un chemin entre ces deux sommets. Un graphe est sans cycle si il n'existe pas de chemin qui revient sur un sommet d\u00e9j\u00e0 visit\u00e9.)</li> <li>Un arbre poss\u00e8de un seul chemin entre la racine et une feuille.</li> <li>Si tous les n\u0153uds de l'arbre poss\u00e8dent un nombre fini de fils, alors l'arbre est dit fini.</li> </ul>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#exemples","title":"Exemples","text":"<pre><code>graph TB\n    A[8] --&gt; B[3]\n    A --&gt; C[10]\n    A --&gt; D[1]\n    B --&gt; E[6]\n    B --&gt; F[14]\n    C --&gt; G[4]\n    C --&gt; H[7]\n    C --&gt; I[13]\n</code></pre>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#types-darbres","title":"Types d'arbres","text":""},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#arbre-binaire","title":"Arbre binaire","text":"<p>Un arbre binaire est un arbre dont chaque n\u0153ud poss\u00e8de au plus deux fils.</p>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#proprietes_1","title":"Propri\u00e9t\u00e9s","text":"<ul> <li>Un arbre binaire de hauteur $h$ poss\u00e8de au plus $2^h$ feuilles.</li> <li>Un arbre binaire de hauteur $h$ poss\u00e8de au plus $2^{h+1}-1$ n\u0153uds.</li> <li>La hauteur d'un arbre binaire de $n$ n\u0153uds est au plus $\\log_2(n+1)$.</li> </ul>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#implementation","title":"Impl\u00e9mentation","text":"<pre><code>class ab:\n    def __init__(self, valeur, gauche=None, droit=None):\n        self.valeur = valeur\n        self.gauche = gauche\n        self.droit = droit\n\n    def taille(self):\n        if self.gauche is None and self.droit is None:\n            return 1\n        if self.gauche is None:\n            return 1 + self.droit.taille()\n        if self.droit is None:\n            return 1 + self.gauche.taille()\n        return 1 + self.gauche.taille() + self.droit.taille()\n\n    def hauteur(self):\n        if self.gauche is None and self.droit is None:\n            return -1\n        if self.gauche is None:\n            return 1 + self.droit.hauteur()\n        if self.droit is None:\n            return 1 + self.gauche.hauteur()\n        return 1 + max(self.gauche.hauteur(), self.droit.hauteur())\n\n    def largeur(self):\n        if self.gauche is None and self.droit is None:\n            return 1\n        if self.gauche is None:\n            return 1 + self.droit.largeur()\n        if self.droit is None:\n            return 1 + self.gauche.largeur()\n        return 1 + self.gauche.largeur() + self.droit.largeur()\n</code></pre>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#arbre-binaire-de-recherche","title":"Arbre binaire de recherche","text":"<p>Un arbre binaire de recherche est un arbre binaire dont les n\u0153uds sont ordonn\u00e9s selon une relation d'ordre total. Pour tout n\u0153ud, tous les n\u0153uds du sous-arbre gauche sont inf\u00e9rieurs au n\u0153ud et tous les n\u0153uds du sous-arbre droit sont sup\u00e9rieurs au n\u0153ud.</p>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#exemple","title":"Exemple","text":"<pre><code>graph TB\n    A[8] --&gt; B[3]\n    A --&gt; C[10]\n    A --&gt; D[1]\n    B --&gt; E[6]\n    B --&gt; F[14]\n    C --&gt; G[4]\n    C --&gt; H[7]\n    C --&gt; I[13]\n</code></pre>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#recherche-dun-element","title":"Recherche d'un \u00e9l\u00e9ment","text":"<p>Pour rechercher un \u00e9l\u00e9ment dans un arbre binaire de recherche, on compare l'\u00e9l\u00e9ment recherch\u00e9 avec le n\u0153ud courant. Si l'\u00e9l\u00e9ment est inf\u00e9rieur au n\u0153ud courant, on recherche dans le sous-arbre gauche. Si l'\u00e9l\u00e9ment est sup\u00e9rieur au n\u0153ud courant, on recherche dans le sous-arbre droit. Si l'\u00e9l\u00e9ment est \u00e9gal au n\u0153ud courant, on a trouv\u00e9 l'\u00e9l\u00e9ment.</p>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#proprietes_2","title":"Propri\u00e9t\u00e9s","text":"<ul> <li>Dans un arbre binaire de recherche, la recherche d'un \u00e9l\u00e9ment est en $O(\\log_2(n))$.</li> <li>L'insertion d'un \u00e9l\u00e9ment dans un arbre binaire de recherche est en $O(\\log_2(n))$.</li> <li></li> </ul>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#implementation_1","title":"Impl\u00e9mentation","text":"<pre><code>class abr:\n    def __init__(self, valeur, gauche=None, droit=None):\n        self.valeur = valeur\n        self.gauche = gauche\n        self.droit = droit\n\ndef insertion(element, arbre):\n    if arbre is None:\n        return abr(element)\n    if element &lt; arbre.valeur:\n        return abr(arbre.valeur, insertion(element, arbre.gauche), arbre.droit)\n    if element &gt; arbre.valeur:\n        return abr(arbre.valeur, arbre.gauche, insertion(element, arbre.droit))\n    return arbre\n\ndef recherche(element, arbre):\n    if arbre is None:\n        return False\n    if element &lt; arbre.valeur:\n        return recherche(element, arbre.gauche)\n    if element &gt; arbre.valeur:\n        return recherche(element, arbre.droit)\n    return True\n</code></pre>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#arbre-avl","title":"Arbre AVL","text":"<p>Un arbre AVL est un arbre binaire de recherche dont la diff\u00e9rence de hauteur entre les sous-arbres gauche et droit est au plus 1. C'est un arbre binaire de recherche \u00e9quilibr\u00e9.</p> <p>Pour r\u00e9\u00e9quilibrer un arbre AVL, on effectue des rotations. Il existe quatre types de rotations : la rotation gauche, la rotation droite, la double rotation gauche et la double rotation droite. Ces rotations permettent de r\u00e9\u00e9quilibrer l'arbre en faisant passer le fils gauche du n\u0153ud courant \u00e0 la place du n\u0153ud courant ou en faisant passer le fils droit du n\u0153ud courant \u00e0 la place du n\u0153ud courant.</p>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#exemple_1","title":"Exemple","text":"<pre><code>\ngraph TB\n    A[8] --&gt; B[3]\n    A --&gt; C[10]\n    A --&gt; D[1]\n    B --&gt; E[6]\n    B --&gt; F[14]\n    C --&gt; G[4]\n    C --&gt; H[7]\n    C --&gt; I[13]\n</code></pre>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#proprietes_3","title":"Propri\u00e9t\u00e9s","text":"<ul> <li>Dans un arbre AVL, la recherche d'un \u00e9l\u00e9ment est en $O(\\log_2(n))$.</li> <li>Un arbre AVL de $n$ n\u0153uds poss\u00e8de une hauteur comprise entre $\\log_2(n+1)$ et $1.44\\log_2(n+2)-1$.</li> </ul>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#implementation_2","title":"Impl\u00e9mentation","text":"<pre><code>\nclass avl():\n    def __init__(self, valeur, gauche=None, droit=None):\n        self.valeur = valeur\n        self.gauche = gauche\n        self.droit = droit\n\n    def rotation_gauche(self):\n        return avl(self.droit.valeur, avl(self.valeur, self.gauche, self.droit.gauche), self.droit.droit)\n\n    def rotation_droite(self):\n        return avl(self.gauche.valeur, self.gauche.gauche, avl(self.valeur, self.gauche.droit, self.droit))\n\n    def double_rotation_gauche(self):\n        return avl(self.gauche.droit.valeur, avl(self.gauche.valeur, self.gauche.gauche, self.gauche.droit.gauche), avl(self.valeur, self.gauche.droit.droit, self.droit))\n\n    def double_rotation_droite(self):\n        return avl(self.droit.gauche.valeur, avl(self.valeur, self.gauche, self.droit.gauche.gauche), avl(self.droit.valeur, self.droit.gauche.droit, self.droit.droit))\n\n    def insertion(self, element):\n        if element &lt; self.valeur:\n            if self.gauche is None:\n                self.gauche = avl(element)\n            else:\n                self.gauche = self.gauche.insertion(element)\n        elif element &gt; self.valeur:\n            if self.droit is None:\n                self.droit = avl(element)\n            else:\n                self.droit = self.droit.insertion(element)\n        else:\n            return self\n\n        if self.gauche is not None and self.droit is not None:\n            if self.gauche.hauteur() - self.droit.hauteur() == 2:\n                if element &lt; self.gauche.valeur:\n                    return self.rotation_droite()\n                else:\n                    return self.double_rotation_droite()\n            elif self.droit.hauteur() - self.gauche.hauteur() == 2:\n                if element &gt; self.droit.valeur:\n                    return self.rotation_gauche()\n                else:\n                    return self.double_rotation_gauche()\n        elif self.gauche is not None and self.gauche.hauteur() == 2:\n            if element &lt; self.gauche.valeur:\n                return self.rotation_droite()\n            else:\n                return self.double_rotation_droite()\n        elif self.droit is not None and self.droit.hauteur() == 2:\n            if element &gt; self.droit.valeur:\n                return self.rotation_gauche()\n            else:\n                return self.double_rotation_gauche()\n\n        return self\n\n    def recherche(self, element):\n        if element &lt; self.valeur:\n            if self.gauche is None:\n                return False\n            return self.gauche.recherche(element)\n        elif element &gt; self.valeur:\n            if self.droit is None:\n                return False\n            return self.droit.recherche(element)\n        else:\n            return True\n</code></pre>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#arbre-rouge-noir","title":"Arbre rouge-noir","text":"<p>Un arbre rouge-noir est un arbre binaire de recherche dont les n\u0153uds sont color\u00e9s en rouge ou en noir. Les n\u0153uds rouges et noirs sont altern\u00e9s et la racine est noire. Toutes les feuilles sont noires. Si un n\u0153ud est rouge, ses fils sont noirs.</p>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#exemple_2","title":"Exemple","text":"<pre><code>\ngraph TB\n    A[N8] --&gt; B[R3]\n    A --&gt; C[R10]\n    A --&gt; D[N1]\n    B --&gt; E[N6]\n    B --&gt; F[N14]\n    C --&gt; G[R4]\n    C --&gt; H[R7]\n    C --&gt; I[N13]\n</code></pre>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#rotation","title":"Rotation","text":"<p>Une rotation est une op\u00e9ration qui permet de r\u00e9\u00e9quilibrer un arbre rouge-noir. Il existe deux types de rotations : la rotation gauche et la rotation droite. La rotation gauche consiste \u00e0 faire passer le fils droit du n\u0153ud courant \u00e0 la place du n\u0153ud courant. La rotation droite consiste \u00e0 faire passer le fils gauche du n\u0153ud courant \u00e0 la place du n\u0153ud courant.</p>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#implementation_3","title":"Impl\u00e9mentation","text":"<pre><code>\nclass abr:\n    def __init__(self, valeur, gauche=None, droit=None, couleur=\"N\"):\n        self.valeur = valeur\n        self.gauche = gauche\n        self.droit = droit\n        self.couleur = couleur\n\ndef insertion(element, arbre):\n\n    def rotation_gauche(arbre):\n        return abr(arbre.droit.valeur, abr(arbre.valeur, arbre.gauche, arbre.droit.gauche), arbre.droit.droit)\n\n    def rotation_droite(arbre):\n        return abr(arbre.gauche.valeur, arbre.gauche.gauche, abr(arbre.valeur, arbre.gauche.droit, arbre.droit))\n\n    def insertion_rec(element, arbre):\n        if arbre is None:\n            return abr(element, None, None, \"R\")\n        if element &lt; arbre.valeur:\n            return insertion_rec(element, arbre.gauche)\n        if element &gt; arbre.valeur:\n            return insertion_rec(element, arbre.droit)\n        return arbre\n\n    arbre = insertion_rec(element, arbre)\n\n    if arbre.gauche is not None and arbre.gauche.couleur == \"R\" and arbre.droit is not None and arbre.droit.couleur == \"R\":\n        arbre.gauche.couleur = \"N\"\n        arbre.droit.couleur = \"N\"\n        arbre.couleur = \"R\"\n    elif arbre.gauche is not None and arbre.gauche.couleur == \"R\" and (arbre.droit is None or arbre.droit.couleur == \"N\"):\n        if arbre.gauche.droit is not None and arbre.gauche.droit.couleur == \"R\":\n            arbre.gauche = rotation_gauche(arbre.gauche)\n        arbre = rotation_droite(arbre)\n    elif arbre.droit is not None and arbre.droit.couleur == \"R\" and (arbre.gauche is None or arbre.gauche.couleur == \"N\"):\n        if arbre.droit.gauche is not None and arbre.droit.gauche.couleur == \"R\":\n            arbre.droit = rotation_droite(arbre.droit)\n        arbre = rotation_gauche(arbre)\n\n    return arbre\n\ndef recherche(element, arbre):\n    if arbre is None:\n        return False\n    if element &lt; arbre.valeur:\n        return recherche(element, arbre.gauche)\n    if element &gt; arbre.valeur:\n        return recherche(element, arbre.droit)\n    return True\n</code></pre>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#proprietes_4","title":"Propri\u00e9t\u00e9s","text":"<ul> <li>Dans un arbre rouge-noir, la recherche d'un \u00e9l\u00e9ment est en $O(\\log_2(n))$.</li> <li>Un arbre rouge-noir de $n$ n\u0153uds poss\u00e8de une hauteur au plus $2\\log_2(n+1)$.</li> <li>Un arbre rouge-noir de $n$ n\u0153uds poss\u00e8de une hauteur au moins $\\log_2(n+1)$.</li> </ul>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#arbre-de-huffman","title":"Arbre de Huffman","text":"<p>Un arbre de Huffman est un arbre binaire de recherche dont les feuilles sont pond\u00e9r\u00e9es. Les feuilles sont ordonn\u00e9es selon leur poids. Les n\u0153uds internes sont la somme des poids de leurs fils. Cette structure est utilis\u00e9e pour la compression de donn\u00e9es.</p>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#proprietes_5","title":"Propri\u00e9t\u00e9s","text":"<ul> <li>Dans un arbre de Huffman, les feuilles les plus profondes sont les plus l\u00e9g\u00e8res.</li> <li>Dans un arbre de Huffman, les feuilles les plus l\u00e9g\u00e8res sont les plus \u00e0 gauche.</li> <li>Dans un arbre de Huffman, les feuilles les plus lourdes sont les plus \u00e0 droite.</li> </ul>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#parcours-dun-arbre","title":"Parcours d'un arbre","text":""},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#parcours-en-largeur","title":"Parcours en largeur","text":"<p>Le parcours en largeur d'un arbre consiste \u00e0 parcourir l'arbre en commen\u00e7ant par la racine, puis en parcourant les n\u0153uds de chaque niveau de gauche \u00e0 droite.</p> <pre><code>\ngraph TB\n    A[8] --&gt; B[3]\n    A --&gt; C[10]\n    A --&gt; D[1]\n    B --&gt; E[6]\n    B --&gt; F[14]\n    C --&gt; G[4]\n    C --&gt; H[7]\n    C --&gt; I[13]\n</code></pre> <p>Le parcours en largeur de l'arbre ci-dessus donne : 8, 3, 10, 1, 6, 14, 4, 7, 13.</p>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#parcours-en-profondeur","title":"Parcours en profondeur","text":"<p>Le parcours en profondeur d'un arbre consiste \u00e0 parcourir l'arbre en commen\u00e7ant par la racine, puis en parcourant les n\u0153uds de chaque sous-arbre de gauche \u00e0 droite.</p> <pre><code>\ngraph TB\n    A[8] --&gt; B[3]\n    A --&gt; C[10]\n    A --&gt; D[1]\n    B --&gt; E[6]\n    B --&gt; F[14]\n    C --&gt; G[4]\n    C --&gt; H[7]\n    C --&gt; I[13]\n</code></pre> <p>Le parcours en profondeur de l'arbre ci-dessus donne : 8, 3, 6, 14, 10, 1, 4, 7, 13.</p>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#parcours-prefixe","title":"Parcours pr\u00e9fixe","text":"<p>Le parcours pr\u00e9fixe d'un arbre consiste \u00e0 parcourir l'arbre en commen\u00e7ant par le noeud courant, puis en parcourant le fils gauche, puis en parcourant le fils droit. (C'est le parcours en profondeur.)</p> <pre><code>\ngraph TB\n    A[8] --&gt; B[3]\n    A --&gt; C[10]\n    A --&gt; D[1]\n    B --&gt; E[6]\n    B --&gt; F[14]\n    C --&gt; G[4]\n    C --&gt; H[7]\n    C --&gt; I[13]\n</code></pre> <p>Le parcours pr\u00e9fixe de l'arbre ci-dessus donne : 8, 3, 6, 14, 10, 1, 4, 7, 13.</p>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#parcours-infixe","title":"Parcours infixe","text":"<p>Le parcours infixe d'un arbre consiste \u00e0 parcourir l'arbre en commen\u00e7ant par le fils gauche, puis en parcourant le noeud courant, puis en parcourant le fils droit.</p> <pre><code>\ngraph TB\n    A[8] --&gt; B[3]\n    A --&gt; C[10]\n    A --&gt; D[1]\n    B --&gt; E[6]\n    B --&gt; F[14]\n    C --&gt; G[4]\n    C --&gt; H[7]\n    C --&gt; I[13]\n</code></pre> <p>Le parcours infixe de l'arbre ci-dessus donne : 14, 3, 6, 8, 10, 4, 7, 1, 13.</p>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#parcours-postfixe","title":"Parcours postfixe","text":"<p>Le parcours postfixe d'un arbre consiste \u00e0 parcourir l'arbre en commen\u00e7ant par le fils gauche, puis en parcourant le fils droit, puis en parcourant le noeud courant.</p> <pre><code>\ngraph TB\n    A[8] --&gt; B[3]\n    A --&gt; C[10]\n    A --&gt; D[1]\n    B --&gt; E[6]\n    B --&gt; F[14]\n    C --&gt; G[4]\n    C --&gt; H[7]\n    C --&gt; I[13]\n</code></pre> <p>Le parcours postfixe de l'arbre ci-dessus donne : 14, 6, 3, 4, 7, 13, 10, 1, 8.</p>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#arbres-particuliers","title":"Arbres particuliers","text":"<p>Un arbre binaire de recherche poss\u00e9dant $n$ n\u0153uds est un arbre binaire de recherche parfait si tous ses n\u0153uds internes poss\u00e8dent deux fils et si toutes ses feuilles sont situ\u00e9es au m\u00eame niveau. Un arbre binaire de recherche parfait poss\u00e8de $2^n-1$ n\u0153uds.</p> <p>Un arbre Complet est un arbre binaire de recherche parfait dont les feuilles sont situ\u00e9es au niveau $n$ ou $n-1$. Un arbre binaire de recherche complet poss\u00e8de entre $2^{n-1}$ et $2^n-1$ n\u0153uds.</p> <p>Un arbre \u00e9quilibr\u00e9 est un arbre binaire de recherche dont la diff\u00e9rence de hauteur entre les sous-arbres gauche et droit est au plus 1. Un arbre binaire de recherche \u00e9quilibr\u00e9 poss\u00e8de une hauteur en $O(\\log_2(n))$.</p> <p>Un arbre d\u00e9g\u00e9n\u00e9r\u00e9 est un arbre binaire de recherche dont tous les n\u0153uds poss\u00e8dent un seul fils. Un arbre binaire de recherche d\u00e9g\u00e9n\u00e9r\u00e9 poss\u00e8de une hauteur en $O(n)$.</p>"},{"location":"Terminale/StructureDonnees/Arbres/Manuel/#applications","title":"Applications","text":"<ul> <li>Les arbres binaires de recherche sont utilis\u00e9s pour impl\u00e9menter des dictionnaires.</li> <li>Les arbres binaires de recherche sont utilis\u00e9s pour impl\u00e9menter des ensembles.</li> </ul>"}]}